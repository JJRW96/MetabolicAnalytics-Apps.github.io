[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sports Science Models & Applications",
    "section": "",
    "text": "This website provides interactive sports science tools and applications for exercise physiology analysis. The collection includes models for metabolic calculations, performance predictions. Available applications help quantify physiological parameters and analyze the relationships between exercise intensity, metabolism, and athletic performance through evidence-based calculations and visual representations.\nPlease note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. The content will continue to expand over time.\nFor additional tools, take a look at the website I created for my master’s thesis. This site offers similar applications with comprehensive explanations, but comes in German only and centers on examining efficiency factors in cycling performance."
  },
  {
    "objectID": "Mader_Modell.html",
    "href": "Mader_Modell.html",
    "title": "Mader’s metabolic model",
    "section": "",
    "text": "Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. Consequently, some features may not yet be fully implemented or might not always function as expected. Furthermore, please be aware that the models presented here (specifically in Tab 2) are currently primarily for illustrative purposes and may not be exclusively based on strictly scientifically validated physiological and metabolic factors at this stage.The model underlying Tab 2 has also not yet been tested or validated using real-world data. The content will continue to expand over time, and the scientific basis and functionality will be successively improved.\nWith this File Converter App, you can convert and download .tcx files or .csv files to use them in the “Exercise Simulation” tab of the “Mader Simulation App”. Fit-files must first be converted to .csv format using GOTOES File Converter before you can use the File Converter to transform them into a format compatible with the Mader App.\nFullscreen-Link: Mader App\nDownload Example_Race_Data.csv",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Critical Power.html",
    "href": "Critical Power.html",
    "title": "Critical Power, W’ & W’-Balance",
    "section": "",
    "text": "Critical Power Modell\n\n\n\n\nLink: Critical Power App\n\n\nW’-Balance\n\n\n\n\nLink: Critical Power App\n\n\n\n\n\n\n\n\nReferences\n\nDunst, A. K., Hesse, C., & Ueberschär, O. (2024). Understanding optimal cadence dynamics: a systematic analysis of the power-velocity relationship in track cyclists with increasing exercise intensity. Frontiers in Physiology, 15(April), 1–17. https://doi.org/10.3389/fphys.2024.1343601\n\n\nDunst, A. K., Hesse, C., & Ueberschär, O. (2025). Enhancing endurance performance predictions: the role of movement velocity in metabolic simulations demonstrated by cycling cadence. European journal of applied physiology. https://doi.org/10.1007/s00421-024-05663-4\n\n\nHintzy-Cloutier, F., Zameziati, K., & Belli, A. (2003). Influence of the base-line determination on work efficiency during submaximal cycling. Journal of Sports Medicine and Physical Fitness, 43(1), 51–56."
  },
  {
    "objectID": "Critical_Power.html",
    "href": "Critical_Power.html",
    "title": "Critical Power & W’",
    "section": "",
    "text": "Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. The content will continue to expand over time.\n\nCP-Model\n\n\n\n\nLink: Critical-Power App\n\n\nW’-Balance\n\n\n\n\nLink: W’-Balance App",
    "crumbs": [
      "Critical Power & W'"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This website provides interactive sports science tools and applications for exercise physiology analysis. The collection includes models for metabolic calculations, performance predictions. Available applications help quantify physiological parameters and analyze the relationships between exercise intensity, metabolism, and athletic performance through evidence-based calculations and visual representations. Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. The content will continue to expand over time.\nFor additional tools, take a look at the website I created for my master’s thesis. This site offers similar applications with comprehensive explanations, but comes in German only and centers on examining efficiency factors in cycling performance.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "Mader_Modell.html#steady-state-oxygen-uptake-dotvo_2ss",
    "href": "Mader_Modell.html#steady-state-oxygen-uptake-dotvo_2ss",
    "title": "Mader’s metabolic model",
    "section": "Steady-State Oxygen Uptake (\\(\\dot{V}O_{2ss}\\))",
    "text": "Steady-State Oxygen Uptake (\\(\\dot{V}O_{2ss}\\))\nThe steady-state oxygen uptake represents the oxygen consumption at a given exercise intensity when metabolic equilibrium is achieved. In its standard form, \\(\\dot{V}O_{2ss}\\) is calculated using a linear relationship between power output and oxygen demand:\n\\[\n\\dot{V}O_{2ss}(P) = CE_{V\\dot{O}_2} \\cdot P + \\dot{V}O_{2Base}\n\\tag{1}\\]\nWhere: - \\(CE_{V\\dot{O}_2}\\) is the oxygen cost per unit of power output (ml/min/W) - \\(P\\) is the mechanical power output (W) - \\(\\dot{V}O_{2Base}\\) is the resting oxygen uptake (ml/min)\nHowever, as demonstrated by Dunst et al. (2025), this relationship may be influenced by movement velocity (e.g., cycling cadence), with both \\(CE_{V\\dot{O}_2}\\) and \\(\\dot{V}O_{2Base}\\) showing U-shaped relationships with pedaling rate.\nIn the application, the resting oxygen uptake (\\(\\dot{V}O_{2Base}\\)) can be calculated using the Harris-Benedict equations adapted for oxygen consumption:\nFor males: \\[\nh_m = 66.5 + (13.75 \\cdot m) + (5.003 \\cdot l) - (6.775 \\cdot a)\n\\tag{2}\\]\nFor females: \\[\nh_f = 655.1 + (9.563 \\cdot m) + (1.850 \\cdot l) - (4.676 \\cdot a)\n\\tag{3}\\]\nWhere: - \\(m\\) is body mass (kg) - \\(l\\) is height (cm) - \\(a\\) is age (years)\nConverting to oxygen consumption: \\[\n\\dot{V}O_{2Base} = \\frac{h_{f,m}}{24 \\cdot 60 \\cdot k\\ddot{A}} \\cdot 4.1868 \\cdot f \\cdot 1000\n\\tag{4}\\]\nWith: - \\(k\\ddot{A} = 19.946\\) (kJ·L\\(^{-1}\\)) - \\(f = 1.287\\) for males, \\(f = 1.278\\) for females\nThe Shiny application also provides an option for a curvilinear oxygen uptake-power relationship:\n\\[\n\\dot{V}O_{2ss}(P) = a \\cdot P^2 + CE_{start} \\cdot P + \\dot{V}O_{2Base}\n\\tag{5}\\]\nWhere \\(a\\) is an optimized coefficient that ensures the slope at the intersection with \\(\\dot{V}O_{2max}\\) equals the target oxygen cost (\\(CE_{target}\\)). This curvilinear relationship may better represent the oxygen cost at higher intensities for some athletes.\nFor simulation purposes, \\(\\dot{V}O_{2ss}\\) is capped at \\(\\dot{V}O_{2max}\\), as oxygen uptake cannot exceed this physiological maximum:\n\\[\n\\dot{V}O_{2ss} = \\min(\\dot{V}O_{2ss\\text{-unlimited}}, \\dot{V}O_{2max})\n\\tag{6}\\]",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell.html#maximal-lactate-accumulation-rate-vla_ss",
    "href": "Mader_Modell.html#maximal-lactate-accumulation-rate-vla_ss",
    "title": "Mader’s metabolic model",
    "section": "Maximal Lactate Accumulation Rate (\\(vLa_{ss}\\))",
    "text": "Maximal Lactate Accumulation Rate (\\(vLa_{ss}\\))\nThe intensity-specific glycolytic activity, represented by \\(vLa_{ss}\\), is calculated using Michaelis-Menten enzyme kinetics that account for the activation state of glycolysis based on the cytosolic phosphorylation state:\n\\[\nvLa_{ss} = \\frac{vLa_{max}}{1 + ks_2 \\cdot \\left(\\frac{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}{ks_1 \\cdot \\dot{V}O_{2ss}}\\right)^{3/2}}\n\\tag{7}\\]\nWhere: - \\(vLa_{max}\\) is the maximal lactate accumulation rate (mmol·l\\(^{-1}\\)·s\\(^{-1}\\)) - \\(ks_1 = 0.0635\\) (mmol·kg\\(_m^{-1}\\))\\(^2\\) is the 50% activation constant of oxidative phosphorylation - \\(ks_2 = (1.1\\) mmol·kg\\(_m^{-1}\\))\\(^3\\) is the 50% activation constant of glycolysis\nThe term \\(\\left(\\frac{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}{ks_1 \\cdot \\dot{V}O_{2ss}}\\right)^{3/2}\\) represents the phosphorylation state of the muscle cell, which regulates glycolytic flux. As exercise intensity increases and \\(\\dot{V}O_{2ss}\\) approaches \\(\\dot{V}O_{2max}\\), this term decreases, resulting in increased glycolytic activity.\nDunst et al. (2025) found that while \\(vLa_{max}\\) appeared to increase with cycling cadence in a polynomial relationship, this may be an artifact of measurement methodology rather than representing true changes in maximal glycolytic flux. Their findings suggest that \\(vLa_{max}\\) should be treated as cadence-independent for modeling purposes.\nIn the application, \\(vLa_{ss}\\) is converted to mmol·l\\(^{-1}\\)·min\\(^{-1}\\) for visualization purposes:\n\\[\nvLa_{ss} \\text{ [mmol·l}^{-1}\\text{·min}^{-1}\\text{]} = vLa_{ss} \\text{ [mmol·l}^{-1}\\text{·s}^{-1}\\text{]} \\cdot 60\n\\tag{8}\\]",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell.html#lactate-oxidation-rate-vla_ox",
    "href": "Mader_Modell.html#lactate-oxidation-rate-vla_ox",
    "title": "Mader’s metabolic model",
    "section": "Lactate Oxidation Rate (\\(vLa_{ox}\\))",
    "text": "Lactate Oxidation Rate (\\(vLa_{ox}\\))\nThe rate at which lactate is eliminated from the blood through oxidation is calculated as a function of oxygen uptake:\n\\[\nvLa_{ox} = \\frac{CE_{La\\dot{O}_2} \\cdot \\dot{V}O_{2ss}}{VolLa \\cdot 60}\n\\tag{9}\\]\nWhere: - \\(CE_{La\\dot{O}_2} = 0.02049\\) mmol·l\\(^{-1}\\)·ml\\(^{-1}\\) is the lactate equivalent per oxygen uptake - \\(VolLa = 0.4\\) is the lactate distribution volume - The factor 60 converts from per second to per minute\nAs with \\(vLa_{ss}\\), this value is converted to mmol·l\\(^{-1}\\)·min\\(^{-1}\\) for visualization:\n\\[\nvLa_{ox} \\text{ [mmol·l}^{-1}\\text{·min}^{-1}\\text{]} = vLa_{ox} \\text{ [mmol·l}^{-1}\\text{·s}^{-1}\\text{]} \\cdot 60\n\\tag{10}\\]\nThe lactate equivalent (\\(CE_{La\\dot{O}_2}\\)) is divided by body mass in the application to account for individual differences, which affects lactate kinetics.",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell.html#pyruvate-deficit-pd",
    "href": "Mader_Modell.html#pyruvate-deficit-pd",
    "title": "Mader’s metabolic model",
    "section": "Pyruvate Deficit (PD)",
    "text": "Pyruvate Deficit (PD)\nThe pyruvate deficit represents the difference between the capacity to metabolize pyruvate via oxidative phosphorylation and the pyruvate produced by glycolysis:\n\\[\nPD = vLa_{ox} - vLa_{ss}\n\\tag{11}\\]\nA positive PD indicates that the oxidative system can process more pyruvate than is being produced, allowing for fat oxidation. A negative PD indicates lactate accumulation as glycolysis exceeds oxidative capacity.\nThe maximum pyruvate deficit (PD\\(_{max}\\)) corresponds to the intensity with the highest fat oxidation rate, often referred to as FAT\\(_{max}\\):\n\\[\n\\text{FAT}_{max} = \\max(PD)\n\\tag{12}\\]\nThe maximal lactate steady state (MLSS) occurs where PD equals zero, indicating a balance between lactate production and elimination:\n\\[\n\\text{MLSS} = \\{P | PD(P) = 0\\}\n\\tag{13}\\]\nIn the Shiny application, these thresholds are identified by finding the power values corresponding to the maximum of the PD curve and the point where PD crosses zero, respectively.",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell.html#lactate-accumulation",
    "href": "Mader_Modell.html#lactate-accumulation",
    "title": "Mader’s metabolic model",
    "section": "Lactate Accumulation",
    "text": "Lactate Accumulation\nThe lactate accumulation in blood is calculated as the cumulative effect of the imbalance between lactate production and elimination:\n\\[\nLa_{accum}(i) =\n\\begin{cases}\n\\max(0, vLa_{ss}(i) - vLa_{ox}(i)), & \\text{if } i=1 \\\\\nLa_{accum}(i-1) + \\max(0, vLa_{ss}(i) - vLa_{ox}(i)), & \\text{otherwise}\n\\end{cases}\n\\tag{14}\\]\nThis accumulation only begins when \\(vLa_{ss}\\) exceeds \\(vLa_{ox}\\), which typically occurs beyond the MLSS. The implementation includes setting accumulated lactate values to NA for intensities below this threshold to represent the absence of net lactate accumulation.",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell.html#impact-of-movement-velocity-on-metabolic-parameters",
    "href": "Mader_Modell.html#impact-of-movement-velocity-on-metabolic-parameters",
    "title": "Mader’s metabolic model",
    "section": "Impact of Movement Velocity on Metabolic Parameters",
    "text": "Impact of Movement Velocity on Metabolic Parameters\nDunst et al. (2025) demonstrated that incorporating cadence-dependent relationships for \\(CE_{V\\dot{O}_2}\\) and \\(\\dot{V}O_{2Base}\\) into Mader’s model significantly affects predicted power outputs at metabolic thresholds. Their findings revealed polynomial relationships between cadence and threshold-specific power outputs, with optimal cadences of 84 rpm for MAP, 80 rpm for MLSS, and 70 rpm for FAT\\(_{max}\\) when using cadence-dependent \\(CE_{V\\dot{O}_2}\\) and \\(\\dot{V}O_{2Base}\\) with constant \\(vLa_{max}\\).\nThe mathematical functions describing these cadence dependencies were:\n\\[\nCE_{V\\dot{O}_2}(PR) = 0.0004 \\cdot PR^2 - 0.094 \\cdot PR + 16.857\n\\tag{15}\\]\n\\[\n\\dot{V}O_{2Base}(PR) = 0.172 \\cdot PR^2 - 14.460 \\cdot PR + 548.039\n\\tag{16}\\]\nWhere \\(PR\\) is the pedaling rate in rpm.\nWhen these relationships are incorporated into the model, the power output at a given metabolic threshold becomes a function of cadence:\n\\[\nP(PR) = \\frac{\\dot{V}O_{2ss}(PR) - \\dot{V}O_{2Base}(PR)}{CE_{V\\dot{O}_2}(PR)}\n\\tag{17}\\]\nThis approach represents a significant advancement in metabolic modeling, as it acknowledges that metabolic responses are not fixed but vary with movement velocity, offering more precise predictions for endurance performance.",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell.html#practical-application",
    "href": "Mader_Modell.html#practical-application",
    "title": "Mader’s metabolic model",
    "section": "Practical Application",
    "text": "Practical Application\nThe Shiny application visualizes these relationships, allowing users to explore how changes in physiological parameters and cadence affect metabolic thresholds. The app displays power output-specific values for \\(\\dot{V}O_{2ss}\\), \\(vLa_{ss}\\), \\(vLa_{ox}\\), PD, and lactate accumulation, providing insights into the metabolic profile at different intensities.\nFor training prescription, the identification of FATmax and MLSS is particularly valuable, as these thresholds demarcate important training zones. The ability to account for cadence effects enhances the precision of these prescriptions, especially for cyclists who may use different cadences during training and competition.\nAs highlighted by Dunst et al. (2025), neglecting movement velocity in metabolic modeling can lead to significant errors in performance predictions, with deviations of up to 100W in threshold power estimates. By incorporating cadence-dependent relationships, the application provides a more nuanced understanding of the interplay between movement velocity and metabolic processes, enhancing the utility of Mader’s model for endurance performance prediction and training optimization.",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell_text.html",
    "href": "Mader_Modell_text.html",
    "title": "Mader’s metabolic model",
    "section": "",
    "text": "Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. The content will continue to expand over time.\nDownload Example_Race_Data.csv\nLink: Mader App"
  },
  {
    "objectID": "Mader_Modell_text.html#steady-state-oxygen-uptake-dotvo_2ss",
    "href": "Mader_Modell_text.html#steady-state-oxygen-uptake-dotvo_2ss",
    "title": "Mader’s metabolic model",
    "section": "Steady-State Oxygen Uptake (\\(\\dot{V}O_{2ss}\\))",
    "text": "Steady-State Oxygen Uptake (\\(\\dot{V}O_{2ss}\\))\nThe steady-state oxygen uptake represents the oxygen consumption at a given exercise intensity when metabolic equilibrium is achieved. In its standard form, \\(\\dot{V}O_{2ss}\\) is calculated using a linear relationship between power output and oxygen demand:\n\\[\n\\dot{V}O_{2ss}(P) = CE_{V\\dot{O}_2} \\cdot P + \\dot{V}O_{2Base}\n\\tag{2}\\]\n\n\\(CE_{V\\dot{O}_2}\\) is the oxygen cost per unit of power output (ml/min/W)\n\\(P\\) is the mechanical power output (W)\n\\(\\dot{V}O_{2Base}\\) is the resting oxygen uptake (ml/min)\n\nHowever, as demonstrated by Dunst et al. (2025), this relationship may be influenced by movement velocity (e.g., cycling cadence), with both \\(CE_{V\\dot{O}_2}\\) and \\(\\dot{V}O_{2Base}\\) showing U-shaped relationships with pedaling rate.\nIn the application, the resting oxygen uptake (\\(\\dot{V}O_{2Base}\\)) can be calculated using the Harris-Benedict equations adapted for oxygen consumption:\nFor males:\n\\[\nh_m = 66.5 + (13.75 \\cdot m) + (5.003 \\cdot l) - (6.775 \\cdot a)\n\\tag{3}\\]\nFor females:\n\\[\nh_f = 655.1 + (9.563 \\cdot m) + (1.850 \\cdot l) - (4.676 \\cdot a)\n\\tag{4}\\]\n\n\\(m\\) is body mass (kg)\n\\(l\\) is height (cm)\n\\(a\\) is age (years)\n\nConverting to oxygen consumption: \\[\n\\dot{V}O_{2Base} = \\frac{h_{f,m}}{24 \\cdot 60 \\cdot k\\ddot{A}} \\cdot 4.1868 \\cdot f \\cdot 1000\n\\tag{5}\\]\n\n\\(k\\ddot{A} = 19.946\\) (kJ·L\\(^{-1}\\))\n\\(f = 1.287\\) for males, \\(f = 1.278\\) for females\n\nIn the application, this calculation is performed when the user clicks “VO2Base berechnen” (Calculate VO2Base), retrieving the values for gender, body mass, age, and height from the input controls. The calculated value is then automatically updated in the VO2Base slider.\nThe Shiny application also provides an option for a curvilinear oxygen uptake-power relationship:\n\\[\n\\dot{V}O_{2ss}(P) = a \\cdot P^2 + CE_{start} \\cdot P + \\dot{V}O_{2Base}\n\\tag{6}\\]\nWhere \\(a\\) is an optimized coefficient that ensures the slope at the intersection with \\(\\dot{V}O_{2max}\\) equals the target oxygen cost (\\(CE_{target}\\)). This curvilinear relationship may better represent the oxygen cost at higher intensities for some athletes.\nWhen the user selects the “Curvilineare CE-Beziehung” checkbox, the application switches from a single CE value to a range slider allowing the specification of both start and target CE values. The coefficient \\(a\\) is then automatically determined through an optimization process to ensure a smooth transition between these values as power increases.\nFor simulation purposes, \\(\\dot{V}O_{2ss}\\) is capped at \\(\\dot{V}O_{2max}\\), as oxygen uptake cannot exceed this physiological maximum:\n\\[\n\\dot{V}O_{2ss} = \\min(\\dot{V}O_{2ss\\text{-unlimited}}, \\dot{V}O_{2max})\n\\tag{7}\\]"
  },
  {
    "objectID": "Mader_Modell_text.html#maximal-lactate-accumulation-rate-vla_ss",
    "href": "Mader_Modell_text.html#maximal-lactate-accumulation-rate-vla_ss",
    "title": "Mader’s metabolic model",
    "section": "Maximal Lactate Accumulation Rate (\\(vLa_{ss}\\))",
    "text": "Maximal Lactate Accumulation Rate (\\(vLa_{ss}\\))\nThe intensity-specific glycolytic activity, represented by \\(vLa_{ss}\\), is calculated using Michaelis-Menten enzyme kinetics that account for the activation state of glycolysis based on the cytosolic phosphorylation state:\n\\[\nvLa_{ss} = \\frac{vLa_{max}}{1 + ks_2 \\cdot \\left(\\frac{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}{ks_1 \\cdot \\dot{V}O_{2ss}}\\right)^{3/2}}\n\\tag{8}\\]\n\n\\(vLa_{max}\\) is the maximal lactate accumulation rate (mmol·l\\(^{-1}\\)·s\\(^{-1}\\))\n\\(ks_1 = 0.0635\\) (mmol·kg\\(_m^{-1}\\))\\(^2\\) is the 50% activation constant of oxidative phosphorylation\n\\(ks_2 = (1.1\\) mmol·kg\\(_m^{-1}\\))\\(^3\\) is the 50% activation constant of glycolysis\n\nThe derivation of this equation is a critical advancement in Mader’s model that warrants detailed explanation. The original formulation by Mader and Heck (1986) expressed glycolytic activity as a function of ADP concentration:\n\\[\nvLa_{ss} = \\frac{vLa_{max}}{1 + \\frac{ks_2}{[ADP]^3}}\n\\tag{9}\\]\nWhere [ADP] represents the concentration of adenosine diphosphate, which reflects the energy state of the muscle cell. However, measuring [ADP] directly is impractical in applied settings. The ingenious solution was to express [ADP] in terms of measurable parameters related to oxygen uptake.\nThe relationship between oxidative phosphorylation and [ADP] follows a similar Michaelis-Menten pattern:\n\\[\n\\dot{V}O_{2ss} = \\frac{\\dot{V}O_{2max}}{1 + \\frac{ks_1}{[ADP]^2}}\n\\tag{10}\\]\nThrough algebraic manipulation, this equation can be rearranged to express [ADP] in terms of oxygen uptake:\n\\[\n[ADP]^2 = \\frac{ks_1 \\cdot \\dot{V}O_{2ss}}{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}\n\\tag{11}\\]\nTherefore:\n\\[\n[ADP] = \\left(\\frac{ks_1 \\cdot \\dot{V}O_{2ss}}{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}\\right)^{1/2}\n\\tag{12}\\]\nSubstituting this expression into the original equation for \\(vLa_{ss}\\) and raising both sides to appropriate powers:\n\\[\n[ADP]^3 = \\left(\\frac{ks_1 \\cdot \\dot{V}O_{2ss}}{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}\\right)^{3/2}\n\\tag{13}\\]\nThis leads to the final formulation:\n\\[\nvLa_{ss} = \\frac{vLa_{max}}{1 + ks_2 \\cdot \\left(\\frac{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}{ks_1 \\cdot \\dot{V}O_{2ss}}\\right)^{3/2}}\n\\tag{14}\\]\nThis equation elegantly connects glycolytic activity to oxygen uptake parameters, enabling practical application of the model using standard physiological measurements. The exponent 3/2 arises directly from the combination of the squared relationship between oxygen uptake and [ADP] (exponent 1/2) and the cubed relationship between glycolysis and [ADP] (exponent 3).\nInterestingly, in some literature, particularly in running applications Ji et al. (2021), the equation appears with an exponent of 3 rather than 3/2 due to a different algebraic arrangement of the terms. However, both formulations are mathematically equivalent and describe the same physiological relationship.\nThe term \\(\\left(\\frac{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}{ks_1 \\cdot \\dot{V}O_{2ss}}\\right)^{3/2}\\) represents the phosphorylation state of the muscle cell, which regulates glycolytic flux. As exercise intensity increases and \\(\\dot{V}O_{2ss}\\) approaches \\(\\dot{V}O_{2max}\\), this term decreases, resulting in increased glycolytic activity.\nIn the application, this calculation is performed for each power value in the range from 0 W up to approximately 125% of the estimated maximum aerobic power. The constants ks1 and ks2 are hard-coded, while vLamax is adjustable through a slider control, allowing users to simulate different glycolytic capacities.\nDunst et al. (2025) found that while \\(vLa_{max}\\) appeared to increase with cycling cadence in a polynomial relationship, this may be an artifact of measurement methodology rather than representing true changes in maximal glycolytic flux. Their findings suggest that \\(vLa_{max}\\) should be treated as cadence-independent for modeling purposes.\nIn the application, \\(vLa_{ss}\\) is converted to mmol·l\\(^{-1}\\)·min\\(^{-1}\\) for visualization purposes:\n\\[\nvLa_{ss} \\text{ [mmol·l}^{-1}\\text{·min}^{-1}\\text{]} = vLa_{ss} \\text{ [mmol·l}^{-1}\\text{·s}^{-1}\\text{]} \\cdot 60\n\\tag{15}\\]"
  },
  {
    "objectID": "Mader_Modell_text.html#lactate-oxidation-rate-vla_ox",
    "href": "Mader_Modell_text.html#lactate-oxidation-rate-vla_ox",
    "title": "Mader’s metabolic model",
    "section": "Lactate Oxidation Rate (\\(vLa_{ox}\\))",
    "text": "Lactate Oxidation Rate (\\(vLa_{ox}\\))\nThe rate at which lactate is eliminated from the blood through oxidation is calculated as a function of oxygen uptake:\n\\[\nvLa_{ox} = \\frac{CE_{La\\dot{O}_2} \\cdot \\dot{V}O_{2ss}}{VolLa \\cdot 60}\n\\tag{16}\\]\n\n\\(CE_{La\\dot{O}_2} = 0.02049\\) mmol·l\\(^{-1}\\)·ml\\(^{-1}\\) is the lactate equivalent per oxygen uptake\n\\(VolLa = 0.4\\) is the lactate distribution volume\nThe factor 60 converts from per second to per minute\n\nIn the application, \\(CE_{La\\dot{O}_2}\\) is further adjusted by dividing by the user’s body mass. This modification accounts for the fact that lactate kinetics are influenced by the relative distribution of lactate throughout the body. The calculation is performed for each power output in the simulation range.\nAs with \\(vLa_{ss}\\), this value is converted to mmol·l\\(^{-1}\\)·min\\(^{-1}\\) for visualization:\n\\[\nvLa_{ox} \\text{ [mmol·l}^{-1}\\text{·min}^{-1}\\text{]} = vLa_{ox} \\text{ [mmol·l}^{-1}\\text{·s}^{-1}\\text{]} \\cdot 60\n\\tag{17}\\]\nThe lactate equivalent (\\(CE_{La\\dot{O}_2}\\)) is divided by body mass in the application to account for individual differences, which affects lactate kinetics."
  },
  {
    "objectID": "Mader_Modell_text.html#pyruvate-deficit-pd",
    "href": "Mader_Modell_text.html#pyruvate-deficit-pd",
    "title": "Mader’s metabolic model",
    "section": "Pyruvate Deficit (PD)",
    "text": "Pyruvate Deficit (PD)\nThe pyruvate deficit represents the difference between the capacity to metabolize pyruvate via oxidative phosphorylation and the pyruvate produced by glycolysis:\n\\[\nPD = vLa_{ox} - vLa_{ss}\n\\tag{18}\\]\nA positive PD indicates that the oxidative system can process more pyruvate than is being produced, allowing for fat oxidation. A negative PD indicates lactate accumulation as glycolysis exceeds oxidative capacity.\nIn the application, this calculation is performed for each power output value, creating a PD curve across the entire power spectrum. This allows users to visually identify the power range where fat oxidation is possible and where lactate accumulation begins.\nThe maximum pyruvate deficit (PD\\(_{max}\\)) corresponds to the intensity with the highest fat oxidation rate, often referred to as FAT\\(_{max}\\):\n\\[\n\\text{FAT}_{max} = \\max(PD)\n\\tag{19}\\]\nThe application identifies this point by finding the exact power output where the PD curve reaches its maximum. This value is highlighted in the visualization and reported in the text output below the graph.\nThe maximal lactate steady state (MLSS) occurs where PD equals zero, indicating a balance between lactate production and elimination:\n\\[\n\\text{MLSS} = \\{P | PD(P) = 0\\}\n\\tag{20}\\]\nIn the Shiny application, these thresholds are identified by finding the power values corresponding to the maximum of the PD curve and the point where PD crosses zero, respectively. Both thresholds are marked with vertical lines on the graph and their precise values are displayed in text annotations."
  },
  {
    "objectID": "Mader_Modell_text.html#lactate-accumulation",
    "href": "Mader_Modell_text.html#lactate-accumulation",
    "title": "Mader’s metabolic model",
    "section": "Lactate Accumulation",
    "text": "Lactate Accumulation\nThe lactate accumulation in blood is calculated as the cumulative effect of the imbalance between lactate production and elimination:\n\\[\nLa_{accum}(i) =\n\\begin{cases}\n\\max(0, vLa_{ss}(i) - vLa_{ox}(i)), & \\text{if } i=1 \\\\\nLa_{accum}(i-1) + \\max(0, vLa_{ss}(i) - vLa_{ox}(i)), & \\text{otherwise}\n\\end{cases}\n\\tag{21}\\]\nThis accumulation only begins when \\(vLa_{ss}\\) exceeds \\(vLa_{ox}\\), which typically occurs beyond the MLSS. The implementation includes setting accumulated lactate values to NA for intensities below this threshold to represent the absence of net lactate accumulation.\nIn the application, this is handled by identifying the first power output where net lactate production occurs, and then setting all lactate accumulation values below this power to NA. This ensures that the visualization correctly shows no accumulation below the lactate threshold while appropriately displaying the progressive accumulation above this threshold."
  },
  {
    "objectID": "Mader_Modell_text.html#impact-of-movement-velocity-on-metabolic-parameters",
    "href": "Mader_Modell_text.html#impact-of-movement-velocity-on-metabolic-parameters",
    "title": "Mader’s metabolic model",
    "section": "Impact of Movement Velocity on Metabolic Parameters",
    "text": "Impact of Movement Velocity on Metabolic Parameters\nDunst et al. (2025) demonstrated that incorporating cadence-dependent relationships for \\(CE_{V\\dot{O}_2}\\) and \\(\\dot{V}O_{2Base}\\) into Mader’s model significantly affects predicted power outputs at metabolic thresholds. Their findings revealed polynomial relationships between cadence and threshold-specific power outputs, with optimal cadences of 84 rpm for MAP, 80 rpm for MLSS, and 70 rpm for FAT\\(_{max}\\) when using cadence-dependent \\(CE_{V\\dot{O}_2}\\) and \\(\\dot{V}O_{2Base}\\) with constant \\(vLa_{max}\\).\nThe mathematical functions describing these cadence dependencies were:\n\\[\nCE_{V\\dot{O}_2}(PR) = 0.0004 \\cdot PR^2 - 0.094 \\cdot PR + 16.857\n\\tag{22}\\]\n\\[\n\\dot{V}O_{2Base}(PR) = 0.172 \\cdot PR^2 - 14.460 \\cdot PR + 548.039\n\\tag{23}\\]\nWhere \\(PR\\) is the pedaling rate in rpm.\nWhen these relationships are incorporated into the model, the power output at a given metabolic threshold becomes a function of cadence:\n\\[\nP(PR) = \\frac{\\dot{V}O_{2ss}(PR) - \\dot{V}O_{2Base}(PR)}{CE_{V\\dot{O}_2}(PR)}\n\\tag{24}\\]\nThis approach represents a significant advancement in metabolic modeling, as it acknowledges that metabolic responses are not fixed but vary with movement velocity, offering more precise predictions for endurance performance.\nAlthough the current version of the application does not include explicit cadence-dependent parameter controls, the theoretical framework is in place for future implementation. Users could potentially simulate these effects by manually adjusting CE and VO2Base values based on the cadence-specific equations."
  },
  {
    "objectID": "Mader_Modell_text.html#practical-application",
    "href": "Mader_Modell_text.html#practical-application",
    "title": "Mader’s metabolic model",
    "section": "Practical Application",
    "text": "Practical Application\nThe Shiny application visualizes these relationships, allowing users to explore how changes in physiological parameters and cadence affect metabolic thresholds. The app displays power output-specific values for \\(\\dot{V}O_{2ss}\\), \\(vLa_{ss}\\), \\(vLa_{ox}\\), PD, and lactate accumulation, providing insights into the metabolic profile at different intensities.\nIn the first tab, the application calculates and displays detailed metabolic values for three key points: 1. FATmax: The power output with maximum fat oxidation potential 2. MLSS: The highest sustainable power without progressive lactate accumulation 3. BLC ≈ 4.0: The power output corresponding to a blood lactate of approximately 4 mmol/l\nFor each of these points, the text output area shows: - The exact power output (in watts or W/kg) - The corresponding VO2 value (in ml/min or ml/kg/min) - The lactate production rate (vLass) - The lactate elimination rate (vLaox) - The pyruvate deficit (PD) - The accumulated blood lactate\nThese detailed quantitative outputs enable precise training prescription and performance prediction based on individual physiological profiles.\nFor training prescription, the identification of FATmax and MLSS is particularly valuable, as these thresholds demarcate important training zones. The ability to account for cadence effects enhances the precision of these prescriptions, especially for cyclists who may use different cadences during training and competition.\nAs highlighted by Dunst et al. (2025), neglecting movement velocity in metabolic modeling can lead to significant errors in performance predictions, with deviations of up to 100W in threshold power estimates. By incorporating cadence-dependent relationships, the application provides a more nuanced understanding of the interplay between movement velocity and metabolic processes, enhancing the utility of Mader’s model for endurance performance prediction and training optimization.\nRecent critical analysis by Nolte et al. (2022) cautions against over-reliance on the model’s quantitative predictions without careful validation. Their findings suggest that while the model provides valuable qualitative insights into metabolic processes, individual variations in lactate removal capabilities and potential limitations in vLamax measurement protocols may affect the accuracy of threshold predictions. Users should therefore interpret the model outputs as one component of a comprehensive assessment rather than as definitive values.\nNevertheless, the model’s ability to simulate how different combinations of aerobic and anaerobic capacities can produce similar performance outcomes offers unique insights for training prescription. As Ji et al. (2021) demonstrated, the model can help identify specific physiological limitations (aerobic capacity, glycolytic capacity, or movement economy) that may be limiting an athlete’s performance, allowing for more targeted training interventions.\n\nBerechnung der Substratverteilung\nBeschrieben in Heck et al. (2022) S.59 und S.76\nCHO und Fat Oxidation at Rest, at 45 & 65% of VO2max in (Friedman1998?) und (Friedman1999?) und Brooks (2012)"
  },
  {
    "objectID": "Mader_Modell_text.html#exercise-simulation-in-the-application",
    "href": "Mader_Modell_text.html#exercise-simulation-in-the-application",
    "title": "Mader’s metabolic model",
    "section": "Exercise Simulation in the Application",
    "text": "Exercise Simulation in the Application\nThe second tab of the Shiny application implements a dynamic simulation of exercise responses based on Mader’s model. This simulation extends the steady-state calculations to account for the temporal dynamics of physiological adaptation during exercise.\n\nTime-Dependent VO₂ Kinetics\nWhile the first tab focuses on steady-state relationships, the exercise simulation incorporates time constants to model the delay in oxygen uptake response to changes in exercise intensity:\n\\[\n\\dot{V}O_2(t) = \\dot{V}O_2(t-1) + (\\dot{V}O_{2ss} - \\dot{V}O_2(t-1)) \\cdot (1 - e^{-\\Delta t/\\tau})\n\\tag{25}\\]\n\n\\(\\dot{V}O_2(t)\\) is the actual oxygen uptake at time \\(t\\)\n\\(\\dot{V}O_{2ss}\\) is the steady-state oxygen uptake for the current power output\n\\(\\Delta t\\) is the time step (typically 1 second in the simulation)\n\\(\\tau\\) is the time constant, which can differ for increases (\\(\\tau_{up}\\)) and decreases (\\(\\tau_{down}\\)) in intensity\n\nThis mono-exponential model accounts for the delayed response of oxidative metabolism to changes in power output, which significantly affects metabolic responses during interval training or variable-intensity exercise.\nIn the application, users can adjust both the upward and downward time constants through slider controls. This allows for exploration of how different VO2 kinetics profiles affect metabolic responses. The simulation applies these time constants to calculate the actual VO2 value for each second of the exercise bout, starting from the resting VO2 value.\n\n\nDynamic Lactate Modeling\nThe simulation calculates instantaneous rates of lactate production and elimination based on the actual (not steady-state) oxygen uptake at each time point:\n\nLactate production (\\(vLa_{ss}\\)) is calculated using the equation #eq-vLass but with the actual \\(\\dot{V}O_2(t)\\) rather than \\(\\dot{V}O_{2ss}\\). This is a critical distinction, as it accounts for the delayed VO2 response during transitions in exercise intensity.\nLactate elimination incorporates concentration-dependent kinetics:\n\n\\[\nvLa_{ox}(t) = \\frac{CE_{La\\dot{O}_2} \\cdot \\dot{V}O_2(t)}{VolLa \\cdot 60} \\cdot \\min(La(t-1), 15) / 8\n\\tag{26}\\]\nWhere \\(La(t-1)\\) is the blood lactate concentration from the previous time step. The factor \\(\\min(La(t-1), 15) / 8\\) represents the saturation of lactate transporters at higher concentrations, with maximal transport occurring around 8 mmol·l⁻¹ and diminishing returns beyond 15 mmol·l⁻¹.\nThis concentration-dependent modification is an important advancement beyond the steady-state model, as it more realistically represents how lactate clearance increases with elevated blood lactate levels. The application applies this enhanced equation for each time point in the simulation.\n\nThe change in blood lactate concentration is calculated as:\n\n\\[\n\\Delta La(t) = (vLa_{ss}(t) - vLa_{ox}(t)) \\cdot \\Delta t\n\\tag{27}\\]\nThis equation is applied for each time step to determine how much lactate is added to or removed from the blood.\n\nBlood lactate concentration is updated while ensuring it doesn’t fall below baseline:\n\n\\[\nLa(t) = \\max(La_{base}, La(t-1) + \\Delta La(t))\n\\tag{28}\\]\nThe baseline lactate value is user-adjustable through the “Ruhelaktat” slider, allowing simulation of different resting conditions. The application ensures that calculated lactate never falls below this baseline, reflecting the physiological reality that basal metabolism maintains a minimum lactate level."
  },
  {
    "objectID": "Mader_Modell_text.html#calculation-flow-in-tab-1-power-based-metabolic-profile",
    "href": "Mader_Modell_text.html#calculation-flow-in-tab-1-power-based-metabolic-profile",
    "title": "Mader’s metabolic model",
    "section": "Calculation Flow in Tab 1: Power-Based Metabolic Profile",
    "text": "Calculation Flow in Tab 1: Power-Based Metabolic Profile\nIn the first tab of the Shiny application, the calculations proceed through several distinct steps to generate the complete metabolic profile:\n\nFirst, the application retrieves all user-specified parameters from the UI controls, including VO2max, VO2Base, CE values, vLamax, and body mass.\nBased on these parameters, the application calculates the maximum aerobic power and generates a power range from 0 W to approximately 125% of this value, with 1-watt increments for high resolution.\nFor each power value, the application calculates:\n\nThe steady-state VO2 using either linear or curvilinear equations\nThe lactate production rate using the Michaelis-Menten equation\nThe lactate oxidation rate based on VO2\nThe pyruvate deficit as the difference between oxidation and production rates\nThe cumulative lactate accumulation\n\nThe application then identifies key threshold values:\n\nFATmax: The power output at maximum PD\nMLSS: The power output where PD crosses zero\nThe power output corresponding to a blood lactate concentration of 4 mmol/l\n\nThese results are visualized in an interactive plot that shows all calculated variables against power output. The visualization includes special markers for the identified thresholds and a text output area that displays the precise values for these important points.\nIf the user toggles the “Gewichtsbezogene Werte” (weight-based values) checkbox, all power and VO2 values are normalized to body mass, allowing for standardized comparisons between individuals of different sizes.\nThe application also supports swapping the X and Y axes between power and VO2, providing different perspectives on the metabolic relationships.\n\nThe high resolution of the calculations (1-watt increments) ensures precise identification of metabolic thresholds, which is critical for accurate training prescription and performance prediction."
  },
  {
    "objectID": "Mader_Modell_text.html#introduction-to-maders-metabolic-models",
    "href": "Mader_Modell_text.html#introduction-to-maders-metabolic-models",
    "title": "Mader’s metabolic model",
    "section": "Introduction to Mader’s Metabolic Models",
    "text": "Introduction to Mader’s Metabolic Models\nMader’s metabolic simulation model represents a landmark advancement in exercise physiology, providing a mathematical framework for understanding and predicting endurance performance. Developed by Alois Mader in the early 1980s and refined through collaboration with Hans-Hermann Heck, this model has evolved into a sophisticated tool used by researchers and elite coaches alike. The model uniquely incorporates both maximal aerobic capacity (\\(\\dot{V}O_{2max}\\)) and maximal glycolytic rate (\\(vLa_{max}\\)) to simulate the dynamic interplay between oxidative and glycolytic energy systems during exercise.\nThe fundamental strength of Mader’s approach lies in its physiological basis, describing metabolic processes through Michaelis-Menten enzyme kinetics that reflect the activation of energy systems as functions of the cytosolic phosphorylation state. This allows for a mechanistically sound prediction of key performance indicators like Maximal Lactate Steady State (MLSS) and peak fat oxidation (FAT\\(_{max}\\)), offering insights that go beyond empirical threshold concepts.\nIn recent years, researchers have extended the application of this model from cycling to running, validating its transferability across exercise modalities. While the core mathematical principles remain consistent across applications, several sport-specific adaptations have been implemented to account for the fundamental differences between these activities."
  },
  {
    "objectID": "Mader_Modell_text.html#sport-specific-adaptations-cycling-vs.-running",
    "href": "Mader_Modell_text.html#sport-specific-adaptations-cycling-vs.-running",
    "title": "Mader’s metabolic model",
    "section": "Sport-Specific Adaptations: Cycling vs. Running",
    "text": "Sport-Specific Adaptations: Cycling vs. Running\nWhile Mader’s model maintains its fundamental structure across different exercise modalities, several important adaptations are necessary when transferring between cycling and running applications:\n\nIntensity Measurement: In cycling, power output (Watts) serves as the primary intensity metric, offering a direct measure of mechanical work. In contrast, running utilizes velocity (m·s\\(^{-1}\\)) as the intensity parameter, which introduces additional complexities related to terrain, body mass, and running economy.\nOxygen Demand Relationship: For cycling, oxygen demand is typically expressed relative to power output using the constant \\(CE_{V\\dot{O}_2}\\) (ml·min\\(^{-1}\\)·W\\(^{-1}\\)). In running models, this relationship is captured by the parameter Ks4, representing oxygen demand per unit of running velocity (ml·kg\\(^{-1}\\)·min\\(^{-1}\\) per m·s\\(^{-1}\\)).\nEconomy Considerations: Running economy demonstrates greater inter-individual variation than cycling economy due to its weight-bearing nature and the influence of biomechanical factors. Consequently, running models require individual determination of Ks4 through empirical testing, whereas cycling models traditionally used a standardized \\(CE_{V\\dot{O}_2}\\) value across subjects.\nMass-Specific Values: Running calculations typically employ mass-specific values (ml·kg\\(^{-1}\\)·min\\(^{-1}\\)) for oxygen uptake, while cycling calculations often use absolute values (ml·min\\(^{-1}\\)), though weight-normalized values (W·kg\\(^{-1}\\)) are increasingly common for power measurements in cycling.\nModel Validation: The validity of Mader’s model appears to vary between cycling and running. Nolte et al. (2022) found that for both modalities, experimental data showed significant deviations from model predictions, with running data requiring a significantly higher lactate removal constant (\\(k_{re}\\) of 0.1347 vs. 0.0533 mmol·kg·l⁻¹·ml⁻¹ for cycling) to achieve reasonable fit. These findings suggest that fundamental differences in muscle recruitment patterns, blood flow dynamics, and lactate kinetics between running and cycling may not be fully captured by the current model.\nMeasurement Protocols: The procedures for determining vLamax differ between cycling (typically short isokinetic sprints) and running (fixed-distance sprints), potentially introducing methodological biases. Ji et al. (2021) highlighted the need for developing running-specific vLamax assessment protocols to improve the accuracy of the model in running applications.\n\nRecent research by Dunst et al. (2025) has further highlighted the importance of considering movement velocity (cadence in cycling) when applying these models, demonstrating that neglecting this factor can lead to significant errors in threshold power estimates."
  },
  {
    "objectID": "Mader_Modell_text.html#mathematical-formulations-and-critical-analysis",
    "href": "Mader_Modell_text.html#mathematical-formulations-and-critical-analysis",
    "title": "Mader’s metabolic model",
    "section": "Mathematical Formulations and Critical Analysis",
    "text": "Mathematical Formulations and Critical Analysis\nRecent research by Nolte et al. (2022) provides an important mathematical reformulation of Mader’s model that offers new insights into its predictions. By normalizing the key metabolic rates and expressing them in dimensionless form, Nolte’s approach reveals a core prediction of the model: athletes with identical ratios of \\(\\dot{V}O_{2max}\\) to \\(vLa_{max}\\) should demonstrate the same fractional utilization of \\(\\dot{V}O_{2max}\\) at MLSS, regardless of their absolute values for these parameters.\nThis can be expressed mathematically as:\n\\[\n\\%\\dot{V}O_2(MLSS) = f\\left(\\frac{\\dot{V}O_{2max}}{vLa_{max}}, k_{re}\\right)\n\\tag{1}\\]\nWhere \\(k_{re}\\) is the lactate removal constant. This relationship suggests that the model predictions should fall along a single curve when plotting \\(\\%\\dot{V}O_2(MLSS)\\) against \\(\\dot{V}O_{2max}/vLa_{max}\\).\nHowever, when testing this prediction against experimental data from 160 participants across five studies, Nolte found substantial deviations from the predicted relationship. This finding raises important questions about either the model’s assumptions or the accuracy of current measurement protocols, particularly for \\(vLa_{max}\\)."
  },
  {
    "objectID": "Mader_Modell_text.html#alternative-mathematical-formulations",
    "href": "Mader_Modell_text.html#alternative-mathematical-formulations",
    "title": "Mader’s metabolic model",
    "section": "Alternative Mathematical Formulations",
    "text": "Alternative Mathematical Formulations\nNolte et al. (2022) present the activation of oxidative phosphorylation and glycolysis using a slightly different mathematical notation:\n\\[\n\\dot{V}O_2=\\frac{\\dot{V}O_{2,max}}{1+ \\left(\\frac{K_{ox}}{[ADP]}\\right)^{n_{ox}}}\n\\tag{29}\\]\n\\[\n\\dot{c}La_{pr}=\\frac{\\dot{c}La_{max}}{1+ \\left(\\frac{K_{La}}{[ADP]}\\right)^{n_{La}}}\n\\tag{30}\\]\nWhere \\(n_{ox}\\) and \\(n_{La}\\) are the Hill coefficients (typically 2 and 3, respectively), and \\(K_{ox}\\) and \\(K_{La}\\) are the half-maximal activation constants. This formulation places the exponents on the entire fraction rather than just the numerator of the ADP-dependent term, which Nolte argues is more mathematically appropriate as it ensures the argument of the power function remains dimensionless.\nThrough algebraic manipulation, Nolte derives a relationship between normalized net lactate accumulation and normalized oxygen uptake:\n\\[\n\\%\\dot{c}La_{net}= \\left(1+\\left(\\frac{K_{La}}{K_{ox}} \\cdot \\left(\\frac{1-\\%\\dot{V}O_2}{\\%\\dot{V}O_2}\\right)^{\\frac{1}{n_{ox}}}\\right)^{n_{La}}\\right)^{-1} - \\left(\\frac{\\dot{V}O_{2,max}}{\\dot{c}La_{max}}\\right) \\cdot k_{re} \\cdot \\%\\dot{V}O_2\n\\tag{31}\\]\nThis equation reveals that \\(\\%\\dot{c}La_{net}\\) is determined by the difference between a nonlinear term (glycolytic activity) and a linear term (lactate removal). Setting \\(\\%\\dot{c}La_{net}\\) to zero (the condition at MLSS) yields an equation that can only be solved numerically but demonstrates the unique dependence of \\(\\%\\dot{V}O_2\\) at MLSS on the ratio \\(\\dot{V}O_{2,max}/\\dot{c}La_{max}\\).\n\nExercise Termination Criteria\nThe simulation incorporates a lactate-based termination criterion, where exercise is considered to end when blood lactate concentration reaches a user-specified maximum value (\\(La_{max}\\)):\n\\[\n\\text{Terminate if } La(t) \\geq La_{max}\n\\tag{32}\\]\nThis simulates the physiological limitation imposed by severe acidosis during high-intensity exercise.\nIn the application, users can adjust this termination criterion through the “Laktat-Abbruchkriterium” slider. When the simulated blood lactate reaches this threshold, the application identifies the time point and corresponding power output, then truncates all data series at this point. This termination point is marked in the visualization with a vertical line and labeled with the corresponding power output.\n\n\nHandling Variable Power Profiles\nThe application supports three methods for defining power profiles:\n\nStep test simulation: Automatically generates a ramp protocol with user-defined step duration and power increments. Users can adjust the step size in watts, the duration of each step in seconds, and the maximum power to reach.\nInterval example: Pre-defined interval workout with alternating moderate and high-intensity periods, loaded by clicking the “Beispiel Intervalldaten laden” button. This provides a standardized profile for exploring interval training responses.\nCustom data upload: Allows users to import their own power-time data from CSV files through the file upload control. The application supports different CSV formats with options for headers and separators.\n\nFor each approach, the application interpolates between data points to ensure a continuous power profile at 1-second resolution. When the “smooth power” option is enabled, a 10-second moving average filter is applied to reduce noise:\n\\[\nP_{smooth}(t) = \\frac{1}{10} \\sum_{i=t-4}^{t+5} P(i)\n\\tag{33}\\]\nThis smoothing can help reduce the impact of measurement noise in uploaded power data, providing more stable metabolic predictions.\n\n\nPractical Implementation and Visualization\nThe exercise simulation visualizes the dynamic interplay between power output, oxygen uptake, lactate production/elimination rates, and blood lactate concentration throughout the exercise bout. This provides valuable insights into how metabolic stress evolves over time and how the timing of intensity changes affects physiological responses.\nThe visualization includes: - Power output on the primary Y-axis (left side) - Blood lactate concentration on a secondary Y-axis (right side) - Lactate production and elimination rates on the same axis as lactate - VO2 on a third Y-axis (far right) - Time on the X-axis - Markers for the lactate threshold and termination point\nThe application uses a multi-axis plotting system to display all these variables simultaneously, allowing users to observe the relationships between mechanical work, metabolic demand, and physiological responses in real time.\nThe simulation is particularly useful for:\n\nPredicting time-to-exhaustion at different constant power outputs\nOptimizing interval training protocols by visualizing the metabolic consequences of work-recovery ratios\nUnderstanding the impact of VO₂ kinetics on metabolic responses during variable-intensity exercise\nExploring how different physiological profiles (varying VO₂max, vLamax, etc.) respond to the same exercise protocol\n\nBy integrating both steady-state metabolic relationships and time-dependent kinetics, the application provides a comprehensive tool for understanding and predicting metabolic responses to exercise across a wide range of scenarios relevant to both research and applied sport science contexts."
  },
  {
    "objectID": "Mader_Modell_text.html#alternative-modeling-of-movement-velocity",
    "href": "Mader_Modell_text.html#alternative-modeling-of-movement-velocity",
    "title": "Mader’s metabolic model",
    "section": "Alternative Modeling of movement velocity",
    "text": "Alternative Modeling of movement velocity\n\n\n\n\n\n\nFigure 1: Cadence-Test All\n\n\n\n\n\n\n\n\n\nFigure 2: Cadence-Test avg\n\n\n\n\n\n\n\n\n\nFigure 3: VO2SS-Power-Cadence Models"
  },
  {
    "objectID": "Manus/model_equations.html",
    "href": "Manus/model_equations.html",
    "title": "1 Key Equations and Parameters from Mader Model",
    "section": "",
    "text": "Based on the analysis of the Mader 2003 paper and the Heck 2022 paper, I’ve identified the key equations and parameters needed to implement the Mader model for simulating metabolic parameters during a step test.\n\n\n\n\nVO2ss (Steady state oxygen uptake)\nVLamax (Maximum rate of lactate formation)\nVLaox (Rate of lactate elimination by oxidation)\nPyruvate deficit\nMuscle lactate accumulation\nBlood lactate accumulation\npH\nPCr (Phosphocreatine) values\nATP values\n\n\n\n\n\n\nThe equilibrium of the cytosolic high energy phosphate system is described by:\n\nATP/ADP = M1 * PCr/[Pi]\n\nM1 is the apparent equilibrium constant\nM1 = M2 * [H+] where M2 = 1.66 * 10^9 mol^-1\n\nADP = ATP * [Pi] / (M2 * [H+] * PCr)\n\nThis equation allows calculation of free ADP\n\nATP * AMP = M3 * ADP^2\n\nM3 is the equilibrium constant (0.85-1.05)\nAMP * ADP is approximately equivalent to ADP^3\n\nΔGATP,cyt = ΔG0 + R * T * ln(ATP/(ADP * [Pi]))\n\nΔGATP,cyt represents the free energy of the CHEP system\nΔG0 is the standard free energy of the ATP/PCr system (-30.6 kJ/mol)\n\n\n\n\n\nThe rate of oxidative phosphorylation can be calculated as a function of: 1. Free ADP as the substrate 2. A second driving force FDG resulting from the difference of free energy ΔGox,ap - ΔGATP,cyt\n\n\n\nRegulation of glycolysis is calculated as a function of: 1. Free ADP and AMP at the level of PFK 2. PFK is inhibited by decreasing pH resulting from lactate accumulation\n\n\n\nCalculated using a two-compartment model: 1. Active lactate producing space (muscle) 2. Passive space including lactate elimination by combustion\n\n\n\n\n\n\n\nVO2: Oxygen uptake (ml/min or ml/min/kg body mass)\nVO2,a: Current VO2 (ml/s/kg muscle)\nVO2,a,rest: Current VO2 at rest (ml/s/kg muscle)\nVO2max: Maximal oxygen uptake (ml/s/kg muscle or body mass)\nVO2,ss: Steady state of VO2 (ml/s/kg muscle mass wet weight)\ntVO2: Time constant (seconds) of the rise of VO2 from the beginning of exercise\n\n\n\n\n\nvla: Rate of lactic acid formation (mmol/s/kg)\nvla,max: Maximal rate of glycolysis expressed as rate of lactic acid formation (mmol/s/kg)\nvla,max,pH: pH Dependent maximal rate of glycolysis (mmol/s/kg)\nvla,ox: Rate of lactate elimination by oxidation (mmol/min/kg)\nvla,ox,b: Rate of lactate elimination by oxidation in blood (mmol/min/kg)\nvla,ox,m: Rate of lactate elimination by oxidation in muscle (mmol/min/kg)\nvla,ss: Steady-state rate of gross lactic acid formation at pH above 7.4 (mmol/s/kg)\nvla,ss,pH: pH dependent steady-state gross rate of formation of lactic acid (mmol/s/kg)\n\nla-b: Concentration of lactate in blood (mmol/l)\nla-m: Concentration of lactate in muscle (mmol/l)\nla-ss: Steady state concentration of lactate during equilibrium of lactate production and oxidative elimination\n\n\n\n\n\npH: -log10[H+]\npHm: Intracellular cytosolic pH\ndbuff: Coefficient equal to the mean buffering capacity of skeletal muscle\n\n\n\n\n\n\n\n\n\n[GP]: Sum of concentrations of high energy phosphate compounds ([GP]=ATP+PCr) (mmol/kg)\n\n\n\n\n\nvGP,E: Power output expressed in terms of rate of GP consumption during contraction (mmol/s/kg)\nvGP,rest: Power output expressed in terms of rate of GP consumption at rest (mmol/s/kg)\nbPow: Rate of GP consumption per watt (mmol/kg/s/watt)\n\n\n\n\n\nThe extended Mader model includes: 1. Two-compartment system for lactate (muscle and blood) 2. Consideration of hydrogen ion concentration 3. Delayed increase in oxygen supply (O2 deficit) 4. Closed feedback loop of ATP consumption and ATP resynthesis\n\n\n\n\n30-second steps\nStarting power: 60 watts\nIncrement: 20 watts per step\nMaximum power: 500 watts\nDefault VO2max: 6000 ml/min\nDefault VLamax: 0.70\n\n\n\n\n\nImplement the mathematical model in JavaScript\nCreate the step test simulation logic\nCalculate all required metabolic parameters\nDevelop interactive visualization with multiple y-axes\nAdd sliders for VO2max and VLamax adjustment"
  },
  {
    "objectID": "Manus/model_equations.html#overview",
    "href": "Manus/model_equations.html#overview",
    "title": "1 Key Equations and Parameters from Mader Model",
    "section": "",
    "text": "Based on the analysis of the Mader 2003 paper and the Heck 2022 paper, I’ve identified the key equations and parameters needed to implement the Mader model for simulating metabolic parameters during a step test."
  },
  {
    "objectID": "Manus/model_equations.html#metabolic-parameters-to-model",
    "href": "Manus/model_equations.html#metabolic-parameters-to-model",
    "title": "1 Key Equations and Parameters from Mader Model",
    "section": "",
    "text": "VO2ss (Steady state oxygen uptake)\nVLamax (Maximum rate of lactate formation)\nVLaox (Rate of lactate elimination by oxidation)\nPyruvate deficit\nMuscle lactate accumulation\nBlood lactate accumulation\npH\nPCr (Phosphocreatine) values\nATP values"
  },
  {
    "objectID": "Manus/model_equations.html#key-equations",
    "href": "Manus/model_equations.html#key-equations",
    "title": "1 Key Equations and Parameters from Mader Model",
    "section": "",
    "text": "The equilibrium of the cytosolic high energy phosphate system is described by:\n\nATP/ADP = M1 * PCr/[Pi]\n\nM1 is the apparent equilibrium constant\nM1 = M2 * [H+] where M2 = 1.66 * 10^9 mol^-1\n\nADP = ATP * [Pi] / (M2 * [H+] * PCr)\n\nThis equation allows calculation of free ADP\n\nATP * AMP = M3 * ADP^2\n\nM3 is the equilibrium constant (0.85-1.05)\nAMP * ADP is approximately equivalent to ADP^3\n\nΔGATP,cyt = ΔG0 + R * T * ln(ATP/(ADP * [Pi]))\n\nΔGATP,cyt represents the free energy of the CHEP system\nΔG0 is the standard free energy of the ATP/PCr system (-30.6 kJ/mol)\n\n\n\n\n\nThe rate of oxidative phosphorylation can be calculated as a function of: 1. Free ADP as the substrate 2. A second driving force FDG resulting from the difference of free energy ΔGox,ap - ΔGATP,cyt\n\n\n\nRegulation of glycolysis is calculated as a function of: 1. Free ADP and AMP at the level of PFK 2. PFK is inhibited by decreasing pH resulting from lactate accumulation\n\n\n\nCalculated using a two-compartment model: 1. Active lactate producing space (muscle) 2. Passive space including lactate elimination by combustion"
  },
  {
    "objectID": "Manus/model_equations.html#important-parameters",
    "href": "Manus/model_equations.html#important-parameters",
    "title": "1 Key Equations and Parameters from Mader Model",
    "section": "",
    "text": "VO2: Oxygen uptake (ml/min or ml/min/kg body mass)\nVO2,a: Current VO2 (ml/s/kg muscle)\nVO2,a,rest: Current VO2 at rest (ml/s/kg muscle)\nVO2max: Maximal oxygen uptake (ml/s/kg muscle or body mass)\nVO2,ss: Steady state of VO2 (ml/s/kg muscle mass wet weight)\ntVO2: Time constant (seconds) of the rise of VO2 from the beginning of exercise\n\n\n\n\n\nvla: Rate of lactic acid formation (mmol/s/kg)\nvla,max: Maximal rate of glycolysis expressed as rate of lactic acid formation (mmol/s/kg)\nvla,max,pH: pH Dependent maximal rate of glycolysis (mmol/s/kg)\nvla,ox: Rate of lactate elimination by oxidation (mmol/min/kg)\nvla,ox,b: Rate of lactate elimination by oxidation in blood (mmol/min/kg)\nvla,ox,m: Rate of lactate elimination by oxidation in muscle (mmol/min/kg)\nvla,ss: Steady-state rate of gross lactic acid formation at pH above 7.4 (mmol/s/kg)\nvla,ss,pH: pH dependent steady-state gross rate of formation of lactic acid (mmol/s/kg)\n\nla-b: Concentration of lactate in blood (mmol/l)\nla-m: Concentration of lactate in muscle (mmol/l)\nla-ss: Steady state concentration of lactate during equilibrium of lactate production and oxidative elimination\n\n\n\n\n\npH: -log10[H+]\npHm: Intracellular cytosolic pH\ndbuff: Coefficient equal to the mean buffering capacity of skeletal muscle\n\n\n\n\n\n\n\n\n\n[GP]: Sum of concentrations of high energy phosphate compounds ([GP]=ATP+PCr) (mmol/kg)\n\n\n\n\n\nvGP,E: Power output expressed in terms of rate of GP consumption during contraction (mmol/s/kg)\nvGP,rest: Power output expressed in terms of rate of GP consumption at rest (mmol/s/kg)\nbPow: Rate of GP consumption per watt (mmol/kg/s/watt)"
  },
  {
    "objectID": "Manus/model_equations.html#extended-mader-model-from-heck-2022",
    "href": "Manus/model_equations.html#extended-mader-model-from-heck-2022",
    "title": "1 Key Equations and Parameters from Mader Model",
    "section": "",
    "text": "The extended Mader model includes: 1. Two-compartment system for lactate (muscle and blood) 2. Consideration of hydrogen ion concentration 3. Delayed increase in oxygen supply (O2 deficit) 4. Closed feedback loop of ATP consumption and ATP resynthesis"
  },
  {
    "objectID": "Manus/model_equations.html#step-test-protocol-user-requirements",
    "href": "Manus/model_equations.html#step-test-protocol-user-requirements",
    "title": "1 Key Equations and Parameters from Mader Model",
    "section": "",
    "text": "30-second steps\nStarting power: 60 watts\nIncrement: 20 watts per step\nMaximum power: 500 watts\nDefault VO2max: 6000 ml/min\nDefault VLamax: 0.70"
  },
  {
    "objectID": "Manus/model_equations.html#next-steps",
    "href": "Manus/model_equations.html#next-steps",
    "title": "1 Key Equations and Parameters from Mader Model",
    "section": "",
    "text": "Implement the mathematical model in JavaScript\nCreate the step test simulation logic\nCalculate all required metabolic parameters\nDevelop interactive visualization with multiple y-axes\nAdd sliders for VO2max and VLamax adjustment"
  },
  {
    "objectID": "Manus/app_structure.html",
    "href": "Manus/app_structure.html",
    "title": "1 HTML App Structure for Mader Model Step Test Simulation",
    "section": "",
    "text": "This document outlines the structure of the HTML application for simulating a step test using the Mader model. The app will visualize metabolic parameters during a step test with 30-second steps, starting at 60 watts and increasing by 20 watts up to 500 watts.\n\n\n\n\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Mader Model Step Test Simulation&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Mader Model Step Test Simulation&lt;/h1&gt;\n    &lt;/header&gt;\n    \n    &lt;main&gt;\n        &lt;section id=\"controls\"&gt;\n            &lt;!-- Parameter sliders and test controls --&gt;\n        &lt;/section&gt;\n        \n        &lt;section id=\"simulation\"&gt;\n            &lt;!-- Main visualization area --&gt;\n        &lt;/section&gt;\n        \n        &lt;section id=\"parameters\"&gt;\n            &lt;!-- Current parameter values display --&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n    \n    &lt;footer&gt;\n        &lt;p&gt;Based on the Mader model of muscle metabolism&lt;/p&gt;\n    &lt;/footer&gt;\n    \n    &lt;script src=\"https://cdn.jsdelivr.net/npm/chart.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation\"&gt;&lt;/script&gt;\n    &lt;script src=\"simulation.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\n\n/* Main layout and styling */\nbody {\n    font-family: 'Arial', sans-serif;\n    line-height: 1.6;\n    color: #333;\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n    background-color: #f5f5f5;\n}\n\nheader {\n    text-align: center;\n    margin-bottom: 20px;\n}\n\nmain {\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: auto 1fr;\n    grid-template-areas:\n        \"controls simulation\"\n        \"parameters simulation\";\n    gap: 20px;\n}\n\n#controls {\n    grid-area: controls;\n    background-color: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n#simulation {\n    grid-area: simulation;\n    background-color: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    height: 600px;\n}\n\n#parameters {\n    grid-area: parameters;\n    background-color: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nfooter {\n    text-align: center;\n    margin-top: 20px;\n    font-size: 0.8em;\n    color: #666;\n}\n\n/* Slider styling */\n.slider-container {\n    margin-bottom: 15px;\n}\n\n.slider-container label {\n    display: block;\n    margin-bottom: 5px;\n    font-weight: bold;\n}\n\n.slider-container input[type=\"range\"] {\n    width: 100%;\n}\n\n.slider-value {\n    display: inline-block;\n    width: 50px;\n    text-align: right;\n}\n\n/* Button styling */\nbutton {\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n    border-radius: 4px;\n    transition: background-color 0.3s;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n\nbutton:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n}\n\n/* Parameter display styling */\n.parameter-group {\n    margin-bottom: 15px;\n}\n\n.parameter-group h3 {\n    margin-bottom: 5px;\n    font-size: 1em;\n}\n\n.parameter {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 5px;\n}\n\n.parameter-name {\n    font-weight: bold;\n}\n\n.parameter-value {\n    font-family: monospace;\n}\n\n\n\nThe JavaScript file will be organized into several modules:\n\n\n// Constants for the step test protocol\nconst STEP_DURATION_SECONDS = 30;\nconst STARTING_POWER_WATTS = 60;\nconst POWER_INCREMENT_WATTS = 20;\nconst MAX_POWER_WATTS = 500;\n\n// Default parameter values\nconst DEFAULT_VO2MAX_ML_MIN = 6000;\nconst DEFAULT_VLAMAX = 0.70;\n\n// Conversion factors and other constants from the Mader model\n// (These will be extracted from the research papers)\n\n\n\n// Current simulation state\nlet simulationState = {\n    running: false,\n    currentTime: 0,\n    currentPower: 0,\n    currentStep: 0,\n    // ... other state variables\n};\n\n// Model parameters (can be adjusted by sliders)\nlet modelParameters = {\n    vo2max: DEFAULT_VO2MAX_ML_MIN,\n    vlamax: DEFAULT_VLAMAX,\n    // ... other adjustable parameters\n};\n\n// Simulation results storage\nlet simulationResults = {\n    time: [],\n    power: [],\n    vo2: [],\n    vlaox: [],\n    pyruvateDeficit: [],\n    muscleLactate: [],\n    bloodLactate: [],\n    pH: [],\n    pcr: [],\n    atp: [],\n    // ... other result arrays\n};\n\n\n\n// Implementation of the Mader model equations\n\n// ATP-PCr Equilibrium calculations\nfunction calculateADP(atp, pi, hPlus, pcr) {\n    // Implementation of equation: [ADP] = [ATP] * [Pi] / (M2 * [H+] * [PCr])\n    // ...\n}\n\n// Oxidative Phosphorylation calculations\nfunction calculateOxidativePhosphorylation(adp, deltaG) {\n    // Implementation based on Mader model\n    // ...\n}\n\n// Glycolysis calculations\nfunction calculateGlycolysis(adp, amp, pH) {\n    // Implementation based on Mader model\n    // ...\n}\n\n// Lactate dynamics calculations\nfunction calculateLactateDistribution(muscleLactate, bloodLactate) {\n    // Implementation of two-compartment model\n    // ...\n}\n\n// pH calculations\nfunction calculatePH(lactate, bufferingCapacity) {\n    // Implementation based on Mader model\n    // ...\n}\n\n// Main simulation step function\nfunction simulationStep(deltaTime) {\n    // Calculate all metabolic parameters for the current time step\n    // ...\n}\n\n\n\n// Step test protocol implementation\nfunction startStepTest() {\n    // Initialize simulation\n    resetSimulation();\n    simulationState.running = true;\n    simulationState.currentPower = STARTING_POWER_WATTS;\n    \n    // Start simulation loop\n    simulationLoop();\n}\n\nfunction simulationLoop() {\n    // Main simulation loop\n    if (!simulationState.running) return;\n    \n    // Update time\n    simulationState.currentTime += 1; // 1 second increment\n    \n    // Check if we need to increase power (new step)\n    if (simulationState.currentTime % STEP_DURATION_SECONDS === 0) {\n        simulationState.currentStep++;\n        simulationState.currentPower = STARTING_POWER_WATTS + \n            (simulationState.currentStep * POWER_INCREMENT_WATTS);\n        \n        // Check if we've reached max power\n        if (simulationState.currentPower &gt; MAX_POWER_WATTS) {\n            stopSimulation();\n            return;\n        }\n    }\n    \n    // Calculate metabolic parameters for this time point\n    simulationStep(1); // 1 second time step\n    \n    // Store results\n    storeResults();\n    \n    // Update visualization\n    updateCharts();\n    \n    // Continue simulation loop\n    requestAnimationFrame(simulationLoop);\n}\n\nfunction stopSimulation() {\n    simulationState.running = false;\n    // Additional cleanup if needed\n}\n\nfunction resetSimulation() {\n    // Reset all simulation state and results\n    // ...\n}\n\n\n\n// Chart initialization\nlet powerChart;\nlet metabolicChart;\n\nfunction initializeCharts() {\n    // Create Chart.js instances for visualization\n    // ...\n}\n\nfunction updateCharts() {\n    // Update charts with latest simulation data\n    // ...\n}\n\n// UI event handlers\nfunction initializeUI() {\n    // Set up sliders, buttons, and other UI elements\n    // ...\n}\n\nfunction updateParameterDisplay() {\n    // Update the display of current parameter values\n    // ...\n}\n\n// Initialize everything when the page loads\nwindow.addEventListener('DOMContentLoaded', () =&gt; {\n    initializeUI();\n    initializeCharts();\n    updateParameterDisplay();\n});\n\n\n\n\n\n\nUser adjusts parameters using sliders (VO2max, VLamax)\nUser starts the simulation\nStep test protocol runs, increasing power every 30 seconds\nFor each time step:\n\nCurrent power is determined based on the step test protocol\nMetabolic parameters are calculated using the Mader model equations\nResults are stored in arrays\nVisualization is updated\n\nSimulation continues until max power is reached or user stops it\nResults are displayed in charts with multiple y-axes\n\n\n\n\nThe main visualization will consist of two synchronized charts:\n\nPower Chart: Shows power output over time\n\nX-axis: Time (seconds)\nY-axis: Power (watts)\n\nMetabolic Parameters Chart: Shows all metabolic parameters over time\n\nX-axis: Time (seconds) (synchronized with Power Chart)\nMultiple Y-axes:\n\nVO2ss (ml/min)\nVLamax and VLaox (mmol/s/kg)\nPyruvate deficit\nMuscle lactate (mmol/l)\nBlood lactate (mmol/l)\npH\nPCr (mmol/kg)\nATP (mmol/kg)\n\n\n\nEach parameter will have a distinct color and line style for clear differentiation.\n\n\n\n\nParameter Sliders:\n\nVO2max slider (range: 2000-8000 ml/min, default: 6000 ml/min)\nVLamax slider (range: 0.2-1.5, default: 0.70)\nAdditional parameter sliders as needed\n\nSimulation Controls:\n\nStart button\nStop button\nReset button\n\nParameter Display:\n\nCurrent values of all metabolic parameters\nUpdated in real-time during simulation\n\n\n\n\n\n\nImplement the HTML structure\nCreate the CSS styling\nImplement the JavaScript simulation logic\nTest the application with different parameter values\nOptimize performance and user experience"
  },
  {
    "objectID": "Manus/app_structure.html#overview",
    "href": "Manus/app_structure.html#overview",
    "title": "1 HTML App Structure for Mader Model Step Test Simulation",
    "section": "",
    "text": "This document outlines the structure of the HTML application for simulating a step test using the Mader model. The app will visualize metabolic parameters during a step test with 30-second steps, starting at 60 watts and increasing by 20 watts up to 500 watts."
  },
  {
    "objectID": "Manus/app_structure.html#application-components",
    "href": "Manus/app_structure.html#application-components",
    "title": "1 HTML App Structure for Mader Model Step Test Simulation",
    "section": "",
    "text": "&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Mader Model Step Test Simulation&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Mader Model Step Test Simulation&lt;/h1&gt;\n    &lt;/header&gt;\n    \n    &lt;main&gt;\n        &lt;section id=\"controls\"&gt;\n            &lt;!-- Parameter sliders and test controls --&gt;\n        &lt;/section&gt;\n        \n        &lt;section id=\"simulation\"&gt;\n            &lt;!-- Main visualization area --&gt;\n        &lt;/section&gt;\n        \n        &lt;section id=\"parameters\"&gt;\n            &lt;!-- Current parameter values display --&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n    \n    &lt;footer&gt;\n        &lt;p&gt;Based on the Mader model of muscle metabolism&lt;/p&gt;\n    &lt;/footer&gt;\n    \n    &lt;script src=\"https://cdn.jsdelivr.net/npm/chart.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation\"&gt;&lt;/script&gt;\n    &lt;script src=\"simulation.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\n\n/* Main layout and styling */\nbody {\n    font-family: 'Arial', sans-serif;\n    line-height: 1.6;\n    color: #333;\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n    background-color: #f5f5f5;\n}\n\nheader {\n    text-align: center;\n    margin-bottom: 20px;\n}\n\nmain {\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: auto 1fr;\n    grid-template-areas:\n        \"controls simulation\"\n        \"parameters simulation\";\n    gap: 20px;\n}\n\n#controls {\n    grid-area: controls;\n    background-color: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n#simulation {\n    grid-area: simulation;\n    background-color: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    height: 600px;\n}\n\n#parameters {\n    grid-area: parameters;\n    background-color: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nfooter {\n    text-align: center;\n    margin-top: 20px;\n    font-size: 0.8em;\n    color: #666;\n}\n\n/* Slider styling */\n.slider-container {\n    margin-bottom: 15px;\n}\n\n.slider-container label {\n    display: block;\n    margin-bottom: 5px;\n    font-weight: bold;\n}\n\n.slider-container input[type=\"range\"] {\n    width: 100%;\n}\n\n.slider-value {\n    display: inline-block;\n    width: 50px;\n    text-align: right;\n}\n\n/* Button styling */\nbutton {\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n    border-radius: 4px;\n    transition: background-color 0.3s;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n\nbutton:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n}\n\n/* Parameter display styling */\n.parameter-group {\n    margin-bottom: 15px;\n}\n\n.parameter-group h3 {\n    margin-bottom: 5px;\n    font-size: 1em;\n}\n\n.parameter {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 5px;\n}\n\n.parameter-name {\n    font-weight: bold;\n}\n\n.parameter-value {\n    font-family: monospace;\n}\n\n\n\nThe JavaScript file will be organized into several modules:\n\n\n// Constants for the step test protocol\nconst STEP_DURATION_SECONDS = 30;\nconst STARTING_POWER_WATTS = 60;\nconst POWER_INCREMENT_WATTS = 20;\nconst MAX_POWER_WATTS = 500;\n\n// Default parameter values\nconst DEFAULT_VO2MAX_ML_MIN = 6000;\nconst DEFAULT_VLAMAX = 0.70;\n\n// Conversion factors and other constants from the Mader model\n// (These will be extracted from the research papers)\n\n\n\n// Current simulation state\nlet simulationState = {\n    running: false,\n    currentTime: 0,\n    currentPower: 0,\n    currentStep: 0,\n    // ... other state variables\n};\n\n// Model parameters (can be adjusted by sliders)\nlet modelParameters = {\n    vo2max: DEFAULT_VO2MAX_ML_MIN,\n    vlamax: DEFAULT_VLAMAX,\n    // ... other adjustable parameters\n};\n\n// Simulation results storage\nlet simulationResults = {\n    time: [],\n    power: [],\n    vo2: [],\n    vlaox: [],\n    pyruvateDeficit: [],\n    muscleLactate: [],\n    bloodLactate: [],\n    pH: [],\n    pcr: [],\n    atp: [],\n    // ... other result arrays\n};\n\n\n\n// Implementation of the Mader model equations\n\n// ATP-PCr Equilibrium calculations\nfunction calculateADP(atp, pi, hPlus, pcr) {\n    // Implementation of equation: [ADP] = [ATP] * [Pi] / (M2 * [H+] * [PCr])\n    // ...\n}\n\n// Oxidative Phosphorylation calculations\nfunction calculateOxidativePhosphorylation(adp, deltaG) {\n    // Implementation based on Mader model\n    // ...\n}\n\n// Glycolysis calculations\nfunction calculateGlycolysis(adp, amp, pH) {\n    // Implementation based on Mader model\n    // ...\n}\n\n// Lactate dynamics calculations\nfunction calculateLactateDistribution(muscleLactate, bloodLactate) {\n    // Implementation of two-compartment model\n    // ...\n}\n\n// pH calculations\nfunction calculatePH(lactate, bufferingCapacity) {\n    // Implementation based on Mader model\n    // ...\n}\n\n// Main simulation step function\nfunction simulationStep(deltaTime) {\n    // Calculate all metabolic parameters for the current time step\n    // ...\n}\n\n\n\n// Step test protocol implementation\nfunction startStepTest() {\n    // Initialize simulation\n    resetSimulation();\n    simulationState.running = true;\n    simulationState.currentPower = STARTING_POWER_WATTS;\n    \n    // Start simulation loop\n    simulationLoop();\n}\n\nfunction simulationLoop() {\n    // Main simulation loop\n    if (!simulationState.running) return;\n    \n    // Update time\n    simulationState.currentTime += 1; // 1 second increment\n    \n    // Check if we need to increase power (new step)\n    if (simulationState.currentTime % STEP_DURATION_SECONDS === 0) {\n        simulationState.currentStep++;\n        simulationState.currentPower = STARTING_POWER_WATTS + \n            (simulationState.currentStep * POWER_INCREMENT_WATTS);\n        \n        // Check if we've reached max power\n        if (simulationState.currentPower &gt; MAX_POWER_WATTS) {\n            stopSimulation();\n            return;\n        }\n    }\n    \n    // Calculate metabolic parameters for this time point\n    simulationStep(1); // 1 second time step\n    \n    // Store results\n    storeResults();\n    \n    // Update visualization\n    updateCharts();\n    \n    // Continue simulation loop\n    requestAnimationFrame(simulationLoop);\n}\n\nfunction stopSimulation() {\n    simulationState.running = false;\n    // Additional cleanup if needed\n}\n\nfunction resetSimulation() {\n    // Reset all simulation state and results\n    // ...\n}\n\n\n\n// Chart initialization\nlet powerChart;\nlet metabolicChart;\n\nfunction initializeCharts() {\n    // Create Chart.js instances for visualization\n    // ...\n}\n\nfunction updateCharts() {\n    // Update charts with latest simulation data\n    // ...\n}\n\n// UI event handlers\nfunction initializeUI() {\n    // Set up sliders, buttons, and other UI elements\n    // ...\n}\n\nfunction updateParameterDisplay() {\n    // Update the display of current parameter values\n    // ...\n}\n\n// Initialize everything when the page loads\nwindow.addEventListener('DOMContentLoaded', () =&gt; {\n    initializeUI();\n    initializeCharts();\n    updateParameterDisplay();\n});"
  },
  {
    "objectID": "Manus/app_structure.html#data-flow",
    "href": "Manus/app_structure.html#data-flow",
    "title": "1 HTML App Structure for Mader Model Step Test Simulation",
    "section": "",
    "text": "User adjusts parameters using sliders (VO2max, VLamax)\nUser starts the simulation\nStep test protocol runs, increasing power every 30 seconds\nFor each time step:\n\nCurrent power is determined based on the step test protocol\nMetabolic parameters are calculated using the Mader model equations\nResults are stored in arrays\nVisualization is updated\n\nSimulation continues until max power is reached or user stops it\nResults are displayed in charts with multiple y-axes"
  },
  {
    "objectID": "Manus/app_structure.html#visualization-design",
    "href": "Manus/app_structure.html#visualization-design",
    "title": "1 HTML App Structure for Mader Model Step Test Simulation",
    "section": "",
    "text": "The main visualization will consist of two synchronized charts:\n\nPower Chart: Shows power output over time\n\nX-axis: Time (seconds)\nY-axis: Power (watts)\n\nMetabolic Parameters Chart: Shows all metabolic parameters over time\n\nX-axis: Time (seconds) (synchronized with Power Chart)\nMultiple Y-axes:\n\nVO2ss (ml/min)\nVLamax and VLaox (mmol/s/kg)\nPyruvate deficit\nMuscle lactate (mmol/l)\nBlood lactate (mmol/l)\npH\nPCr (mmol/kg)\nATP (mmol/kg)\n\n\n\nEach parameter will have a distinct color and line style for clear differentiation."
  },
  {
    "objectID": "Manus/app_structure.html#user-controls",
    "href": "Manus/app_structure.html#user-controls",
    "title": "1 HTML App Structure for Mader Model Step Test Simulation",
    "section": "",
    "text": "Parameter Sliders:\n\nVO2max slider (range: 2000-8000 ml/min, default: 6000 ml/min)\nVLamax slider (range: 0.2-1.5, default: 0.70)\nAdditional parameter sliders as needed\n\nSimulation Controls:\n\nStart button\nStop button\nReset button\n\nParameter Display:\n\nCurrent values of all metabolic parameters\nUpdated in real-time during simulation"
  },
  {
    "objectID": "Manus/app_structure.html#next-steps",
    "href": "Manus/app_structure.html#next-steps",
    "title": "1 HTML App Structure for Mader Model Step Test Simulation",
    "section": "",
    "text": "Implement the HTML structure\nCreate the CSS styling\nImplement the JavaScript simulation logic\nTest the application with different parameter values\nOptimize performance and user experience"
  },
  {
    "objectID": "Mader_Sprint_Modell.html",
    "href": "Mader_Sprint_Modell.html",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The Sprint Metabolism Model application implements a sophisticated simulation of the biochemical processes that occur during high-intensity exercise. Based on the foundational work of Alois Mader and Hans-Hermann Heck, this model focuses specifically on the rapid changes in metabolite concentrations that characterize sprint activities. Unlike endurance models that emphasize steady-state conditions, this sprint model captures the dynamic, non-steady-state nature of short-duration, high-intensity exercise where ATP-PCr dynamics and anaerobic glycolysis predominate.\nThe model provides a mechanistic framework for understanding muscle fatigue during sprint activities by simulating how high-energy phosphate compounds (ATP, PCr) are depleted and how metabolic by-products (lactate) accumulate over time. These simulations offer insights into the metabolic factors that limit sprint performance and the physiological determinants of sprint capacity.\n\n\n\nThe foundation of the Sprint Metabolism Model lies in understanding the equilibrium reactions that govern energy transfer in muscle cells during high-intensity exercise. Two key reactions are central to this model:\n\n\nThe Creatine Kinase (CK) reaction plays a crucial role in ATP resynthesis during the initial seconds of sprint activity:\n\\[\\text{PCr} + \\text{ADP} + \\text{H}^+ \\rightleftharpoons \\text{ATP} + \\text{Cr}\\]\nThis reaction is characterized by an equilibrium constant (\\(M_1\\)) that determines the relationship between ATP, ADP, PCr, and inorganic phosphate (Pi):\n\\[\\frac{[\\text{ATP}]}{[\\text{ADP}]} = M_1 \\cdot \\frac{[\\text{PCr}]}{[\\text{Pi}]} \\tag{1}\\]\nThe equilibrium constant \\(M_1\\) is pH-dependent and is related to the hydrogen ion concentration by:\n\\[M_1 = [H^+] \\cdot 1.66 \\times 10^9 \\text{ mol}^{-1} \\tag{2}\\]\nAt a pH of 7.0, \\(M_1\\) is approximately 166. This pH-dependency of \\(M_1\\) is physiologically significant as it shows how acidosis (decreased pH) can influence the balance between ATP and ADP.\n\n\n\nThe Adenylate Kinase (AK) reaction acts as a secondary buffer system for ATP levels:\n\\[2\\text{ADP} \\rightleftharpoons \\text{ATP} + \\text{AMP}\\]\nThis reaction is quantified by the equilibrium constant \\(M_3\\):\n\\[[\\text{ATP}] \\cdot [\\text{AMP}] = M_3 \\cdot [\\text{ADP}]^2 \\tag{3}\\]\nThe value of \\(M_3\\) typically ranges from 0.85 to 1.05, with 1.05 used as the default in the model.\n\n\n\n\nTwo critical conservation laws govern the total pool sizes of key metabolites:\n\n\nThe sum of adenine nucleotides remains constant throughout exercise:\n\\[S[A] = [\\text{ATP}] + [\\text{ADP}] + [\\text{AMP}] \\tag{4}\\]\nWhere \\(S[A]\\) is typically around 7 mmol·kg\\(^{-1}\\) muscle wet weight.\n\n\n\nSimilarly, the total phosphate pool remains constant:\n\\[S[C] = [\\text{PCr}] + [\\text{Pi}] \\tag{5}\\]\nWhere \\(S[C]\\) is typically around 26-28 mmol·kg\\(^{-1}\\) muscle wet weight.\n\n\n\n\nBy combining the equilibrium and conservation equations, we can derive expressions for calculating the concentrations of all metabolites based on the current PCr and Pi levels.\nFirst, we define a variable \\(Q\\) based on the Creatine Kinase equilibrium:\n\\[Q = M_1 \\cdot \\frac{[\\text{PCr}]}{[\\text{Pi}]} \\tag{6}\\]\nUsing this variable, we can express ADP concentration as:\n\\[[\\text{ADP}] = \\frac{S[A] \\cdot Q}{M_3 + Q + Q^2} \\tag{7}\\]\nOnce ADP is calculated, ATP and AMP can be determined:\n\\[[\\text{ATP}] = [\\text{ADP}] \\cdot Q \\tag{8}\\]\n\\[[\\text{AMP}] = S[A] - [\\text{ATP}] - [\\text{ADP}] \\tag{9}\\]\nThese equations allow us to calculate the complete metabolite profile at any point during exercise, based on the changing PCr concentration.\n\n\n\nIn the Sprint Metabolism Model, ATP consumption can be specified in two ways:\n\n\nThis approach directly specifies the rate of ATP utilization during exercise:\n\\[\\text{ATP consumption rate} = \\text{mmol} \\cdot \\text{kg}^{-1} \\cdot \\text{s}^{-1} \\tag{10}\\]\nTypical values range from 0.5 to 5 mmol·kg\\(^{-1}\\)·s\\(^{-1}\\), with higher values representing more intense sprint efforts.\n\n\n\nThis alternative approach calculates ATP consumption based on mechanical power output:\n\\[\\text{ATP consumption rate} = \\frac{\\text{Power (W)}}{\\text{Active Muscle Mass (kg)}} \\cdot \\text{WATT\\_TO\\_ATP\\_FACTOR} \\tag{11}\\]\nWhere WATT_TO_ATP_FACTOR is approximately 0.05 mmol·kg\\(^{-1}\\)·s\\(^{-1}\\) per W·kg\\(^{-1}\\).\nThis conversion factor represents the biochemical efficiency of converting ATP energy to mechanical work, accounting for the efficiency losses in the contraction process.\n\n\n\n\nAs PCr becomes depleted and ADP accumulates, glycolysis is activated to provide additional ATP. The activation of glycolysis follows a sigmoid relationship with ADP concentration:\n\\[v_{\\text{La\\_rate}} = \\frac{v_{\\text{La\\_max}} \\cdot [\\text{ADP}]^3}{KS2 + [\\text{ADP}]^3} \\tag{12}\\]\nWhere: - \\(v_{\\text{La\\_max}}\\) is the maximum lactate formation rate (a key parameter representing glycolytic capacity) - \\(KS2\\) is approximately \\((0.15)^3 = 0.003375\\) mmol·kg\\(^{-1}\\) - \\([\\text{ADP}]\\) is the ADP concentration in mmol·kg\\(^{-1}\\)\nThis equation represents a Hill equation with a coefficient of 3, reflecting the steep activation of glycolysis as ADP increases. The cubic relationship with ADP is particularly important for capturing the rapid acceleration of glycolysis during sprint exercise.\n\n\n\nThe free energy available from ATP hydrolysis (\\(\\Delta G_{\\text{ATP}}\\)) is a critical factor in determining when muscular fatigue occurs:\n\\[\\Delta G_{\\text{ATP}} = \\Delta G^0 + RT \\ln\\frac{[\\text{ADP}][\\text{Pi}]}{[\\text{ATP}]} \\tag{13}\\]\nWhere: - \\(\\Delta G^0\\) is approximately -30.5 kJ·mol\\(^{-1}\\) - \\(R\\) is the gas constant (8.314 J·mol\\(^{-1}\\)·K\\(^{-1}\\)) - \\(T\\) is the absolute temperature (310 K or 37°C)\nAs exercise progresses and ATP decreases while ADP and Pi increase, the absolute value of \\(\\Delta G_{\\text{ATP}}\\) decreases, providing less energy for muscle contraction. When ATP falls below approximately 65% of its initial concentration, the free energy becomes insufficient for maintaining muscle force, leading to fatigue.\nThis concept forms the basis for the termination threshold in the simulation, where exercise is considered to end when ATP drops below a user-specified percentage of the initial value (typically 65%).\n\n\n\nThe model implements a time-step approach to simulate the dynamic changes in metabolite concentrations during sprint exercise:\n\nInitialize PCr, Pi, and calculate initial ATP, ADP, and AMP concentrations\nFor each time step (\\(\\Delta t\\), typically 0.05 seconds):\n\nCalculate ATP consumption for the current time step\nReduce PCr by the corresponding amount to resynthesize ATP\nUpdate Pi based on PCr consumption (conservation of total phosphate)\nRecalculate ATP, ADP, and AMP concentrations using equilibrium equations\nCalculate lactate formation rate and accumulate lactate\nCheck if termination criteria are met (ATP below threshold)\n\n\nThis approach allows the model to capture the rapidly changing metabolite concentrations during sprint exercise with high temporal resolution.\n\n\n\nThe application implements the simulation through a series of equations applied at each time step:\n\n\nFor the starting condition, the model calculates the initial equilibrium state:\n\\[Q_{t0} = M_1 \\cdot \\frac{[\\text{PCr}_0]}{[\\text{Pi}_0]} \\tag{14}\\]\n\\[[\\text{ADP}_0] = \\frac{S[A] \\cdot Q_{t0}}{M_3 + Q_{t0} + Q_{t0}^2} \\tag{15}\\]\n\\[[\\text{ATP}_0] = [\\text{ADP}_0] \\cdot Q_{t0} \\tag{16}\\]\n\\[[\\text{AMP}_0] = S[A] - [\\text{ATP}_0] - [\\text{ADP}_0] \\tag{17}\\]\n\n\n\nFor each time step, the model calculates:\n\nATP consumption based on the selected mode: \\[\\text{ATP needed} = \\text{ATP consumption rate} \\cdot \\Delta t \\tag{18}\\]\nPCr utilization to resynthesize ATP: \\[\\text{PCr used} = \\min([\\text{PCr}], \\text{ATP needed}) \\tag{19}\\] \\[[\\text{PCr}]_{t+\\Delta t} = [\\text{PCr}]_t - \\text{PCr used} \\tag{20}\\]\nUpdate Pi based on PCr consumption: \\[[\\text{Pi}]_{t+\\Delta t} = S[C] - [\\text{PCr}]_{t+\\Delta t} \\tag{21}\\]\nRecalculate Q, ADP, ATP, and AMP: \\[Q_{t+\\Delta t} = M_1 \\cdot \\frac{[\\text{PCr}]_{t+\\Delta t}}{[\\text{Pi}]_{t+\\Delta t}} \\tag{22}\\]\n\\[[\\text{ADP}]_{t+\\Delta t} = \\frac{S[A] \\cdot Q_{t+\\Delta t}}{M_3 + Q_{t+\\Delta t} + Q_{t+\\Delta t}^2} \\tag{23}\\]\n\\[[\\text{ATP}]_{t+\\Delta t} = [\\text{ADP}]_{t+\\Delta t} \\cdot Q_{t+\\Delta t} \\tag{24}\\]\n\\[[\\text{AMP}]_{t+\\Delta t} = S[A] - [\\text{ATP}]_{t+\\Delta t} - [\\text{ADP}]_{t+\\Delta t} \\tag{25}\\]\nCalculate lactate formation rate: \\[v_{\\text{La\\_rate}} = \\frac{v_{\\text{La\\_max}} \\cdot [\\text{ADP}]_{t+\\Delta t}^3}{KS2 + [\\text{ADP}]_{t+\\Delta t}^3} \\tag{26}\\]\n\\[[\\text{La}]_{t+\\Delta t} = [\\text{La}]_t + v_{\\text{La\\_rate}} \\cdot \\Delta t \\tag{27}\\]\nCheck termination criteria: \\[\\text{If } [\\text{ATP}]_{t+\\Delta t} &lt; \\frac{\\text{threshold}}{100} \\cdot [\\text{ATP}_0] \\text{ then terminate} \\tag{28}\\]\n\n\n\n\n\nThe application includes a feature to estimate the initial PCr concentration based on body mass and active muscle percentage:\n\\[[\\text{PCr}_0] = \\text{basePCr} + \\text{massAdjustment} + \\text{muscleAdjustment} \\tag{29}\\]\nWhere: - basePCr is the typical value for a healthy adult (≈ 23 mmol·kg\\(^{-1}\\)) - massAdjustment = (bodyMass - 70) × 0.02 - muscleAdjustment = (activeMassPerc - 30) × 0.1\nThis estimation reflects the observation that PCr concentration tends to be higher in more muscular individuals and lower in less active individuals. The function constrains the estimated value to a physiologically plausible range of 15-30 mmol·kg\\(^{-1}\\).\n\n\n\nThe simulation results can be interpreted in terms of the different energy systems that contribute to sprint performance:\n\nATP-PCr System (0-10 seconds): The initial phase shows rapid PCr depletion with relatively stable ATP concentrations, demonstrating the critical buffer role of PCr.\nGlycolytic Contribution (5-20+ seconds): As PCr depletes, ADP increases, activating glycolysis as indicated by the rising lactate formation rate. This represents the transition from PCr to glycolytic dominance.\nFatigue Onset (Termination Point): The point where ATP falls below the critical threshold (typically 65% of initial value) represents the theoretical time at which muscle contraction would become impaired in an actual sprint.\n\nThe model also illustrates key physiological principles:\n\nBuffer Effect of PCr: The initial stability of ATP despite high energy demands demonstrates PCr’s crucial role in buffering ATP levels.\nDelayed Glycolytic Activation: The lag in lactate formation illustrates the delayed activation of glycolysis, which requires ADP accumulation.\nEnergy System Transition: The crossover between PCr depletion and glycolytic activation represents the transition between immediate (ATP-PCr) and short-term (glycolytic) energy systems.\nMetabolic Limitation to Sprint Performance: The termination time provides insight into the metabolic factors that limit sprint duration and intensity.\n\n\n\n\n\n\n\nTraining Prescription: The model can help determine the appropriate work-to-rest ratios for sprint interval training by showing how long it takes to substantially deplete PCr and how long recovery periods should be to allow adequate PCr resynthesis.\nIndividual Differences: By adjusting model parameters (PCr0, vLa_max, active muscle mass), coaches and researchers can explore how individual physiological differences affect sprint performance and fatigue resistance.\nEquipment Selection: Power-based analysis can inform equipment choices (e.g., gear ratios) by showing how different power demands affect metabolic responses and fatigue onset.\n\n\n\n\n\nSimplification of Complex Systems: The model simplifies many aspects of muscle metabolism, including the spatial distribution of metabolites, fiber type heterogeneity, and complex enzyme kinetics.\nFixed Parameter Assumptions: Some parameters (e.g., pH) are assumed constant although they change during intense exercise.\nMechanical Factors Not Included: The model focuses on metabolic factors but does not account for mechanical factors like muscle elasticity, neuromuscular fatigue, or coordination.\nValidation Challenges: Direct validation of the model is challenging because invasive techniques are required to measure intramuscular metabolite concentrations during sprint exercise.\n\nDespite these limitations, the Sprint Metabolism Model provides valuable insights into the dynamic metabolic processes that underlie sprint performance and fatigue, serving as a powerful tool for research, education, and applied sport science."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#introduction-to-the-sprint-metabolism-model",
    "href": "Mader_Sprint_Modell.html#introduction-to-the-sprint-metabolism-model",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The Sprint Metabolism Model application implements a sophisticated simulation of the biochemical processes that occur during high-intensity exercise. Based on the foundational work of Alois Mader and Hans-Hermann Heck, this model focuses specifically on the rapid changes in metabolite concentrations that characterize sprint activities. Unlike endurance models that emphasize steady-state conditions, this sprint model captures the dynamic, non-steady-state nature of short-duration, high-intensity exercise where ATP-PCr dynamics and anaerobic glycolysis predominate.\nThe model provides a mechanistic framework for understanding muscle fatigue during sprint activities by simulating how high-energy phosphate compounds (ATP, PCr) are depleted and how metabolic by-products (lactate) accumulate over time. These simulations offer insights into the metabolic factors that limit sprint performance and the physiological determinants of sprint capacity."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#fundamental-equilibrium-reactions",
    "href": "Mader_Sprint_Modell.html#fundamental-equilibrium-reactions",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The foundation of the Sprint Metabolism Model lies in understanding the equilibrium reactions that govern energy transfer in muscle cells during high-intensity exercise. Two key reactions are central to this model:\n\n\nThe Creatine Kinase (CK) reaction plays a crucial role in ATP resynthesis during the initial seconds of sprint activity:\n\\[\\text{PCr} + \\text{ADP} + \\text{H}^+ \\rightleftharpoons \\text{ATP} + \\text{Cr}\\]\nThis reaction is characterized by an equilibrium constant (\\(M_1\\)) that determines the relationship between ATP, ADP, PCr, and inorganic phosphate (Pi):\n\\[\\frac{[\\text{ATP}]}{[\\text{ADP}]} = M_1 \\cdot \\frac{[\\text{PCr}]}{[\\text{Pi}]} \\tag{1}\\]\nThe equilibrium constant \\(M_1\\) is pH-dependent and is related to the hydrogen ion concentration by:\n\\[M_1 = [H^+] \\cdot 1.66 \\times 10^9 \\text{ mol}^{-1} \\tag{2}\\]\nAt a pH of 7.0, \\(M_1\\) is approximately 166. This pH-dependency of \\(M_1\\) is physiologically significant as it shows how acidosis (decreased pH) can influence the balance between ATP and ADP.\n\n\n\nThe Adenylate Kinase (AK) reaction acts as a secondary buffer system for ATP levels:\n\\[2\\text{ADP} \\rightleftharpoons \\text{ATP} + \\text{AMP}\\]\nThis reaction is quantified by the equilibrium constant \\(M_3\\):\n\\[[\\text{ATP}] \\cdot [\\text{AMP}] = M_3 \\cdot [\\text{ADP}]^2 \\tag{3}\\]\nThe value of \\(M_3\\) typically ranges from 0.85 to 1.05, with 1.05 used as the default in the model."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#conservation-laws-and-metabolite-pools",
    "href": "Mader_Sprint_Modell.html#conservation-laws-and-metabolite-pools",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "Two critical conservation laws govern the total pool sizes of key metabolites:\n\n\nThe sum of adenine nucleotides remains constant throughout exercise:\n\\[S[A] = [\\text{ATP}] + [\\text{ADP}] + [\\text{AMP}] \\tag{4}\\]\nWhere \\(S[A]\\) is typically around 7 mmol·kg\\(^{-1}\\) muscle wet weight.\n\n\n\nSimilarly, the total phosphate pool remains constant:\n\\[S[C] = [\\text{PCr}] + [\\text{Pi}] \\tag{5}\\]\nWhere \\(S[C]\\) is typically around 26-28 mmol·kg\\(^{-1}\\) muscle wet weight."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#calculating-equilibrium-concentrations",
    "href": "Mader_Sprint_Modell.html#calculating-equilibrium-concentrations",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "By combining the equilibrium and conservation equations, we can derive expressions for calculating the concentrations of all metabolites based on the current PCr and Pi levels.\nFirst, we define a variable \\(Q\\) based on the Creatine Kinase equilibrium:\n\\[Q = M_1 \\cdot \\frac{[\\text{PCr}]}{[\\text{Pi}]} \\tag{6}\\]\nUsing this variable, we can express ADP concentration as:\n\\[[\\text{ADP}] = \\frac{S[A] \\cdot Q}{M_3 + Q + Q^2} \\tag{7}\\]\nOnce ADP is calculated, ATP and AMP can be determined:\n\\[[\\text{ATP}] = [\\text{ADP}] \\cdot Q \\tag{8}\\]\n\\[[\\text{AMP}] = S[A] - [\\text{ATP}] - [\\text{ADP}] \\tag{9}\\]\nThese equations allow us to calculate the complete metabolite profile at any point during exercise, based on the changing PCr concentration."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#atp-consumption-during-sprint-exercise",
    "href": "Mader_Sprint_Modell.html#atp-consumption-during-sprint-exercise",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "In the Sprint Metabolism Model, ATP consumption can be specified in two ways:\n\n\nThis approach directly specifies the rate of ATP utilization during exercise:\n\\[\\text{ATP consumption rate} = \\text{mmol} \\cdot \\text{kg}^{-1} \\cdot \\text{s}^{-1} \\tag{10}\\]\nTypical values range from 0.5 to 5 mmol·kg\\(^{-1}\\)·s\\(^{-1}\\), with higher values representing more intense sprint efforts.\n\n\n\nThis alternative approach calculates ATP consumption based on mechanical power output:\n\\[\\text{ATP consumption rate} = \\frac{\\text{Power (W)}}{\\text{Active Muscle Mass (kg)}} \\cdot \\text{WATT\\_TO\\_ATP\\_FACTOR} \\tag{11}\\]\nWhere WATT_TO_ATP_FACTOR is approximately 0.05 mmol·kg\\(^{-1}\\)·s\\(^{-1}\\) per W·kg\\(^{-1}\\).\nThis conversion factor represents the biochemical efficiency of converting ATP energy to mechanical work, accounting for the efficiency losses in the contraction process."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#glycolytic-activation-and-lactate-formation",
    "href": "Mader_Sprint_Modell.html#glycolytic-activation-and-lactate-formation",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "As PCr becomes depleted and ADP accumulates, glycolysis is activated to provide additional ATP. The activation of glycolysis follows a sigmoid relationship with ADP concentration:\n\\[v_{\\text{La\\_rate}} = \\frac{v_{\\text{La\\_max}} \\cdot [\\text{ADP}]^3}{KS2 + [\\text{ADP}]^3} \\tag{12}\\]\nWhere: - \\(v_{\\text{La\\_max}}\\) is the maximum lactate formation rate (a key parameter representing glycolytic capacity) - \\(KS2\\) is approximately \\((0.15)^3 = 0.003375\\) mmol·kg\\(^{-1}\\) - \\([\\text{ADP}]\\) is the ADP concentration in mmol·kg\\(^{-1}\\)\nThis equation represents a Hill equation with a coefficient of 3, reflecting the steep activation of glycolysis as ADP increases. The cubic relationship with ADP is particularly important for capturing the rapid acceleration of glycolysis during sprint exercise."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#the-free-energy-of-atp-hydrolysis-and-fatigue",
    "href": "Mader_Sprint_Modell.html#the-free-energy-of-atp-hydrolysis-and-fatigue",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The free energy available from ATP hydrolysis (\\(\\Delta G_{\\text{ATP}}\\)) is a critical factor in determining when muscular fatigue occurs:\n\\[\\Delta G_{\\text{ATP}} = \\Delta G^0 + RT \\ln\\frac{[\\text{ADP}][\\text{Pi}]}{[\\text{ATP}]} \\tag{13}\\]\nWhere: - \\(\\Delta G^0\\) is approximately -30.5 kJ·mol\\(^{-1}\\) - \\(R\\) is the gas constant (8.314 J·mol\\(^{-1}\\)·K\\(^{-1}\\)) - \\(T\\) is the absolute temperature (310 K or 37°C)\nAs exercise progresses and ATP decreases while ADP and Pi increase, the absolute value of \\(\\Delta G_{\\text{ATP}}\\) decreases, providing less energy for muscle contraction. When ATP falls below approximately 65% of its initial concentration, the free energy becomes insufficient for maintaining muscle force, leading to fatigue.\nThis concept forms the basis for the termination threshold in the simulation, where exercise is considered to end when ATP drops below a user-specified percentage of the initial value (typically 65%)."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#time-step-simulation-approach",
    "href": "Mader_Sprint_Modell.html#time-step-simulation-approach",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The model implements a time-step approach to simulate the dynamic changes in metabolite concentrations during sprint exercise:\n\nInitialize PCr, Pi, and calculate initial ATP, ADP, and AMP concentrations\nFor each time step (\\(\\Delta t\\), typically 0.05 seconds):\n\nCalculate ATP consumption for the current time step\nReduce PCr by the corresponding amount to resynthesize ATP\nUpdate Pi based on PCr consumption (conservation of total phosphate)\nRecalculate ATP, ADP, and AMP concentrations using equilibrium equations\nCalculate lactate formation rate and accumulate lactate\nCheck if termination criteria are met (ATP below threshold)\n\n\nThis approach allows the model to capture the rapidly changing metabolite concentrations during sprint exercise with high temporal resolution."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#mathematical-implementation-in-the-application",
    "href": "Mader_Sprint_Modell.html#mathematical-implementation-in-the-application",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The application implements the simulation through a series of equations applied at each time step:\n\n\nFor the starting condition, the model calculates the initial equilibrium state:\n\\[Q_{t0} = M_1 \\cdot \\frac{[\\text{PCr}_0]}{[\\text{Pi}_0]} \\tag{14}\\]\n\\[[\\text{ADP}_0] = \\frac{S[A] \\cdot Q_{t0}}{M_3 + Q_{t0} + Q_{t0}^2} \\tag{15}\\]\n\\[[\\text{ATP}_0] = [\\text{ADP}_0] \\cdot Q_{t0} \\tag{16}\\]\n\\[[\\text{AMP}_0] = S[A] - [\\text{ATP}_0] - [\\text{ADP}_0] \\tag{17}\\]\n\n\n\nFor each time step, the model calculates:\n\nATP consumption based on the selected mode: \\[\\text{ATP needed} = \\text{ATP consumption rate} \\cdot \\Delta t \\tag{18}\\]\nPCr utilization to resynthesize ATP: \\[\\text{PCr used} = \\min([\\text{PCr}], \\text{ATP needed}) \\tag{19}\\] \\[[\\text{PCr}]_{t+\\Delta t} = [\\text{PCr}]_t - \\text{PCr used} \\tag{20}\\]\nUpdate Pi based on PCr consumption: \\[[\\text{Pi}]_{t+\\Delta t} = S[C] - [\\text{PCr}]_{t+\\Delta t} \\tag{21}\\]\nRecalculate Q, ADP, ATP, and AMP: \\[Q_{t+\\Delta t} = M_1 \\cdot \\frac{[\\text{PCr}]_{t+\\Delta t}}{[\\text{Pi}]_{t+\\Delta t}} \\tag{22}\\]\n\\[[\\text{ADP}]_{t+\\Delta t} = \\frac{S[A] \\cdot Q_{t+\\Delta t}}{M_3 + Q_{t+\\Delta t} + Q_{t+\\Delta t}^2} \\tag{23}\\]\n\\[[\\text{ATP}]_{t+\\Delta t} = [\\text{ADP}]_{t+\\Delta t} \\cdot Q_{t+\\Delta t} \\tag{24}\\]\n\\[[\\text{AMP}]_{t+\\Delta t} = S[A] - [\\text{ATP}]_{t+\\Delta t} - [\\text{ADP}]_{t+\\Delta t} \\tag{25}\\]\nCalculate lactate formation rate: \\[v_{\\text{La\\_rate}} = \\frac{v_{\\text{La\\_max}} \\cdot [\\text{ADP}]_{t+\\Delta t}^3}{KS2 + [\\text{ADP}]_{t+\\Delta t}^3} \\tag{26}\\]\n\\[[\\text{La}]_{t+\\Delta t} = [\\text{La}]_t + v_{\\text{La\\_rate}} \\cdot \\Delta t \\tag{27}\\]\nCheck termination criteria: \\[\\text{If } [\\text{ATP}]_{t+\\Delta t} &lt; \\frac{\\text{threshold}}{100} \\cdot [\\text{ATP}_0] \\text{ then terminate} \\tag{28}\\]"
  },
  {
    "objectID": "Mader_Sprint_Modell.html#pcr-estimation-based-on-body-composition",
    "href": "Mader_Sprint_Modell.html#pcr-estimation-based-on-body-composition",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The application includes a feature to estimate the initial PCr concentration based on body mass and active muscle percentage:\n\\[[\\text{PCr}_0] = \\text{basePCr} + \\text{massAdjustment} + \\text{muscleAdjustment} \\tag{29}\\]\nWhere: - basePCr is the typical value for a healthy adult (≈ 23 mmol·kg\\(^{-1}\\)) - massAdjustment = (bodyMass - 70) × 0.02 - muscleAdjustment = (activeMassPerc - 30) × 0.1\nThis estimation reflects the observation that PCr concentration tends to be higher in more muscular individuals and lower in less active individuals. The function constrains the estimated value to a physiologically plausible range of 15-30 mmol·kg\\(^{-1}\\)."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#physiological-interpretation-of-results",
    "href": "Mader_Sprint_Modell.html#physiological-interpretation-of-results",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The simulation results can be interpreted in terms of the different energy systems that contribute to sprint performance:\n\nATP-PCr System (0-10 seconds): The initial phase shows rapid PCr depletion with relatively stable ATP concentrations, demonstrating the critical buffer role of PCr.\nGlycolytic Contribution (5-20+ seconds): As PCr depletes, ADP increases, activating glycolysis as indicated by the rising lactate formation rate. This represents the transition from PCr to glycolytic dominance.\nFatigue Onset (Termination Point): The point where ATP falls below the critical threshold (typically 65% of initial value) represents the theoretical time at which muscle contraction would become impaired in an actual sprint.\n\nThe model also illustrates key physiological principles:\n\nBuffer Effect of PCr: The initial stability of ATP despite high energy demands demonstrates PCr’s crucial role in buffering ATP levels.\nDelayed Glycolytic Activation: The lag in lactate formation illustrates the delayed activation of glycolysis, which requires ADP accumulation.\nEnergy System Transition: The crossover between PCr depletion and glycolytic activation represents the transition between immediate (ATP-PCr) and short-term (glycolytic) energy systems.\nMetabolic Limitation to Sprint Performance: The termination time provides insight into the metabolic factors that limit sprint duration and intensity."
  },
  {
    "objectID": "Mader_Sprint_Modell.html#applications-and-limitations",
    "href": "Mader_Sprint_Modell.html#applications-and-limitations",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "Training Prescription: The model can help determine the appropriate work-to-rest ratios for sprint interval training by showing how long it takes to substantially deplete PCr and how long recovery periods should be to allow adequate PCr resynthesis.\nIndividual Differences: By adjusting model parameters (PCr0, vLa_max, active muscle mass), coaches and researchers can explore how individual physiological differences affect sprint performance and fatigue resistance.\nEquipment Selection: Power-based analysis can inform equipment choices (e.g., gear ratios) by showing how different power demands affect metabolic responses and fatigue onset.\n\n\n\n\n\nSimplification of Complex Systems: The model simplifies many aspects of muscle metabolism, including the spatial distribution of metabolites, fiber type heterogeneity, and complex enzyme kinetics.\nFixed Parameter Assumptions: Some parameters (e.g., pH) are assumed constant although they change during intense exercise.\nMechanical Factors Not Included: The model focuses on metabolic factors but does not account for mechanical factors like muscle elasticity, neuromuscular fatigue, or coordination.\nValidation Challenges: Direct validation of the model is challenging because invasive techniques are required to measure intramuscular metabolite concentrations during sprint exercise.\n\nDespite these limitations, the Sprint Metabolism Model provides valuable insights into the dynamic metabolic processes that underlie sprint performance and fatigue, serving as a powerful tool for research, education, and applied sport science."
  },
  {
    "objectID": "Cadence_Test.html",
    "href": "Cadence_Test.html",
    "title": "Cadence Tests",
    "section": "",
    "text": "Figure 1: Cadence Tests\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Cadence Test - 0 Watt\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Cadence Test - 200 Watt\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: VO2,SS x Cadence + Cycline Efficiency at 0 and 200 Watt\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5: VO2,SS x Cadence + Cycline Efficiency at 0 and 200 Watt\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 6: VO2,SS x Cadence + Cycline Efficiency at 0 and 200 Watt\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 7: VO2,SS x Cadence + Cycline Efficiency at 0 & 100 & 200 Watt",
    "crumbs": [
      "Cadence Tests"
    ]
  },
  {
    "objectID": "Cycling_Forces.html",
    "href": "Cycling_Forces.html",
    "title": "Cycling Power Calculator",
    "section": "",
    "text": "Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. The content will continue to expand over time.\nLink: Cycling Power Calculator",
    "crumbs": [
      "Cycling Power Calculator"
    ]
  },
  {
    "objectID": "Mader_Modell.html#introduction",
    "href": "Mader_Modell.html#introduction",
    "title": "Mader’s metabolic model",
    "section": "Introduction",
    "text": "Introduction\nThe Mader’s Metabolic Simulation App is an interactive, web-based tool meticulously designed to model, simulate, and visualize multifaceted aspects of human exercise metabolism. The application’s core framework is deeply rooted in the established metabolic principles and sophisticated mathematical models developed over decades by Prof. Dr. Alois Mader and his collaborators (e.g., Mader (1984); Mader & Heck (1986); Mader & Allmer (1996); Mader (2003)). This tool empowers users—ranging from students and coaches to researchers and athletes—to explore complex physiological interactions in two primary modes:\n\nSteady-state metabolic responses to a spectrum of power outputs. This mode allows for detailed examination of the intricate relationships between mechanical power, oxygen uptake (\\(\\dot{V}O_2\\)), the kinetics of lactate production (\\(vLa_{SS}\\)) and lactate oxidation (\\(vLa_{ox}\\)), the resulting pyruvate deficit (PD), and the theoretical lactate accumulation. This is accessible via the “P-V̇O₂-La Dynamics” tab.\nDynamic metabolic changes as they unfold during exercise. This mode facilitates the simulation of physiological responses to predefined exercise protocols, such as incremental step tests, or to custom-loaded power data from actual training sessions or laboratory tests. This is found in the “Exercise Simulation” tab.\n\nThis comprehensive guide aims to provide an in-depth understanding of the app’s rich functionalities. It will offer detailed explanations of the numerous input parameters, clarify the underlying model assumptions and their physiological bases, and guide the interpretation of the extensive outputs and dynamic visualizations generated by the application.",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell.html#main-application-tabs",
    "href": "Mader_Modell.html#main-application-tabs",
    "title": "Mader’s metabolic model",
    "section": "Main Application Tabs",
    "text": "Main Application Tabs\nThe application is structured into two primary tabs, each dedicated to a distinct yet complementary approach to metabolic modeling:\n\nP-V̇O₂-La Dynamics: This tab is foundational for understanding the metabolic system under conditions of equilibrium. It models physiological responses assuming that, at each discrete power output level, the body has achieved a stable metabolic state. This mode can be used for dissecting fundamental physiological relationships, identifying critical metabolic thresholds (like MLSS and Fatmax), and understanding how individual physiological parameters shape an athlete’s steady-state performance capacity.\nExercise Simulation: This tab transitions from steady-state assumptions to the simulation of dynamic, time-dependent metabolic responses. It allows users to model how physiological variables change during continuous or intermittent exercise protocols, where steady states may not be achieved or are constantly being perturbed. This is particularly useful for analyzing the demands of specific training sessions, predicting metabolic responses to race scenarios, understanding the impact of \\(\\dot{V}O_2\\) kinetics, and exploring the interplay of energy systems over time.",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "href": "Mader_Modell.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "title": "Mader’s metabolic model",
    "section": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)",
    "text": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)\nThis section of the application is dedicated to exploring the metabolic responses of the human body under the assumption that a physiological steady state has been reached for each given power output. The calculations are primarily based on Prof. Mader’s comprehensive metabolic model, which intricately links aerobic energy production with anaerobic glycolysis and lactate metabolism.\n\nControl Panel: P-V̇O₂-La Dynamics\nLocated in the sidebar, this panel contains several control groups that allow the user to precisely adjust the model parameters for the steady-state analysis. Each parameter influences the shape and characteristics of the P-\\(\\dot{V}O_2\\)-La curves.\n\nOxygen Demand Settings\nThis section defines the fundamental relationship between mechanical power output (P, typically in Watts) and the corresponding steady-state oxygen uptake (\\(\\dot{V}O_{2,SS}\\), typically in ml·min⁻¹). This P-\\(\\dot{V}O_2\\) relationship is a cornerstone of exercise physiology, as its slope and intercept reflect the overall efficiency of converting metabolic energy into external mechanical work.\n\nCurvilinear CE relationship (Checkbox): This toggle allows the user to select between two distinct mathematical models for describing the P-\\(\\dot{V}O_2\\) relationship:\n\nLinear Model (Unchecked - Default): This model assumes a constant oxygen cost per unit of work performed above the baseline oxygen uptake (\\(\\dot{V}O_{2,Base}\\)). The relationship is mathematically defined as: \\[ \\dot{V}O_{2,SS} = CE \\cdot P + \\dot{V}O_{2,Base} \\] In this equation, \\(CE\\) (Cost of Exercise) represents the slope of the line (\\(\\Delta\\dot{V}O_2 / \\Delta P\\)), indicating the volume of oxygen (in ml/min) required for each additional Watt of power output. \\(\\dot{V}O_{2,Base}\\) is the y-intercept, representing the oxygen uptake during rest + oxygen uptake of unloaded cycling (i.e., the metabolic cost associated with moving the limbs against minimal internal resistance without performing significant external work on the ergometer).\nCurvilinear Model (Checked): This model implements a quadratic (second-order polynomial) relationship. It acknowledges the widely observed physiological phenomenon that mechanical efficiency often decreases at higher exercise intensities, particularly above the lactate threshold or critical power. This leads to a disproportionally greater increase in \\(\\dot{V}O_2\\) for a given increment in power output. This upward deviation from linearity is related to the “\\(\\dot{V}O_2\\) slow component” observed during prolonged constant-load exercise (Barstow, 1994; Hintzy-Cloutier et al., 2003; Zoladz et al., 1995), but here it’s applied to describe the steady-state \\(\\dot{V}O_2\\) across different intensities. The formula used is: \\[ \\dot{V}O_{2,SS} = a \\cdot P^2 + CE_{Start} \\cdot P + \\dot{V}O_{2,Base} \\] \\(CE_{Start}\\) represents the initial slope (and thus initial efficiency) at very low power outputs. The coefficient \\(a\\) determines the degree of curvature of the P-\\(\\dot{V}O_2\\) relationship. Within the app, this coefficient \\(a\\) is automatically calculated. This calculation is designed such that the slope of this curvilinear P-\\(\\dot{V}O_2\\) relationship, specifically at the power output where \\(\\dot{V}O_{2,SS}\\) would theoretically intersect \\(\\dot{V}O_{2,max}\\), matches the user-defined \\(CE_{Target}\\) value. This sophisticated approach allows for a more nuanced representation of how efficiency changes across the intensity spectrum.\n\nCE (ml·min⁻¹·W⁻¹):\n\nThis slider sets the constant Cost of Exercise (\\(CE\\)). While the app’s slider offers a broad range (8 to 15 ml·min⁻¹·W⁻¹), typical physiological values for well-trained cyclists often fall within a narrower band, generally between 10.0 and 12.0 ml·min⁻¹·W⁻¹ (Åstrand et al., 2003; Rassouli & Thurnheer, 2015). Values outside this range can certainly occur, depending on factors like training status (untrained individuals may have higher CEs), muscle fiber type composition, pedaling technique, and even equipment (e.g., aerodynamic drag at higher speeds, though this model primarily focuses on ergometer cycling). Lower CE values inherently indicate higher gross mechanical efficiency for the external work performed.\nDelta Efficiency (Δη): This derived metric quantifies the efficiency of converting metabolic energy into additional mechanical work, specifically the efficiency of the work performed above the \\(\\dot{V}O_{2,Base}\\) level. It is calculated from the \\(CE\\) value and the caloric equivalent of oxygen (energy yield per liter of O₂ consumed). A critical point is that the caloric equivalent of oxygen is not constant; it varies depending on the substrate mixture being oxidized, which is reflected by the Respiratory Quotient (RQ). RQ values typically range from approximately 0.70 (pure fat oxidation) to 1.00 (pure carbohydrate oxidation), corresponding to caloric equivalents from approximately 19.6 kJ·L O₂⁻¹ to 21.1 kJ·L O₂⁻¹ (Stegemann, 1991). Because the app dynamically calculates a predicted RQ based on the modeled substrate utilization, Δη is presented as a range (e.g., 24.7-26.5%) to account for this RQ variability across intensities. Conceptually, Δη can be thought of as: \\[ \\Delta\\eta = \\frac{\\text{Change in Work Rate}}{\\text{Change in Energy Expenditure Rate above } \\dot{V}O_{2,Base}} \\] A more direct calculation based on CE is: \\[ \\Delta\\eta = \\frac{1}{\\left( \\frac{CE \\cdot \\text{Caloric Equivalent per L O}_2}{60} \\right)} \\] where CE is in ml O₂·min⁻¹·W⁻¹, Caloric Equivalent per L O₂ is in kJ·L O₂⁻¹, and the division by 60 converts the denominator (which represents oxygen cost in kJ per kJ of work) from a per Watt basis to a per kJ/min basis to match the numerator (implicitly 1 kJ/min of work for 1 kJ/min of energy expenditure if efficiency were 100%). Note: 1 W = 1 J·s⁻¹ = 0.06 kJ·min⁻¹.\nηgross (Fatmax | MLSS): Gross efficiency (ηgross) is a fundamental measure of whole-body mechanical efficiency. It is calculated as the ratio of the mechanical work performed (Power output, converted from Watts to kJ/min) to the total aerobic energy expenditure (also in kJ/min, derived from \\(\\dot{V}O_{2,SS}\\) and its caloric equivalent): \\[ \\eta_{\\text{gross}} = \\frac{\\text{Power output [kJ/min]}}{\\text{Total Aerobic Energy Expenditure [kJ/min]}} \\times 100\\% \\] The Mader App calculates and displays ηgross at two physiologically significant power outputs:\n\nFatmax: The power output at which the rate of fat oxidation is maximal. This intensity is often targeted in training for enhancing fat metabolism.\nMLSS (Maximal Lactate Steady State): The highest power output that can theoretically be sustained for a prolonged period (e.g., 30-60 minutes) without a continual rise in blood lactate concentration. This is a critical marker of endurance performance. The app uses its internal model to predict the RQ at these specific intensities (Fatmax and MLSS) to determine the most accurate caloric equivalent for oxygen for these ηgross calculations. Typical gross efficiencies observed in cycling are in the range of 19-22% (Coyle et al., 1991; Faria et al., 2005).\n\nηnet (Fatmax | MLSS): Net efficiency (ηnet) is conceptually similar to gross efficiency but aims to isolate the efficiency of the muscular work itself by subtracting the energy expenditure at rest (\\(\\dot{V}O_{2,Base}\\)). The formula is: \\[ \\eta_{\\text{net}} = \\frac{\\text{Power output [kJ/min]}}{(\\text{Total Aerobic Energy Expenditure [kJ/min]}) - (\\text{Energy Expenditure at } \\dot{V}O_{2,Base} \\text{ [kJ/min]})} \\times 100\\% \\] Net efficiency values are typically higher than gross efficiency values because the “baseline” metabolic cost is excluded from the denominator. In cycling, ηnet values often range from 19-24%, although precise values depend heavily on how the baseline energy expenditure is defined and measured (Di Prampero et al., 1979; Stainbsy et al., 1980). The app calculates ηnet at both Fatmax and MLSS, again using predicted RQs for caloric equivalents.\n\nCEStart (ml·min⁻¹·W⁻¹): (Visible and active only when the Curvilinear model is selected)\n\nThis slider sets the initial slope of the \\(\\dot{V}O_2\\)-P curve, representing the oxygen cost (and thus efficiency) at very low power outputs, near the \\(\\dot{V}O_{2,Base}\\).\n\nCETarget (ml·min⁻¹·W⁻¹): (Visible and active only when the Curvilinear model is selected)\n\nThis slider sets the target slope of the \\(\\dot{V}O_2\\)-P curve specifically at the power output corresponding to \\(\\dot{V}O_{2,max}\\). This parameter is crucial for defining the extent of the “tail-up” or steepening of the curvilinear P-\\(\\dot{V}O_2\\) relationship at high exercise intensities.\n\n\n\n\nCadence Dependency\nThis section introduces an feature allowing users to incorporate the effects of pedaling rate on metabolic parameters. The underlying model for these adjustments is primarily based on the research and formulas published by Dunst et al. (2025). The general physiological principle is that there’s an optimal cadence range where mechanical and metabolic efficiency are maximized. Deviating from this optimal range, either by pedaling too slowly or too quickly, typically increases the oxygen cost for a given power output due to factors such as increased internal work (cost of limb movement), less favorable muscle force-velocity characteristics, or altered muscle recruitment patterns (Chavarren & Calbet, 1999; Foss & Hallén, 2005).\n\nEnable U-Shaped Cadence Dependency (Checkbox):\n\nWhen this box is checked, the app dynamically adjusts key metabolic parameters (\\(CE\\), \\(\\dot{V}O_{2,Base}\\), and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\)) based on the cadence value selected by the user.\n\nCadence (rpm) (Slider):\n\nAllows the user to set the cycling cadence in revolutions per minute (rpm). The default value is 80 rpm, but the slider typically covers a wide physiological range (e.g., 20-200 rpm). While preferred cadences in trained cyclists often hover around 80-100 rpm during submaximal, steady-state cycling (Lucía et al., 2001), optimal cadences can vary with intensity and individual characteristics.\n\nCE-Dependency (Informational - automatically applied if cadence dependency is enabled):\n\nIndicates that the Cost of Exercise (\\(CE\\)) is no longer a fixed input (if the linear model was active) but becomes a dynamic function of the selected cadence. The app uses the quadratic formula derived by Dunst et al. (2025): \\(CE(rpm) = 0.0004 \\cdot rpm^2 - 0.094 \\cdot rpm + 16.857\\). This U-shaped function implies a minimum CE (highest efficiency) at a certain cadence, with CE increasing at lower and higher cadences.\n\n\\(\\dot{V}O_{2,Base}\\) Dependency (Informational - automatically applied if cadence dependency is enabled):\n\nSimilarly, the baseline oxygen uptake (\\(\\dot{V}O_{2,Base}\\)) also becomes cadence-dependent, reflecting the metabolic cost of \\(\\dot{V}O_{2}\\) at Rest + additional \\(\\dot{V}O_{2}\\) for unloaded pedaling at different speeds. The formula from Dunst et al. (2025) is: \\(\\dot{V}O_{2,Base}(rpm) = 0.172 \\cdot rpm^2 - 14.460 \\cdot rpm + 548.039\\). This also typically describes a U-shaped relationship.\n\nInclude \\(\\dot{V}O_{2,max}\\) Dependency (Checkbox):\n\nIf this option is checked, the individual’s \\(\\dot{V}O_{2,max}\\) is also modeled as being influenced by cadence. This is presented as an experimental feature, qualitatively based on figures in Dunst et al. (2025) which suggest that \\(\\dot{V}O_{2,max}\\) might be slightly lower at very low or very high cadences, with an optimal range typically around 80-90 rpm. The physiological basis could relate to optimal muscle recruitment and force-velocity characteristics for achieving maximal aerobic power.\n\nInclude vLamax Dependency (Checkbox):\n\nIf this option is checked, the maximal rate of lactate production (vLamax) is adjusted based on the selected cadence, using the formula proposed by Dunst et al. (2025): \\(vLa_{max}(rpm) = -0.0002 \\cdot rpm^2 + 0.00931 \\cdot rpm\\). It is important to note, as highlighted in the app’s tooltip and by Dunst et al. (2025), that this observed cadence-dependency of vLamax (often showing higher vLamax at higher cadences) might be partly or wholly an artifact of common sprint testing methodologies (e.g., isokinetic sprints where higher cadences might facilitate greater recruitment of fast-twitch fibers or alter torque production) rather than a true change in the intrinsic maximal glycolytic capacity of the muscle.\n\n\n\n\nPhysiological Input-Parameters\nThese sliders allow the user to define the core physiological characteristics of the simulated individual. These parameters are fundamental to Mader’s metabolic model and significantly influence all calculated outputs.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹):\n\nMaximal oxygen uptake. This is a cornerstone of aerobic fitness assessment, representing the highest rate at which an individual can take up, transport, and utilize oxygen during maximal, dynamic exercise (Åstrand et al., 2003; Levine, 2008). It sets the upper limit for aerobic ATP resynthesis.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹·kg⁻¹):\n\nMaximal oxygen uptake expressed relative to body mass (in kilograms). This normalized value allows for comparisons of aerobic fitness between individuals of different body sizes. This slider is dynamically linked to the absolute \\(\\dot{V}O_{2,max}\\) slider and the Body Mass slider; changing any one of these three will automatically update the others to maintain consistency.\n\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹):\n\nOxygen uptake at Rest as well as oxygen uptake for unloaded cycling (i.e., cycling at zero external power output on the ergometer, but still involving the metabolic cost of limb movement, postural support, and elevated cardiorespiratory activity compared to true rest). This value is critical as it forms the y-intercept of the P-\\(\\dot{V}O_2\\) relationship. It can be estimated using the “\\(\\dot{V}O_{2,Base}\\) Calculation” utility (see below) which estimates true resting \\(\\dot{V}O_2\\), or it can be set manually based on typical values or direct measurements from unloaded cycling.\n\nvLamax (mmol·l⁻¹·s⁻¹):\n\nMaximal rate of lactate production. This parameter reflects the peak enzymatic capacity of the anaerobic glycolytic pathway to produce lactate (and ATP) per unit of time and per liter of blood/distribution volume (Mader, 1984; Mader & Allmer, 1996). It is a crucial determinant of an individual’s anaerobic capacity and significantly influences lactate accumulation kinetics and substrate utilization patterns. Typical values can range widely, from approximately 0.3 mmol·l⁻¹·s⁻¹ in highly trained endurance athletes to over 1.0 mmol·l⁻¹·s⁻¹ in elite sprint athletes.\n\nHRmax (bpm):\n\nMaximal heart rate achievable by the individual during exhaustive exercise. Commonly estimated by formulas like “220 - age”, but this has large individual variability. Direct measurement is preferred for accuracy.\n\nHRBase (bpm):\n\nBaseline heart rate at rest.\n\nCEHR (bpm·W⁻¹):\n\nHeart Rate Efficiency, also commonly referred to as the HR-Power slope. It describes the increment in heart rate (in beats per minute) for each Watt increase in external power output during steady-state incremental exercise. Typical values in cyclists range from 0.25 to 0.45 bpm·W⁻¹. Lower values are generally indicative of better cardiovascular efficiency, often reflecting a larger stroke volume response to increasing exercise intensity.\n\nWeight-based values (Checkbox):\n\nIf checked, the x-axis of the main P-\\(\\dot{V}O_2\\)-La plot and several displayed output values (e.g., power, \\(\\dot{V}O_2\\)) will be normalized to the individual’s body mass. This is useful for comparing individuals of different sizes, as many physiological parameters scale with body mass. Power would be displayed in W·kg⁻¹ and \\(\\dot{V}O_2\\) in ml·min⁻¹·kg⁻¹.\n\n\n\n\n\\(\\dot{V}O_{2,Base}\\) Calculation\nThis utility provides a method to estimate an individual’s true basal metabolic rate (BMR) using the widely recognized Harris-Benedict equation (J. A. Harris & Benedict, 1918). This BMR is then converted into an equivalent resting oxygen uptake. While this calculated resting \\(\\dot{V}O_2\\) is not always directly the \\(\\dot{V}O_{2,Base}\\) used in this model, it can serve as a physiologically grounded reference point for setting or evaluating the \\(\\dot{V}O_{2,Base}\\) parameter without the additional oxygen cost of unloaded cycling.\n\nGender (Radio buttons: Male/Female): Selects the appropriate gender-specific version of the Harris-Benedict formula, as metabolic rates differ between sexes.\nBody Mass (kg) (Slider): Input for the Harris-Benedict formula. Also used for weight-based normalizations throughout the app if the “Weight-based values” checkbox is active.\nAge (years) (Slider): Input for the Harris-Benedict formula, as BMR typically declines with age.\nHeight (cm) (Slider): Input for the Harris-Benedict formula.\nCalculate \\(\\dot{V}O_{2,Base}\\) Button:\n\nWhen clicked, the app calculates BMR in kilocalories per day (kcal/day) using the selected inputs and the Harris-Benedict equations:\n\nMen: BMR = 66.5 + (13.75 × weight in kg) + (5.003 × height in cm) – (6.775 × age in years)\nWomen: BMR = 655.1 + (9.563 × weight in kg) + (1.850 × height in cm) – (4.676 × age in years)\n\nThis BMR (kcal/day) is then converted to a resting \\(\\dot{V}O_2\\) value (in ml/min) using standard caloric equivalents for oxygen (approximately 4.825 kcal per liter of O₂ consumed at a typical resting RQ of 0.82-0.85, or a more generic ~5 kcal/L O₂).\nThe \\(\\dot{V}O_{2,Base}\\) slider in the “Physiological Input-Parameters” section is automatically updated with this calculated resting \\(\\dot{V}O_2\\) value.\nImportant Distinction: It’s crucial to remember that the \\(\\dot{V}O_{2,Base}\\) parameter in Mader’s model represents oxygen uptake during unloaded cycling. This value is inherently higher than the true basal resting \\(\\dot{V}O_2\\) (as estimated by Harris-Benedict) because it includes the metabolic cost of limb movement, maintaining posture on the bike, and slightly elevated cardiorespiratory activity. The Harris-Benedict calculation here provides a physiological baseline for resting energy expenditure.\n\n\n\n\nSubstrate Utilization\nThis section enables the modeling and visualization of how the body utilizes carbohydrates (CHO) and fats for aerobic energy production across different exercise intensities. The model’s approach is rooted in the lactate balance concept from Mader’s framework (Mader, 2003), where the interplay between lactate production and oxidation serves as an indicator of the relative reliance on CHO versus fat metabolism.\n\nShow Substrate Utilization (Checkbox):\n\nIf this box is checked:\n\nA dedicated Substrate Utilization Plot appears below the main P-V̇O₂-La plot. This plot displays the percentage contribution of CHO and Fat to total aerobic energy expenditure across the range of power outputs.\nTraces representing the absolute rates of CHO and Fat oxidation (in the units selected via the “Energy Unit” dropdown) are added to the main P-V̇O₂-La plot. These are typically plotted on a third y-axis (yaxis3) to accommodate their different scale compared to \\(\\dot{V}O_2\\) or lactate rates.\n\n\nEnergy Unit (Dropdown menu): (Visible only if “Show Substrate Utilization” is checked)\n\nAllows the user to select the preferred units for displaying the absolute substrate oxidation rates. Options are:\n\ng/h (grams per hour): Useful for nutritional planning and understanding fuel mass turnover.\nkcal/h (kilocalories per hour): A common unit for energy expenditure.\nkJ/h (kilojoules per hour): The SI unit for energy expenditure.\n\n\nAdjust CHO utilization at rest (Checkbox): (Visible only if “Show Substrate Utilization” is checked)\n\nIf checked, this feature allows the user to manually influence the modeled CHO utilization percentage specifically at rest (0 Watts power output). The Mader model, by default, calculates CHO utilization based purely on its internal lactate kinetics (\\(vLa_{SS}/vLa_{ox}\\) ratio). However, empirical studies often show that at true rest, particularly in a post-absorptive state, fat oxidation predominates, and CHO contribution might be around 35-40% (Brooks, 2012; Friedlander et al., 1998, 1999). This option allows users to align the model’s resting substrate use more closely with such empirical observations or specific dietary conditions if desired.\n\nResting CHO percentage (%) (Slider): (Visible only if “Adjust CHO utilization at rest” is checked)\n\nA slider (0-100%) to set the target CHO utilization percentage at rest (0 Watts). The application will then adjust the entire CHO utilization curve proportionally to pass through (or near) this user-defined resting value, while still adhering to the model’s logic at higher intensities (e.g., approaching 100% CHO at MLSS).\n\n\nModel Basis for Substrate Utilization: The Mader model posits a strong link between lactate metabolism and substrate choice. The fundamental idea is that increased glycolytic flux (leading to lactate production, \\(vLa_{SS}\\)) signifies a shift towards carbohydrate utilization. Conversely, conditions favoring lactate clearance and oxidation (\\(vLa_{ox}\\)) are associated with a greater capacity for, and reliance on, fat oxidation. The model calculates the percentage CHO contribution based on the ratio of \\(vLa_{SS}\\) to \\(vLa_{ox}\\). As exercise intensity increases and \\(vLa_{SS}\\) rises (potentially exceeding \\(vLa_{ox}\\)), CHO% increases, approaching 100% at or above MLSS (where PD ≤ 0). Fat oxidation percentage is calculated as (100 - CHO%). The absolute rates of CHO and fat oxidation (in g/h, kcal/h, or kJ/h) are then derived from the total aerobic energy expenditure (calculated from \\(\\dot{V}O_{2,SS}\\) and its caloric equivalent) and these percentages. Standard energy yields (e.g., ~4.1 kcal/g for CHO, ~9.45 kcal/g for fat) are used for these conversions. Crucially, the predicted Respiratory Quotient (RQ = \\(\\dot{V}CO_2 / \\dot{V}O_2\\)) is calculated from this modeled substrate mix (RQ ≈ 0.70 for 100% fat, RQ ≈ 1.00 for 100% CHO). This dynamically predicted RQ is then used in conjunction with established tables (similar to those by Stegemann (1991)) to determine the precise caloric equivalent of oxygen (e.g., kJ·l O₂⁻¹ or kcal·l O₂⁻¹) at each power output. This RQ-dependent caloric equivalent is then used for the accurate calculation of all efficiency metrics (Δη, ηgross, ηnet). This creates a physiologically consistent loop where substrate use influences RQ, which influences caloric equivalent, which influences efficiency calculations. The intensity at which fat oxidation is maximal (Fatmax) typically occurs where the Pyruvate Deficit is highest. For a detailed understanding of factors influencing fat oxidation, refer to reviews like Achten & Jeukendrup (2004).\n\n\nPlot Settings\n\nLock Y-Axis / Lock X-Axis (Checkboxes):\n\nWhen checked (default state), the respective axis range on the main P-V̇O₂-La plot remains fixed, regardless of changes to input parameters. This is highly beneficial for visual comparison, as it allows the user to clearly see how alterations in (for example) \\(\\dot{V}O_{2,max}\\) or \\(CE\\) shift the curves relative to a constant scale.\nIf unchecked, the axis will auto-scale to optimally fit the currently plotted data. This can be useful for initial exploration if the parameter changes result in data that goes off the fixed scale, but makes direct comparison of curve shifts more difficult.\n\n\n\n\n\nMain Plot: P-V̇O₂-La Dynamics\nThis central graphical output is the primary visualization for the steady-state model, displaying the complex interrelationships between power output and key metabolic variables.\n\nX-Axis: Power output (P). Units are Watts (W) by default, or Watts per kilogram body mass (W·kg⁻¹) if the “Weight-based values” option is selected in the sidebar.\nPrimary Y-Axis (Left side of plot): Oxygen Uptake (\\(\\dot{V}O_2\\)). Units are milliliters per minute (ml·min⁻¹) or ml·min⁻¹·kg⁻¹ if weight-based.\n\n\\(\\dot{V}O_{2,SS}\\) (Solid Blue Line): This trace represents the calculated steady-state oxygen uptake at each power output, up to the individual’s defined \\(\\dot{V}O_{2,max}\\). The shape of this curve is determined by whether the linear or curvilinear CE model is selected, and by the specific CE parameters.\n\\(\\dot{V}O_{2,SS,extrapolated}\\) (Dashed Blue Line): This line shows the theoretical \\(\\dot{V}O_2\\) demand if it were not physiologically constrained by the individual’s \\(\\dot{V}O_{2,max}\\). It essentially continues the P-\\(\\dot{V}O_2\\) relationship defined by the CE model beyond the point where \\(\\dot{V}O_{2,max}\\) is reached.\n\\(\\dot{V}O_{2,max}\\) Line (Dotted Grey Horizontal Line): A clear visual representation of the individual’s maximal oxygen uptake, serving as the ceiling for the \\(\\dot{V}O_{2,SS}\\) curve.\n\nSecondary Y-Axis (Right side of plot - typically labeled yaxis2): This axis displays variables related to lactate kinetics. Rates are typically in mmol·l⁻¹·min⁻¹, and accumulation in mmol·l⁻¹.\n\nvLaSS (Dashed Red Line): The steady-state rate of lactate production into the blood/distribution volume. In Mader’s model, \\(vLa_{SS}\\) is a function of the relative exercise intensity (related to the difference between \\(\\dot{V}O_{2,max}\\) and current \\(\\dot{V}O_{2,SS}\\)), the individual’s maximal glycolytic capacity (vLamax), and constants reflecting enzyme kinetics and substrate availability.\nvLaox (Dashed Light Blue Line): The steady-state rate of lactate oxidation or clearance from the blood/distribution volume. This is primarily dependent on the aerobic metabolic rate (\\(\\dot{V}O_{2,SS}\\)), as lactate is oxidized in various tissues (muscle, heart, liver) or converted to glucose (gluconeogenesis), both processes requiring oxygen directly or indirectly.\nPD (Pyruvate Deficit) (Solid Purple Line): Calculated as the difference: \\(vLa_{ox} - vLa_{SS}\\).\n\nA positive PD indicates that the capacity for lactate elimination (\\(vLa_{ox}\\)) exceeds the rate of lactate production (\\(vLa_{SS}\\)). This state is typically associated with lower to moderate exercise intensities and often correlates with a higher proportion of fat oxidation.\nA negative PD indicates that lactate production (\\(vLa_{SS}\\)) exceeds the elimination capacity (\\(vLa_{ox}\\)), leading to a net accumulation of lactate if the exercise were sustained.\nFATmax (Vertical Dotted Grey Line Annotation): This line is drawn at the power output where the Pyruvate Deficit (PD) reaches its maximum positive value. This intensity is often considered to approximate the point of maximal fat oxidation, as a large PD implies a metabolic environment conducive to fat metabolism (lower glycolytic flux relative to oxidative capacity).\nMLSS (Maximal Lactate Steady State) (Vertical Dotted Grey Line Annotation): This line is drawn at the power output where PD is theoretically zero (i.e., \\(vLa_{SS} = vLa_{ox}\\)). This represents the highest exercise intensity at which lactate production and elimination are balanced, allowing for a stable (though elevated) blood lactate concentration during prolonged, constant-load exercise. MLSS is a critical determinant of endurance performance (Heck et al., 2022).\n\nLaAccumulation (Solid Dark Red Line): This trace represents the theoretical steady-state blood lactate concentration that would result if exercise at that specific power output were maintained indefinitely. It is derived from the net balance of lactate production and elimination (i.e., the integral of -PD over time, assuming a starting lactate concentration). It’s important to note that this is a modeled steady-state prediction and not a dynamic simulation of blood lactate changes over a fixed exercise duration.\n\nTertiary Y-Axis (Right side, typically further out - yaxis3, visible only if “Show Substrate Utilization” is checked): This axis is dedicated to displaying the absolute rates of substrate utilization, in the units selected by the user (g/h, kcal/h, or kJ/h).\n\nCHO (Unit) (Dotted Pink Line): Shows the absolute rate of carbohydrate oxidation at each power output.\nFat (Unit) (Dotted Green Line): Shows the absolute rate of fat oxidation at each power output.\n\n\nThe plot is richly annotated, providing values for FATmax power, MLSS power, and the absolute \\(\\dot{V}O_{2,max}\\) value. Additionally, the specific mathematical formula currently being used to define the \\(\\dot{V}O_2\\)-P relationship (linear or curvilinear, and reflecting any cadence-dependent adjustments to CE and \\(\\dot{V}O_{2,Base}\\)) is displayed directly on the plot for clarity.\n\n\nSubstrate Utilization Plot\nThis second plot appears below the main P-V̇O₂-La plot only if the “Show Substrate Utilization” option is enabled in the control panel. It provides a percentage-based view of fuel use.\n\nX-Axis: Power output (P), consistent with the main plot’s x-axis (W or W·kg⁻¹).\nY-Axis: Percentage of Total Aerobic Energy Expenditure (%), ranging from 0 to 100%.\n\nCHO-Utilization (%) (Dotted Pink Line): Illustrates the relative contribution of carbohydrate oxidation to the total aerobic energy production at each power output. This typically increases with intensity.\nFat-Utilization (%) (Dotted Dark Green Line): Shows the relative contribution of fat oxidation. This typically decreases with increasing intensity, especially above Fatmax. This plot effectively visualizes the “substrate crossover” concept, which describes the shift from predominantly fat utilization at lower intensities to predominantly carbohydrate utilization at higher intensities (Brooks et al., 2004). The intersection of these two curves (if it occurs) roughly indicates the intensity where CHO and fat contribute equally to aerobic energy supply.\n\n\n\n\nValues Display Area\nLocated directly below the plot(s), this dynamic text area provides a numerical summary of key metabolic parameters calculated at two physiologically significant anchor points: FATmax and MLSS. For each of these intensity points, the following information is typically displayed:\n\nPower output (in W or W·kg⁻¹, matching the plot setting).\nSteady-state \\(\\dot{V}O_{2,SS}\\) (absolute in ml·min⁻¹ or relative in ml·min⁻¹·kg⁻¹) and also expressed as a percentage of the individual’s \\(\\dot{V}O_{2,max}\\) (e.g., “MLSS at 75% \\(\\dot{V}O_{2,max}\\)”).\nRate of lactate production (\\(vLa_{SS}\\) in mmol·l⁻¹·min⁻¹).\nRate of lactate oxidation (\\(vLa_{ox}\\) in mmol·l⁻¹·min⁻¹).\nPyruvate Deficit (PD) in mmol·l⁻¹·min⁻¹.\nTheoretical Lactate Accumulation (LaAccumulation) in mmol·l⁻¹.\nIf substrate utilization is shown:\n\nAbsolute carbohydrate oxidation rate (in the units selected by the user: g/h, kcal/h, or kJ/h) and its percentage contribution to total aerobic energy.\nAbsolute fat oxidation rate (in selected units) and its percentage contribution.\nPredicted Respiratory Quotient (RQ) at that specific intensity.\n\nCalculated gross efficiency (ηgross) in %.\nCalculated net efficiency (ηnet) in %.\n\nAdditionally, if cadence dependency is active, this display area will also show the effective \\(CE\\), \\(\\dot{V}O_{2,Base}\\), and, if their respective dependencies are enabled, the effective \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\) values that correspond to the user-selected cadence. This provides full transparency on how cadence adjustments are impacting the core model parameters.",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell.html#tab-2-exercise-simulation-dynamic-model",
    "href": "Mader_Modell.html#tab-2-exercise-simulation-dynamic-model",
    "title": "Mader’s metabolic model",
    "section": "Tab 2: Exercise Simulation (Dynamic Model)",
    "text": "Tab 2: Exercise Simulation (Dynamic Model)\nThis tab allows users to move beyond steady-state assumptions and simulate the dynamic, time-dependent metabolic responses of an individual to a defined exercise protocol. This is invaluable for understanding how various physiological systems adapt and interact during non-steady-state conditions, such as those encountered in interval training, races with variable pacing, or ramp tests.\n\nControl Panel: Exercise Simulation\n\nStep Test / Exercise Simulation Parameters\nThese controls are used to define the exercise protocol for the simulation, either by generating a standard step test or by loading power data from an external file.\n\nStep Increment (Watts): If generating an incremental step test, this parameter sets the magnitude of the power increase for each successive step (e.g., an increment of 20 Watts).\nStep Duration (s): For a generated step test, this defines the duration (in seconds) of each constant-power stage (e.g., 180 seconds for 3-minute stages).\nMaximum Power (Watts): This sets the highest power output that will be targeted in a generated incremental step test. The simulation will incrementally increase power up to this level, or until an abort criterion is met.\nPower Adjustment (%): A global scaling factor (ranging from 0% to 200%) that is applied to all power values in the current workout, regardless of whether the workout was generated by the app or loaded from an external file. This allows users to easily scale a given workout to simulate higher or lower absolute intensities, for instance, to match different fitness levels or to explore the effects of relative intensity changes.\nLoad Example Exercise Data Button: Loads a pre-defined sample interval workout directly into the simulation. This sample dataset typically includes time, power, and often cadence values, providing a quick way to see the dynamic simulation in action.\nInsert workout file / File Upload:\n\nThis feature allows users to upload their own workout data from external files. Supported file formats include .csv (comma-separated values), .txt (often tab-separated, but other delimiters may be auto-detected), .xlsx (modern Excel format), and .xls (older Excel format).\nThe app expects the file to contain columns for time (or timestamp), power, and optionally, cadence. The data will be parsed and interpolated to a 1-second resolution for the simulation.\nFile has headers (Checkbox): This should be checked (it is by default) if the first row of the uploaded file contains descriptive column names (e.g., “Time”, “Power_Watts”, “Cadence_rpm”). If unchecked, the app will assume the data begins from the very first row and will attempt to use a default column order (typically Time, Power, then Cadence if present).\nUploaded workout data gap processing (Radio buttons): This option determines how the app handles missing data points or time gaps when it interpolates the uploaded data to a 1-second resolution:\n\nMaintain last values (Default): If there is a gap in the recorded data (e.g., a recording device missed a few seconds), the power output (and cadence, if available) from the last valid preceding data point will be carried forward to fill the missing seconds. This method is often preferred for visualizing structured interval training where power is intended to be constant during an interval, and brief recording dropouts should not appear as zero power.\nInsert zero values: If there is a gap, the power (and cadence) for the missing seconds will be set to zero. This method is more appropriate for analyzing training sessions that include distinct rest periods where the actual power output is indeed zero, and these rests should be accurately reflected in the simulation.\n\n\nSmooth Power Curve (5-point window) Button: When clicked, this applies a 5-point moving average filter to the currently loaded or generated power data. This can be useful for reducing noise or very rapid, short-lived fluctuations in recorded power data, providing a smoother and potentially more physiologically representative input for the metabolic simulation. Cadence data, if present, is typically smoothed with a slightly wider window (e.g., 10-point).\nDisplay Window Settings: These controls allow users to customize the visible range of the plot axes for the simulation plot without altering the underlying simulation data or the calculations themselves. This is purely a visualization tool to help focus on specific portions or aspects of the simulation.\n\nAdjust X-Axis range (Checkbox): When checked, enables manual adjustment of the time (horizontal) axis.\n\nStart Time (s) / End Time (s) (Sliders): These sliders allow the user to define the visible start and end times on the x-axis of the simulation plot. This is useful for zooming into specific phases of a long workout.\n\nAdjust Y-Axis ranges (Checkbox): When checked, enables manual adjustment of the various y-axes on the simulation plot.\n\nPower Y-Axis Maximum (Slider): Sets the maximum displayed value for the primary Y-axis (which typically shows Power, Cadence, MPA, Strain Score, and Glycogen).\n\\(\\dot{V}O_2\\) Y-Axis Maximum (Slider): Sets the maximum displayed value for the tertiary Y-axis (which typically shows \\(\\dot{V}O_2\\) and O₂ Deficit related variables).\nLactate Y-Axis Minimum / Maximum (Sliders): Sets the minimum and maximum displayed values for the secondary Y-axis (which typically shows Lactate, W’ Balance, PCr, pH, various rates, RQ, and HR).\n\n\n\n\n\nCadence Dependency\nThis section mirrors the functionality of Tab 1 but applies the cadence-dependent metabolic adjustments dynamically throughout the exercise simulation, based on the work of Dunst et al. (2025).\n\nEnable U-Shaped Cadence Dependency (Checkbox): If checked, metabolic parameters such as \\(CE\\) and \\(\\dot{V}O_{2,Base}\\) (and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\)) will be adjusted at each time step of the simulation based on the cadence at that specific moment.\nFixed Cadence (rpm) (Slider): This value is used if “Use cadence from file” is unchecked, or if an uploaded file lacks cadence data, but cadence dependency is enabled. It sets a constant cadence that will be assumed for the entire simulation for the purpose of parameter adjustments.\nUse cadence from file (if available) (Checkbox):\n\nIf this box is checked, AND cadence data is present in an uploaded workout file, AND “Enable U-Shaped Cadence Dependency” is active, the simulation will use the time-varying cadence values directly from the file to modulate the metabolic parameters at each second.\nIf no cadence data is found in the file, or if this option is unchecked, the “Fixed Cadence” value will be used for cadence-dependent calculations if the main cadence dependency is enabled.\n\nThe specific dependencies for CE (\\(\\text{CEV̇O}_2\\)) Dependency, \\(\\dot{V}O_{2,Base}\\) Dependency, Include \\(\\dot{V}O_{2,max}\\) Dependency, and Include vLamax Dependency can be individually toggled on or off, functioning identically to their counterparts in Tab 1, but their effects are applied dynamically based on the instantaneous cadence during the simulation.\n\n\n\nPhysiological Parameters (Dynamic Simulation)\nThese parameters are crucial for governing the kinetic (time-dependent) responses of the various metabolic and physiological systems modeled in the simulation.\n\n\\(\\dot{V}O_2\\) Start (ml·min⁻¹):\n\nThis sets the initial oxygen uptake value (\\(\\dot{V}O_2\\)) at the very beginning (time = 0 seconds) of the simulation. The slider for this parameter is dynamically constrained to be between the current effective \\(\\dot{V}O_{2,Base}\\) (which can vary if cadence dependency is active) and the current effective \\(\\dot{V}O_{2,max}\\). The default starting value is often set to approximate the \\(\\dot{V}O_2\\) that would be observed at the Fatmax intensity (as determined in Tab 1). This assumes the exercise often starts from a low-intensity active baseline rather than complete, supine rest. This initial \\(\\dot{V}O_2\\) value significantly influences the calculation of the initial oxygen deficit.\n\n\\(\\dot{V}O_{2,on}\\) time constant (τon) (s):\n\nThis parameter defines the characteristic speed of the exponential rise of \\(\\dot{V}O_2\\) towards its new, higher target (steady-state) value whenever exercise intensity increases or exercise begins from a lower baseline. A smaller τon value indicates faster “on” kinetics, meaning \\(\\dot{V}O_2\\) reaches its target more quickly. Typical values for τon in healthy individuals during moderate intensity exercise range from about 20 seconds in highly trained athletes to 40 seconds or more in less trained or older individuals (Barstow & Mole, 1991; Whipp & Wasserman, 1972). The fundamental equation describing an exponential rise to a new steady state is often given as: \\[ \\dot{V}O_2(t) = \\dot{V}O_{2,initial} + (\\dot{V}O_{2,target} - \\dot{V}O_{2,initial}) \\cdot (1 - e^{-(t - t_{delay})/\\tau_{on}}) \\] Where \\(t_{delay}\\) is the initial time delay (see below). The app implements this step-wise.\nIntensity-Dependent τon (Checkbox):\n\nIf this option is checked, τon is not a single fixed value for all upward transitions. Instead, it is dynamically calculated for each second of the simulation based on the \\(\\dot{V}O_2\\) (expressed as a percentage of the current \\(\\dot{V}O_{2,max}\\)) of the immediately preceding time step. The underlying base formula is \\(\\tau_{on\\_base} = 0.38 \\cdot \\text{PreviousIntensity%} + 6\\) seconds. The slider value for τon then acts as the specific τon that would occur if the preceding intensity was exactly 50% of \\(\\dot{V}O_{2,max}\\). This means the slider effectively sets an offset to this formula, allowing the user to shift the entire linear τon-intensity relationship. This feature aims to simulate the physiological observation that \\(\\dot{V}O_2\\) on-kinetics can be slower if an exercise bout is initiated from an already elevated metabolic rate (e.g., due to prior high-intensity work or insufficient recovery).\n\n\n\\(\\dot{V}O_{2,off}\\) time constant (τoff) (s):\n\nThis parameter defines the characteristic speed of the exponential fall of \\(\\dot{V}O_2\\) towards its new, lower target value when exercise intensity decreases or during recovery periods. Off-kinetics can be similar to, or often slightly slower than, on-kinetics, particularly following high-intensity or prolonged exercise, due to factors like elevated body temperature, hormone levels, and the metabolic cost of recovery processes (Özyener et al., 2001).\nIntensity-Dependent τoff (Checkbox):\n\nIf checked, τoff is also dynamically calculated. Its value depends on the maximum \\(\\dot{V}O_2\\) (as % of current \\(\\dot{V}O_{2,max}\\)) achieved within a recent lookback window (typically defined as twice the duration of the previous step’s τoff value). The base formula used is \\(\\tau_{off\\_base} = 0.45 \\cdot \\text{Intensity%} + 10\\) seconds. Similar to the dynamic τon, the slider value for τoff sets the τoff for a reference 50% intensity, thereby shifting this relationship. This models the physiological reality that recovery of \\(\\dot{V}O_2\\) might be faster after lower intensity efforts and slower after higher intensity efforts which cause greater metabolic disturbance and a larger oxygen debt.\n\n\n\\(\\dot{V}O_2\\) Response Delay (s):\n\nThis represents a pure time delay (in seconds) before the exponential \\(\\dot{V}O_2\\) response (either “on” or “off” kinetics) actually begins following a change in power output. This delay accounts for physiological lags such as the circulatory transit time of blood from the lungs to the exercising muscles (for O₂ delivery) and from muscles to lungs (for CO₂ feedback influencing ventilation), as well as any initial inertia in muscular metabolic pathway activation (Lamarra et al., 1987). The default is 2 seconds, with a typical physiological range considered to be 0-10 seconds. This delay directly affects the timing of the actual \\(\\dot{V}O_2\\) change, the calculation of O₂ deficit/surplus, and subsequently the modeled rate of lactate oxidation (\\(vLa_{ox}\\)).\n\nLactate exercise termination value (mmol·l⁻¹):\n\nIf the “Terminate simulation when lactate exceeds max value” checkbox (see below) is active, the simulation will automatically stop if the modeled blood lactate concentration reaches this specified threshold. Values around 20 mmol/l represent very high, often exhaustive, levels of lactate accumulation.\n\nTerminate simulation when lactate exceeds max value (Checkbox): Enables or disables the lactate-based abortion criterion for the simulation.\nResting Lactate-value (mmol·l⁻¹):\n\nThe initial blood lactate concentration assumed at the start (time = 0s) of the simulation. Typical resting values in healthy individuals are around 0.5 to 1.5 mmol/l.\n\nvLaSS,on Time Constant (τvLaSS,on) (s):\n\nThe time constant governing the exponential rise of the actual lactate production rate (\\(vLa_{SS}\\)) towards its new, higher target value when exercise intensity increases. This parameter reflects how quickly the glycolytic flux adapts upwards in response to increased energy demand.\n\nvLaSS,off Time Constant (τvLaSS,off) (s):\n\nThe time constant governing the exponential fall of \\(vLa_{SS}\\) towards its new, lower target value when exercise intensity decreases or during recovery periods. This reflects the downregulation of glycolysis.\n\nvLaSS Response Delay (s):\n\nA pure time delay (in seconds) before the lactate production rate (\\(vLa_{SS}\\)) begins its exponential kinetic response (either upwards or downwards) to a change in exercise intensity. This simulates inherent biochemical delays in the activation or deactivation of the complex glycolytic pathway.\n\nCap vLass by \\(\\dot{V}O_2\\) Deficit (Checkbox):\n\nAn optional, advanced physiological constraint. If this box is checked, the actual lactate production rate (\\(vLa_{SS}\\)) at any given time point during the simulation is capped. The cap is determined such that the net anaerobic energy supply (which is derived from the energy equivalent of lactate production minus the energy equivalent of concurrent lactate oxidation) does not exceed the current calculated oxygen deficit (which, in turn, is \\(\\dot{V}O_2 \\text{ Demand} - \\dot{V}O_2 \\text{ Actual}\\)). The purpose of this option is to enhance physiological plausibility by preventing an unrealistic “overshoot” of anaerobic energy production, especially during transitions where aerobic energy supply is still ramping up or is limited. When unchecked (default), \\(vLa_{SS}\\) is determined purely by its own kinetic parameters without this specific energy balance cap.\n\nMuscle pH (pHm) Simulation (Informational text & underlying mechanism):\n\nThis feature simulates changes in intramuscular pH (pHm), a critical factor in muscle function and fatigue. The calculation of pHm is based on established physiological principles, drawing from the work of Mader (2003) and further elaborated in texts such as Heck et al. (2022). The model considers several key intracellular factors that influence pHm:\n\nEstimated inorganic phosphate concentration ([Pi]): [Pi] increases as phosphocreatine ([PCr]) is broken down, and high [Pi] can contribute to acidosis. The model estimates [Pi] inversely based on the current [PCr].\nIntramuscular lactate concentration ([La]m): The accumulation of lactate is stoichiometrically linked with the production of H⁺ ions, thus directly impacting pHm. The model uses its dynamically calculated intramuscular lactate.\nEstimated arterial partial pressure of CO₂ (pCO₂): pCO₂ influences the carbonic acid-bicarbonate buffer system within the muscle. The model estimates pCO₂ as increasing with relative exercise intensity (i.e., %\\(\\dot{V}O_{2,max}\\)), reflecting increased metabolic CO₂ production and ventilatory responses.\n\nThe critical aspect of this feature is the feedback loop: the pHm calculated from the previous time step is then used to modulate the effective maximal lactate production rate (\\(vLa_{max,eff}\\)) for the current time step. This modulation simulates the well-known inhibitory effect of falling (more acidic) pH on key glycolytic enzymes, particularly phosphofructokinase (PFK), which is a major rate-limiting step in glycolysis (Danforth, 1965). The relationship is typically sigmoidal, represented in the app as:\\[vLa_{max,eff} = vLa_{max,base} \\cdot \\text{PFK Activity Factor}(pH_m)\\] Where PFK_Activity_Factor(pHm) is a term that decreases (from a maximum of ~1.0 down to near 0) as pHm drops significantly below physiological resting levels (e.g., below pH ~7.0 down towards pH 6.0).\nThis pH-modulated \\(vLa_{max,eff}\\) then becomes the new input for determining the target \\(vLa_{SS}\\) for the current time step. This creates a physiologically relevant negative feedback loop: high rates of lactate production can lead to a drop in pHm, which in turn can reduce further lactate production by inhibiting PFK, thus helping to limit excessive acidosis.\n\n\n\n\nGlycogen Storage Parameters\nThis section of the control panel models the dynamics of muscle glycogen stores, a critical fuel source for prolonged and high-intensity exercise. The model simulates depletion due to carbohydrate oxidation and potential repletion from exogenous carbohydrate intake.\n\nAuto-calculate glycogen values based on muscle mass (Checkbox):\n\nIf this box is checked, the “Initial Glycogen Storage” and “Maximum Glycogen Storage” slider values are automatically populated. This calculation is based on the “Active Muscle Mass” value (derived from the PCr model settings) or, if that’s not explicitly set, an estimation from total body mass. The calculation assumes typical physiological glycogen concentrations in muscle tissue, for instance, around 15 grams of glycogen per kilogram of active muscle for normal, fed states, and perhaps up to 20-25 g/kg for carbohydrate-loaded (“supercompensated”) states.\n\nInitial Glycogen Storage (g) (Slider):\n\nSets the amount of glycogen (in grams) assumed to be available in the active muscle mass at the very beginning of the simulation. Typical values for well-nourished and trained athletes range from 350-500g, but can be higher with specific carbohydrate loading strategies (Åstrand et al., 2003; Bergström et al., 1967; Murray & Rosenbloom, 2018).\n\nMaximum Glycogen Storage (g) (Slider):\n\nDefines the physiological upper limit for glycogen storage within the active muscle mass. Even with carbohydrate intake during exercise, the glycogen stores will not replete beyond this set maximum.\n\nCarbohydrate Intake Rate (g·h⁻¹):\n\nSets the rate (in grams per hour) at which exogenous carbohydrates (e.g., from sports drinks or gels) are ingested and become available for either direct oxidation by the muscles or for glycogen synthesis (if stores are depleted and conditions allow). Typical maximal exogenous CHO oxidation rates are often cited in the range of 60-90 g/h for single-source carbohydrates like glucose or maltodextrin (Jeukendrup & Wallis, 2005; A. Jeukendrup & Gleeson, 2019). Combinations of multiple transportable carbohydrates (e.g., glucose and fructose) can increase this to 120g/h or even slightly more (Jeukendrup, 2010).\n\n\nThe model calculates glycogen depletion based on the instantaneous rate of carbohydrate oxidation. The CHO oxidation rate itself is derived dynamically at each time step from the balance of \\(vLa_{SS}\\) and \\(vLa_{ox}\\) (as in Tab 1), but applied kinetically over time. If the modeled glycogen stores reach zero, this can trigger a simulation abortion if that termination criterion is implicitly or explicitly active (e.g., inability to maintain power due to substrate depletion).\n\n\nW’ Balance Parameters\nThis section implements a model for W’ (pronounced “W prime”), a concept central to understanding exercise tolerance above a certain metabolic threshold known as Critical Power (CP). W’ represents a finite amount of work that can be performed when exercising at intensities greater than CP (Monod & Scherrer, 1965; Poole et al., 2016; Skiba et al., 2012). Depletion of W’ is closely associated with the onset of severe fatigue and task failure.\n\nCritical Power (CP) (W) (Slider):\n\nDefines the Critical Power, which is, in theory, the highest power output that can be sustained for a very long time without a progressive loss of homeostasis or depletion of W’. It represents a critical metabolic threshold demarcating sustainable from unsustainable exercise intensities.\n\nW’ (kJ) (Slider):\n\nRepresents the total amount of work (expressed in kilojoules) that can be performed above CP before W’ is considered fully depleted. It reflects a combination of anaerobic energy capacity and tolerance for the accumulation of fatigue-related metabolites. Typical W’ values range from 10 to 30 kJ, depending on the individual’s training status and physiological profile.\n\nPmax (W) (Slider):\n\nRepresents the maximum instantaneous power an athlete can produce, typically observed during very short, all-out sprints (e.g., lasting a few seconds). This parameter is integral to the 3-parameter critical power model (which includes Pmax, CP, and W’) and is specifically used in this app for calculating MPA (Maximum Power Available) and the Strain Score (SS). These metrics draw on concepts from researchers like Hauser et al. (2014) and potentially more recent work like Kontro et al. (2025, though not in the provided citation list, the formulas in the HTML align with this type of model). Pmax is considered to represent the power capacity of the alactic (phosphagen/immediate) energy system.\n\nUse MLSS from Tab 1 as CP (Checkbox):\n\nIf checked (this is the default state), the CP value for the Tab 2 simulation is automatically set to be equal to the Maximal Lactate Steady State (MLSS) power output calculated in Tab 1. The CP slider below then becomes disabled, but will display this MLSS value. This option provides a physiologically grounded and individually determined estimate for CP, as MLSS and CP are often found to be closely related, though not always identical (Poole et al., 2016).\n\nW’ Balance Minimum (kJ) (Slider):\n\nAllows the user to define a lower threshold for W’ balance. This can be set to zero (meaning exhaustion occurs when W’ is fully depleted) or even to a negative value, which some models propose might represent a “digging deeper” capacity, though this is less common. The default in the app is -10 kJ.\n\nAbort simulation when W’ Balance falls below slider minimum (Checkbox):\n\nIf checked (default state), the simulation will automatically terminate if the calculated W’BAL (W’ balance) drops below the value specified by the “W’ Balance Minimum” slider.\n\n\nW’ Balance Model Dynamics: The app models W’ balance dynamics based on established principles ((Morton, 2008; Skiba et al., 2012) for general energy system concepts):\n\nDuring exercise at power outputs (P) greater than CP (P &gt; CP), W’ depletes linearly with the work done above CP: \\[ W'_{BAL}(t) = W'_{BAL}(previous\\_t) - (P - CP) \\cdot \\Delta t \\] where \\(W'_{BAL}(t)\\) is W’ balance at current time \\(t\\), \\(W'_{BAL}(previous\\_t)\\) is W’ balance at the previous time step, and \\(\\Delta t\\) is the time interval (1 second in this app).\nDuring exercise at power outputs (P) less than CP (P &lt; CP), W’ recovers exponentially: The rate and extent of W’ recovery depend on the magnitude of the difference between CP and the recovery power (\\(D_{CP} = CP - P_{recovery}\\)) and the total W’ capacity. A common formulation for W’ recovery is: \\[ W'_{BAL}(t) = W'_0 - (W'_0 - W'_{BAL}(previous\\_t)) \\cdot e^{-(D_{CP}/W'_0) \\cdot \\Delta t} \\] where \\(W'_0\\) is the initial (full) W’ capacity.\n\nThe MPA & Strain Score (SS) model, which is also displayed in the plot and summary, uses Pmax and the current W’ balance to provide novel metrics of fatigue and available power. The formulas used in the app’s HTML for MPA and SS are consistent with recent research by Kontro et al. (2025).\n\nMPA (Maximum Power Available): The highest power output theoretically achievable at any given moment, considering the current W’ depletion. \\[ MPA = P_{max} - (P_{max} - CP) \\cdot (W'_{EXP}/W')^2 \\] where \\(W'_{EXP}\\) is the amount of W’ expended (\\(W'_0 - W'_{BAL}\\)).\nkstrain (Strain Coefficient): A factor that modulates the perceived or physiological strain based on the current power output relative to MPA and CP. \\[ k_{strain} = (P_{max} - MPA + CP)/(P_{max} - P + CP) \\]\nSR (Strain Rate): The instantaneous rate at which strain is accumulating. \\[ SR = k_{strain} \\cdot P \\]\nSS (Strain Score): The cumulative strain experienced over the exercise bout. \\[ SS = \\sum(SR \\cdot \\Delta t) \\cdot (\\text{NormalizationFactor}) \\] The Normalization Factor, which appears to be \\((P_{max}/CP^2) \\cdot (100/3600)\\) in the app, scales the score. For instance, a common scaling aims for 1 hour of exercise at CP to yield an SS of 100.\n\n\n\nPCr and O₂ Deficit Model\nThis section of the control panel enables the simulation of phosphocreatine (PCr) dynamics within the active muscle and the associated oxygen deficit that is incurred at the onset of exercise or during transitions to higher exercise intensities. PCr is a crucial high-energy phosphate compound that provides ATP rapidly at the start of muscle contraction before oxidative phosphorylation can fully activate.\n\nResting PCr (mmol·kg⁻¹ wet muscle weight) (Slider):\n\nSets the initial concentration of PCr in the active muscle tissue at the beginning of the simulation. Typical physiological values in healthy, rested human skeletal muscle range from about 15 to 38 mmol·kg⁻¹ wet weight (R. C. Harris et al., 1976; Karlsson, 1971). Training status and muscle fiber type can influence this.\n\nP/O₂ (mol ATP · mol O₂⁻¹) (Slider):\n\nRepresents the P/O₂ ratio, which is the stoichiometry of oxidative phosphorylation: the number of moles of ATP synthesized per mole of diatomic oxygen (O₂) reduced in the mitochondria. This value is not absolutely constant but depends on the substrate being oxidized (e.g., carbohydrates vs. fats) and the coupling efficiency of the electron transport chain. It is generally accepted to be around 2.3-2.5 (or 4.6-5.0 if O refers to O₂, not O atom) when considering NADH and FADH₂ contributions. The app’s range (4.61 for pure fat to 5.0 for pure CHO) reflects O₂ (diatomic oxygen).\n\nActive Muscle Mass (kg) (Slider):\n\nSets the estimated mass (in kilograms) of the skeletal muscle actively involved in performing the cycling exercise. This is a critical parameter because PCr concentrations are typically expressed per kg of muscle mass, and the total PCr pool available is thus dependent on this value. The tooltip in the app provides research-based estimates for active muscle mass in cyclists (e.g., for male cyclists, ~27% of total body weight for seated cycling, potentially increasing to ~31.5% for standing cycling, drawing from MRI data like Janssen et al. (2000) and general exercise physiology considerations).\n\nO₂-Lactate Equiv. (β) (Informational Display Only):\n\nThis is displayed as a constant value of approximately 3.0 ml O₂·kg⁻¹ body mass·mM⁻¹ blood lactate. This represents the “oxygen equivalent of lactate accumulation,” signifying the amount of O₂ (in ml per kg of body mass) that would have been required aerobically to produce the energy equivalent to accumulating 1 mM of lactate in the blood. This concept, extensively detailed by Di Prampero (1981), is used in the model to help partition the overall O₂ deficit into components covered by PCr breakdown and by net lactate production.\n\nShow \\(\\dot{V}O_2\\) Demand Curve (Checkbox):\n\nIf checked, the simulation plot will include an additional trace representing the theoretical, instantaneous \\(\\dot{V}O_2\\) demand required to meet the energy cost of the current power output if metabolism could respond infinitely fast. The area between this demand curve and the actual (kinetically-limited) \\(\\dot{V}O_2\\) curve visually represents the accumulated oxygen deficit (when demand &gt; uptake) or oxygen surplus (during recovery when uptake &gt; demand).\n\n\nPCr Model Dynamics: The simulation models changes in the PCr store based on the dynamic balance between O₂ demand and actual O₂ uptake:\n\nPCr Depletion: When \\(\\dot{V}O_2\\) demand (calculated from the current power output using the steady-state P-\\(\\dot{V}O_2\\) relationship) exceeds the actual \\(\\dot{V}O_2\\) uptake (which is kinetically limited), an oxygen deficit occurs. A portion of the energy required to cover this deficit is supplied by the net breakdown of PCr to rapidly resynthesize ATP (PCr + ADP + H⁺ ↔︎ ATP + Cr). The amount of PCr consumed is proportional to this O₂ deficit portion that is not covered by immediate glycolysis, scaled by the P/O₂ ratio (which converts O₂ deficit to ATP equivalents).\\[ \\Delta PCr_{consumed} \\propto (\\text{O2\\_deficit\\_allocated\\_to\\_PCr}) \\cdot (P/O_2 \\text{ ratio}) \\]\nPCr Resynthesis: When actual \\(\\dot{V}O_2\\) uptake exceeds the current \\(\\dot{V}O_2\\) demand (creating an O₂ surplus, e.g., during recovery periods or when exercise intensity decreases significantly), PCr is resynthesized from creatine and ATP produced by oxidative phosphorylation. This process itself consumes ATP (and thus oxygen) and is modeled as being proportional to the O₂ surplus available for PCr resynthesis, again scaled by the P/O₂ ratio. The app’s code includes a pcrResynthesisFactor (set to 0.5), implying that only a portion of the O₂ surplus is directed towards PCr resynthesis, with the rest potentially contributing to other recovery processes. \\[ \\Delta PCr_{resynthesized} \\propto (\\text{O2\\_surplus} \\cdot \\text{pcrResynthesisFactor}) \\cdot (P/O_2 \\text{ ratio}) \\] The accumulated O₂ deficit represents the total integrated difference between oxygen demand and oxygen uptake from the start of exercise. It reflects the cumulative reliance on anaerobic energy sources (PCr hydrolysis and anaerobic glycolysis leading to lactate production) to meet the energy demands not immediately covered by aerobic metabolism. The kinetics of PCr are often faster than those of \\(\\dot{V}O_2\\) (McCann et al., 1995).\n\n\n\nModel Parameters (for Tab 2 Simulation)\nThis section provides the user with flexibility in defining the core physiological parameters for the dynamic simulation. The user can either link these parameters directly to those defined in Tab 1 (P-V̇O₂-La Dynamics) or set them independently for the simulation.\n\nUse model parameters from Tab 1 (Checkbox):\n\nChecked (Default State): When this box is checked, the fundamental physiological parameters for the Tab 2 simulation—including \\(CE\\) (or \\(CE_{Start}\\)/\\(CE_{Target}\\) if curvilinear), \\(\\dot{V}O_{2,max}\\), \\(\\dot{V}O_{2,Base}\\), \\(vLa_{max}\\), Body Mass, and all HR-related parameters (HRmax, HRBase, CEHR), as well as the curvilinear CE setting—are directly mirrored from their current values in Tab 1. The individual parameter sliders located below this checkbox in the “Individual Parameters” section will then become disabled (greyed out) but will visually reflect the values being imported from Tab 1. This is the recommended approach if the user wants to simulate the dynamic responses of an individual whose steady-state profile has already been established or explored in Tab 1. Any subsequent changes made to these parameters in Tab 1 will automatically propagate to these linked parameters in Tab 2, ensuring consistency.\nUnchecked: If this box is unchecked, the linkage to Tab 1 is broken. The individual parameter sliders in the “Individual Parameters” section (detailed below) become active, allowing the user to define a completely independent set of physiological parameters specifically for the Tab 2 simulation. This is useful if one wants to explore hypothetical scenarios or simulate an individual with a different profile without altering the settings in Tab 1.\n\nIndividual Parameter Sliders (within the “Individual Parameters” collapsible section): These sliders are active only if “Use model parameters from Tab 1” is unchecked. They allow for independent setting of:\n\nCurvilinear CE relationship (Checkbox): Toggles between linear and curvilinear P-\\(\\dot{V}O_2\\) models for the simulation.\nCE (ml·min⁻¹·W⁻¹) (Slider): For the linear CE model.\nCEStart / CETarget (ml·min⁻¹·W⁻¹) (Sliders): For the curvilinear CE model.\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹) (Slider)\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹) (Slider)\nvLamax (mmol·l⁻¹·s⁻¹) (Slider)\nBody Mass (kg) (Slider)\nHRmax (bpm) (Slider)\nHRBase (bpm) (Slider)\nCEHR (bpm·W⁻¹) (Slider) These function identically to their counterparts in Tab 1 but only affect the Tab 2 simulation when the link to Tab 1 is disabled.\n\n\n\n\n\nExercise Simulation Plot (Tab 2)\nThis is a dynamic, multi-trace plot that visualizes various simulated physiological and performance parameters over the time course of the defined exercise protocol. It allows for a comprehensive view of how different systems respond and interact.\n\nX-Axis: Time (in seconds). The range of this axis can be manually adjusted using the “Display Window Settings” in the sidebar to focus on specific periods of the simulation.\nPrimary Y-Axis (Left side of plot - typically denoted as y): This axis displays parameters primarily related to power output, mechanical aspects of movement, and some physiological stores.\n\nPower (W) (Dark Grey Line): The instantaneous power output of the simulated exercise protocol at each second.\nCadence (rpm) (Light Grey Dashed Line): Displayed if cadence data is available (either from a loaded file when “Use cadence from file” is active, or the fixed cadence value if cadence dependency is enabled without file data).\nMPA (W) (Dark Grey-Blue Dashed Line): Maximum Power Available, a dynamic value calculated from the W’ balance model and Pmax, representing the highest power output theoretically achievable at that moment.\nStrain Score (Unitless) (Pink Line): The cumulative Strain Score, reflecting the integrated physiological strain based on the MPA model.\nGlycogen Stores (g) (Dark Pink Dotted Line): The modeled content of glycogen in the active muscle mass, showing depletion during exercise and potential repletion if carbohydrate intake is simulated.\n\nSecondary Y-Axis (Right side of plot - typically y2): This axis is designed to display a variety of scaled parameters, often with different units, requiring careful interpretation of their respective scales. It commonly includes:\n\nW’ Balance (kJ) (Green Line): The current remaining W’ balance.\nLactate (Muscle) (mM) (Dark Red Line): Modeled intramuscular lactate concentration.\nLactate (Blood) (mM) (Dark Red Dotted Line): Modeled blood lactate concentration, typically from a two-compartment model (muscle and blood/other tissues).\nvLaSS (mM/min) (Red Dashed Line): The instantaneous rate of lactate production (converted from mmol·l⁻¹·s⁻¹).\nvLaox (mM/min) (Light Blue Dashed Line): The instantaneous rate of lactate oxidation/elimination.\nPD (Pyruvate Deficit) (mM/min) (Purple Line): The dynamic difference \\(vLa_{ox} - vLa_{SS}\\).\nPCr Store (mM/kg) (Yellow Dotted Line): Modeled phosphocreatine concentration in the active muscle.\npHm (Unitless) (Orange Dotted Line): Modeled intramuscular pH.\nRQpredicted ⋅ 10 (Unitless) (Yellow-Orange Dashed Line): The kinetically-smoothed predicted Respiratory Quotient, scaled by a factor of 10 for better visibility on this shared axis (actual RQ values typically range from 0.7 to 1.0, potentially slightly higher during very intense exercise).\nHeart Rate ⋅ 10⁻¹ (bpm) (Dark Red Dotted Line): The simulated heart rate, scaled by a factor of 0.1 for plotting convenience (e.g., a heart rate of 150 bpm would be plotted at a Y-value of 15).\nZero Line (Thin Grey Dotted Line): A horizontal reference line at y=0 for this axis, useful for interpreting parameters like PD or W’ balance relative to baseline.\n\nTertiary Y-Axis (Right side, typically positioned further out - y3): This axis is dedicated to displaying oxygen uptake parameters.\n\n\\(\\dot{V}O_2\\) (ml/min) (Blue Line): The actual, kinetically-determined oxygen uptake at each second of the simulation.\n\\(\\dot{V}O_2\\) Demand (ml/min) (Blue Dotted Line): (Visible if “Show \\(\\dot{V}O_2\\) Demand Curve” is checked in the PCr model settings) The theoretical instantaneous \\(\\dot{V}O_2\\) that would be required to meet the energy cost of the current power output if metabolic processes could respond infinitely fast.\nO₂ Deficit Area (Light Blue Filled Area): (Visible if the \\(\\dot{V}O_2\\) Demand curve is shown) The shaded area between the \\(\\dot{V}O_2\\) Demand curve and the actual \\(\\dot{V}O_2\\) curve. This visually represents the accumulated oxygen deficit (when demand &gt; uptake) or oxygen surplus (during recovery phases when uptake &gt; demand).\nAcc. O₂ Deficit (ml) (Cyan Dotted Line): The cumulative net oxygen deficit (Total O2 Demand - Total O2 Uptake) over time.\n\n\nUsers can interact with the plot legend by clicking on trace names. This action toggles the visibility of the corresponding trace on the plot, allowing users to focus on specific parameters of interest or to declutter the view. If the simulation is terminated prematurely due to one of the set abort conditions (e.g., lactate exceeding threshold, W’ balance dropping below minimum, glycogen depletion, or complete PCr depletion), an annotation will typically appear on the plot marking the point and reason for termination.\n\n\nExercise Summary Statistics (Tab 2)\nLocated below the simulation plot, this section provides a detailed quantitative summary of the entire simulated exercise session, offering insights into overall workload, energy expenditure, fuel utilization, and various performance metrics.\n\nAverage mechanical Power (W): The time-weighted average of the power output over the duration of the simulation.\nNormalized mechanical Power (W): A power averaging method designed to provide a more physiologically relevant measure of training stress than simple average power, especially for workouts with variable intensity. It typically involves calculating a 30-second rolling average of power, raising these values to the 4th power, averaging these transformed values, and then taking the 4th root of that average. This gives more weight to higher intensity portions.\nTotal Aerobic Energy Expenditure (kcal): The gross (total) energy expended via aerobic pathways throughout the entire simulation. This is calculated from the integral of the \\(\\dot{V}O_2\\) curve over time, converted to energy units using an average caloric equivalent for oxygen (derived from the average predicted RQ over the session).\nTotal mechanical Work (kJ): The sum of (Power × time_interval) for all 1-second intervals of the simulation, converted to kilojoules. This represents the total external work performed.\nTotal metabolic Work (kJ): The sum of the net energy contributions from the three major energy systems: net aerobic metabolism, anaerobic-lactic metabolism, and anaerobic-alactic metabolism. This represents the total energy turnover above resting levels required to perform the exercise.\n\nAerobic contribution (kJ | %): The energy derived from net aerobic metabolism. This is calculated by integrating the actual \\(\\dot{V}O_2\\) curve, subtracting the integrated energy cost equivalent to maintaining \\(\\dot{V}O_{2,Base}\\) for the duration, and converting the net O₂ consumed to kJ. The percentage is relative to the Total Metabolic Work.\nAnaerobic-lactic contribution (kJ | %): The energy derived from net lactate production. This is estimated from the O₂ equivalent of gross lactate production (calculated from the integrated \\(vLa_{SS}\\) kinetics), using factors like the β-coefficient (O₂-Lactate Equiv.) to convert lactate changes into energy equivalents.\nAnaerobic-alactic contribution (kJ | %): The energy derived from the net breakdown of phosphocreatine (PCr). This is estimated from the O₂ equivalent of the total PCr utilized during the exercise bout, based on the P/O₂ ratio.\n\nηgross (%): Overall gross efficiency for the entire session, calculated as: \\[ \\eta_{gross} = (\\text{Total Mechanical Work [kJ]}) / (\\text{Total Gross Aerobic Energy Expenditure [kJ]}) \\times 100\\% \\]\nηnet (%): Overall net efficiency for the entire session, calculated as: \\[ \\eta_{net} = (\\text{Total Mechanical Work [kJ]}) / (\\text{Net Aerobic Energy Expenditure [kJ]}) \\times 100\\% \\] Where net aerobic energy expenditure excludes the energy cost associated with maintaining \\(\\dot{V}O_{2,Base}\\).\nηtotal (%): Overall total efficiency, considering all energy pathways in the denominator: \\[ \\eta_{total} = (\\text{Total Mechanical Work [kJ]}) / (\\text{Total Metabolic Work [kJ]}) \\times 100\\% \\]\nWork &gt; CP (mechanical) (kJ): The total amount of mechanical work (in kJ) performed during periods where the instantaneous power output was above the set Critical Power (CP).\nW’ Balance Drop (kJ): The difference between the initial W’ value (at the start of the simulation) and the minimum W’ balance reached at any point during the exercise.\nTotal Carbohydrate Utilization (g): The total mass of carbohydrates (in grams) estimated to have been oxidized during the simulation, based on the integrated CHO oxidation rate.\nTotal Fat Utilization (g): The total mass of fats (in grams) estimated to have been oxidized during the simulation.\nTraining Stress Score (TSS): An estimation of the overall training load or stress imposed by the simulated workout. It is typically calculated using Normalized Power, the duration of the exercise, and the individual’s Functional Threshold Power (FTP), for which the app uses the set Critical Power (CP) as a proxy. A common formula is: \\[ TSS = (\\text{Duration in seconds} \\cdot \\text{Normalized Power} \\cdot \\text{Intensity Factor}) / (\\text{FTP} \\cdot 3600) \\cdot 100 \\] Where Intensity Factor (IF) = Normalized Power / FTP.\nStrain Score (SS): The total cumulative Strain Score accumulated during the simulation, based on the model by Hauser et al. (2014) and Kontro et al. (as per HTML formulas), which considers Pmax, CP, and W’ dynamics.\n\nSSCP: The component of the total Strain Score attributed to work performed at or below CP.\nSSW’: The component of the total Strain Score attributed to the utilization of W’ (work above CP).\nSSPmax: The component of the total Strain Score attributed to very high power outputs that draw upon the Pmax capacity.\n\n\nThis comprehensive suite of tools, visualizations, and summary statistics offers a powerful platform for students, coaches, athletes, and researchers to explore, understand, and quantify the complex interplay of metabolic processes during various forms of exercise.",
    "crumbs": [
      "Mader's metabolic model"
    ]
  },
  {
    "objectID": "Mader_Modell_Info_1.0.html",
    "href": "Mader_Modell_Info_1.0.html",
    "title": "Mader’s metabolic model",
    "section": "",
    "text": "Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. The content will continue to expand over time.\nWith this File Converter App, you can convert and download .tcx files or .csv files to use them in the “Exercise Simulation” tab of the “Mader Simulation App”. Fit-files must first be converted to .csv format using GOTOES File Converter before you can use the File Converter to transform them into a format compatible with the Mader App.\nLink: Mader App\nDownload Example_Race_Data.csv"
  },
  {
    "objectID": "Mader_Modell_Info_1.0.html#introduction",
    "href": "Mader_Modell_Info_1.0.html#introduction",
    "title": "Mader’s metabolic model",
    "section": "Introduction",
    "text": "Introduction\nThe Mader’s Metabolic Simulation App is an interactive web-based tool designed to model, simulate, and visualize key aspects of human exercise metabolism. Its core principles are deeply rooted in the metabolic models and research pioneered by Prof. Dr. Alois Mader and his colleagues (e.g., Mader (1984); Mader & Heck (1986); Mader & Allmer (1996); Mader (2003)). The application empowers users to explore:\n\nSteady-state metabolic responses to varying power outputs, examining the intricate relationships between power, oxygen uptake (\\(\\dot{V}O_2\\)), lactate production (\\(vLa_{SS}\\)), lactate oxidation (\\(vLa_{ox}\\)), pyruvate deficit (PD), and lactate accumulation (P-V̇O₂-La Dynamics tab).\nDynamic metabolic changes during exercise, allowing for the simulation of responses to predefined step tests or custom-loaded exercise protocols (Exercise Simulation tab).\n\nThis guide aims to provide a comprehensive overview of the app’s functionalities, offering detailed explanations of the various input parameters, the underlying model assumptions, and the interpretation of the outputs and visualizations."
  },
  {
    "objectID": "Mader_Modell_Info_1.0.html#main-application-tabs",
    "href": "Mader_Modell_Info_1.0.html#main-application-tabs",
    "title": "Mader’s metabolic model",
    "section": "Main Application Tabs",
    "text": "Main Application Tabs\nThe application is structured into two primary tabs, each serving a distinct purpose in metabolic modeling:\n\nP-V̇O₂-La Dynamics: This tab focuses on modeling the metabolic system under the assumption that a steady state has been achieved at each discrete power output. It’s ideal for understanding fundamental physiological relationships and thresholds.\nExercise Simulation: This tab allows for the dynamic simulation of metabolic parameters over time in response to continuous or intermittent exercise protocols. This is useful for analyzing specific training sessions or predicting performance under non-steady-state conditions."
  },
  {
    "objectID": "Mader_Modell_Info_1.0.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "href": "Mader_Modell_Info_1.0.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "title": "Mader’s metabolic model",
    "section": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)",
    "text": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)\nThis section delves into the metabolic responses assuming the physiological system has reached equilibrium at each evaluated power output.\n\nControl Panel: P-V̇O₂-La Dynamics\nThe sidebar on the left houses the control groups for adjusting the model parameters specifically for this steady-state analysis.\n\nOxygen Demand Settings\nThis critical section defines the fundamental relationship between mechanical power output (P, in Watts) and the corresponding steady-state oxygen uptake (\\(\\dot{V}O_{2,SS}\\), in ml·min⁻¹).\n\nCurvilinear CE relationship: This checkbox toggles between two models for the P-\\(\\dot{V}O_2\\) relationship.\n\nLinear Model (Unchecked - Default): Assumes a constant oxygen cost per unit of work above \\(\\dot{V}O_{2,Base}\\). The relationship is defined as: \\[ \\dot{V}O_{2,SS} = CE \\cdot P + \\dot{V}O_{2,Base} \\] Here, \\(CE\\) (Cost of Exercise) represents the slope \\(\\Delta\\dot{V}O_2 / \\Delta P\\), and \\(\\dot{V}O_{2,Base}\\) is the y-intercept, representing oxygen uptake during unloaded cycling.\nCurvilinear Model (Checked): Implements a quadratic relationship, acknowledging that mechanical efficiency often decreases at higher exercise intensities, leading to a disproportional increase in \\(\\dot{V}O_2\\) for a given increment in power. The formula used is: \\[ \\dot{V}O_{2,SS} = a \\cdot P^2 + CE_{Start} \\cdot P + \\dot{V}O_{2,Base} \\] \\(CE_{Start}\\) is the initial slope (efficiency) at low power outputs. The coefficient \\(a\\) is automatically calculated by the application to ensure that the slope of this curve at the point where \\(\\dot{V}O_{2,SS}\\) intersects \\(\\dot{V}O_{2,max}\\) matches the user-defined \\(CE_{Target}\\).\n\nCE (ml·min⁻¹·W⁻¹): (Visible and active for the Linear model)\n\nThis slider sets the constant Cost of Exercise (\\(CE\\)). Typical physiological values range from 8 to 15 ml·min⁻¹·W⁻¹. Lower values indicate higher gross mechanical efficiency for the work performed.\nDelta Efficiency (Δη): This derived metric is calculated from the \\(CE\\) value and the caloric equivalent of oxygen. Since the caloric equivalent varies with the Respiratory Quotient (RQ) (from approx. 19.6 kJ·l⁻¹ for pure fat to 21.1 kJ·l⁻¹ for pure CHO, Stegemann (1991)), Δη is presented as a range (e.g., 24.7-26.5%). It represents the efficiency of converting metabolic energy into mechanical work above resting metabolism (i.e., \\(1 / ((CE \\cdot \\text{caloric_equivalent}) / 60)\\)).\nηgross (Fatmax | MLSS): Gross efficiency is the ratio of mechanical work performed (Power output in Watts) to the total aerobic energy expenditure (also converted to Watts). This app calculates and displays ηgross at two physiologically relevant power outputs:\n\nFatmax: The power output associated with the maximal rate of fat oxidation.\nMLSS (Maximal Lactate Steady State): The highest power output that can be sustained with stable blood lactate concentrations. The predicted RQ at these intensities is used to determine the specific caloric equivalent for oxygen in these calculations.\n\nηnet (Fatmax | MLSS): Net efficiency is similar to gross efficiency but considers only the aerobic energy expenditure above the resting (or \\(\\dot{V}O_{2,Base}\\)) level: \\(\\eta_{net} = (\\text{Power output}) / (\\text{Aerobic energy expenditure} - \\text{Resting energy expenditure})\\). This often yields higher efficiency values as it excludes the metabolic cost of basic bodily functions. Calculated at Fatmax and MLSS using predicted RQs.\n\nCEStart (ml·min⁻¹·W⁻¹): (Visible and active for the Curvilinear model)\n\nSets the initial slope of the \\(\\dot{V}O_2\\)-P curve, representing the oxygen cost at very low power outputs.\n\nCETarget (ml·min⁻¹·W⁻¹): (Visible and active for the Curvilinear model)\n\nSets the target slope of the \\(\\dot{V}O_2\\)-P curve specifically at the power output corresponding to \\(\\dot{V}O_{2,max}\\). This helps define the “tail-up” of the curvilinear response.\n\n\n\n\nCadence Dependency\nThis section allows for the incorporation of cycling cadence effects on the \\(\\dot{V}O_2\\)-P relationship, primarily based on the models proposed by Dunst et al. (2025). The general observation is a U-shaped relationship where metabolic efficiency is optimal at a certain cadence range, with increased oxygen cost at very low or very high cadences.\n\nEnable U-Shaped Cadence Dependency:\n\nWhen checked, the \\(CE\\), \\(\\dot{V}O_{2,Base}\\), and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\) parameters are dynamically adjusted based on the selected cadence.\n\nCadence (rpm):\n\nSlider to set the cycling cadence (revolutions per minute). The default is 80 rpm, often near optimal for many cyclists.\n\nCE-Dependency: (Automatically applied if cadence dependency is enabled)\n\nThe Cost of Exercise (\\(CE\\)) becomes a function of cadence, calculated using the formula from Dunst et al. (2025): \\(CE(rpm) = 0.0004 \\cdot rpm^2 - 0.094 \\cdot rpm + 16.857\\).\n\n\\(\\dot{V}O_{2,Base}\\) Dependency: (Automatically applied if cadence dependency is enabled)\n\nBaseline oxygen uptake (\\(\\dot{V}O_{2,Base}\\)) also varies with cadence according to Dunst et al. (2025): \\(\\dot{V}O_{2,Base}(rpm) = 0.172 \\cdot rpm^2 - 14.460 \\cdot rpm + 548.039\\).\n\nInclude \\(\\dot{V}O_{2,max}\\) Dependency:\n\nIf checked, \\(\\dot{V}O_{2,max}\\) is also modeled as cadence-dependent. This feature is noted as experimental and is qualitatively based on figures suggesting optimal \\(\\dot{V}O_{2,max}\\) around 80-90 rpm (Dunst et al. (2025)).\n\nInclude vLamax Dependency:\n\nIf checked, the maximal rate of lactate production (vLamax) is adjusted based on cadence using the formula from Dunst et al. (2025): \\(vLa_{max}(rpm) = -0.0002 \\cdot rpm^2 + 0.00931 \\cdot rpm\\). It’s worth noting that Dunst et al. (2025) suggest this observed dependency might be more related to testing methodology limitations than purely physiological changes in glycolytic capacity.\n\n\n\n\nPhysiological Input-Parameters\nThese are fundamental physiological characteristics defining the simulated individual’s metabolic profile.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹):\n\nMaximal oxygen uptake, a key indicator of aerobic fitness, representing the upper ceiling for aerobic ATP resynthesis.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹·kg⁻¹):\n\nMaximal oxygen uptake expressed relative to body mass. This value is dynamically linked to the absolute \\(\\dot{V}O_{2,max}\\) and the Body Mass slider. Modifying one will automatically update the other.\n\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹):\n\nOxygen uptake during unloaded cycling (i.e., at zero external power output but still in an exercise context). This is typically higher than true basal resting metabolic rate due to the metabolic cost of moving the limbs, increased cardiorespiratory work, etc. It can be estimated using the “\\(\\dot{V}O_{2,Base}\\) Calculation” section or set manually.\n\nvLamax (mmol·l⁻¹·s⁻¹):\n\nMaximal rate of lactate production, reflecting the peak capacity of the anaerobic glycolytic pathway (Mader (1984); Mader & Allmer (1996)). It’s a crucial parameter for determining lactate kinetics and substrate utilization.\n\nHRmax (bpm):\n\nMaximal heart rate achievable by the individual.\n\nHRBase (bpm):\n\nBaseline heart rate during unloaded cycling, corresponding to the metabolic state at \\(\\dot{V}O_{2,Base}\\).\n\nCEHR (bpm·W⁻¹):\n\nHeart Rate Efficiency, also known as the HR-Power slope. It describes the increment in heart rate (beats per minute) for each Watt increase in power output. Typical values in cyclists range from 0.25 to 0.45 bpm·W⁻¹. Lower values are generally indicative of better cardiovascular efficiency.\n\nWeight-based values:\n\nIf checked, the x-axis of the main plot and several displayed output values will be normalized to the individual’s body mass (e.g., power in W·kg⁻¹, \\(\\dot{V}O_2\\) in ml·min⁻¹·kg⁻¹). This facilitates comparisons between individuals of different sizes.\n\n\n\n\n\\(\\dot{V}O_{2,Base}\\) Calculation\nThis utility allows for an estimation of true basal metabolic rate (BMR) using the Harris-Benedict equation, which is then converted to an equivalent resting oxygen uptake. This calculated value can be used to inform the manual setting of the \\(\\dot{V}O_{2,Base}\\) parameter.\n\nGender: (Male/Female) Input for the gender-specific Harris-Benedict formula.\nBody Mass (kg): Input for the Harris-Benedict formula and for general weight-based normalizations.\nAge (years): Input for the Harris-Benedict formula.\nHeight (cm): Input for the Harris-Benedict formula.\nCalculate \\(\\dot{V}O_{2,Base}\\) Button:\n\nTriggers the calculation of BMR (in kcal/day).\nConverts this BMR to a resting \\(\\dot{V}O_2\\) value (in ml/min) using standard caloric equivalents for oxygen.\nThe \\(\\dot{V}O_{2,Base}\\) slider in the “Physiological Input-Parameters” section is automatically updated with this calculated value.\nImportant Note: The \\(\\dot{V}O_{2,Base}\\) parameter in Mader’s model typically represents oxygen uptake during unloaded cycling, which is generally higher than the true basal resting \\(\\dot{V}O_2\\) calculated here. This tool provides a reference point.\n\n\n\n\nSubstrate Utilization\nThis section controls the visualization and modeling of carbohydrate (CHO) and fat oxidation rates based on the lactate balance calculations derived from Mader’s model (Mader (2003)).\n\nShow Substrate Utilization:\n\nIf checked:\n\nAn additional plot appears below the main P-V̇O₂-La plot, displaying substrate utilization percentages.\nTraces for absolute CHO and Fat oxidation rates (in the units selected via “Energy Unit”) are added to the main plot, typically on a third y-axis.\n\n\nEnergy Unit: (Visible if “Show Substrate Utilization” is checked)\n\nAllows selection of units for displaying absolute substrate oxidation rates:\n\ng/h (grams per hour)\nkcal/h (kilocalories per hour)\nkJ/h (kilojoules per hour)\n\n\nAdjust CHO utilization at rest: (Visible if “Show Substrate Utilization” is checked)\n\nIf checked, this feature allows the user to manually adjust the CHO utilization percentage specifically at rest (0 Watts power output). The model’s default CHO utilization at rest is based purely on its internal calculations (\\(vLa_{SS}/vLa_{ox}\\) ratio). However, empirical data (e.g., Brooks (2012); (Friedman1998?); (Friedman1999?)) often suggest that resting individuals, particularly those who are post-absorptive or well-fed, might have a CHO contribution of around 35-40%. This adjustment helps align the model with such empirical observations if desired.\n\nResting CHO percentage (%): (Visible if “Adjust CHO utilization at rest” is checked)\n\nA slider to set the target CHO utilization percentage at rest. The model will then attempt to shift its calculated CHO utilization curve to pass through (or near) this user-defined resting value.\n\n\nModel Basis for Substrate Utilization: The model assumes that the relative contribution of carbohydrates to total energy expenditure increases with exercise intensity. Specifically, the ratio of lactate production (\\(vLa_{SS}\\)) to lactate oxidation (\\(vLa_{ox}\\)) is used as a proxy for the CHO contribution. As \\(vLa_{SS}\\) approaches \\(vLa_{ox}\\) (i.e., PD approaches zero at MLSS), CHO utilization approaches 100%. Fat oxidation is calculated as the remainder of the aerobic energy demand. Energy equivalents used are approximately 4.1 kcal/g for CHO and 9.45 kcal/g for fat. The predicted Respiratory Quotient (RQ) is derived from this substrate mix (ranging from 0.70 for 100% fat to 1.00 for 100% CHO). This predicted RQ is then used with Stegemann’s table (Stegemann (1991)) to determine the precise caloric equivalent of oxygen (kJ·l⁻¹ or kcal·l⁻¹), which is subsequently used in the efficiency calculations (Δη, ηgross, ηnet).\n\n\nPlot Settings\n\nLock Y-Axis / Lock X-Axis:\n\nWhen checked (default), the respective axis range on the main P-V̇O₂-La plot remains fixed. This is beneficial for comparing the effects of parameter changes, as the plot scale does not change. If unchecked, the axis will auto-scale to encompass all plotted data, which can be useful for initial exploration of wide-ranging parameter values.\n\n\n\n\n\nMain Plot: P-V̇O₂-La Dynamics\nThis central plot visualizes the core steady-state metabolic relationships:\n\nX-Axis: Power output (P), displayed in Watts (W) or Watts per kilogram body mass (W·kg⁻¹) if “Weight-based values” is selected.\nPrimary Y-Axis (Left): Oxygen Uptake (\\(\\dot{V}O_2\\)), displayed in milliliters per minute (ml·min⁻¹) or ml·min⁻¹·kg⁻¹.\n\n\\(\\dot{V}O_{2,SS}\\) (Solid Blue Line): Represents the calculated steady-state oxygen uptake at each power output, up to the individual’s \\(\\dot{V}O_{2,max}\\).\n\\(\\dot{V}O_{2,SS,extrapolated}\\) (Dashed Blue Line): Shows the theoretical \\(\\dot{V}O_2\\) demand if it were not constrained by \\(\\dot{V}O_{2,max}\\). This line continues with the same slope (linear model) or curvature (curvilinear model) beyond \\(\\dot{V}O_{2,max}\\).\n\\(\\dot{V}O_{2,max}\\) Line (Dotted Grey Line): A horizontal line indicating the individual’s maximal oxygen uptake.\n\nSecondary Y-Axis (Right - yaxis2): Lactate kinetics, with rates in mmol·l⁻¹·min⁻¹ and accumulation in mmol·l⁻¹.\n\nvLaSS (Dashed Red Line): The steady-state rate of lactate production.\nvLaox (Dashed Light Blue Line): The steady-state rate of lactate oxidation (elimination).\nPD (Pyruvate Deficit) (Solid Purple Line): Calculated as \\(vLa_{ox} - vLa_{SS}\\). A positive PD indicates that lactate elimination capacity exceeds production, often associated with higher fat oxidation. A negative PD indicates lactate production exceeds elimination capacity.\n\nFATmax (Vertical Dotted Grey Line): Marks the power output where the Pyruvate Deficit (PD) is maximal. This is often used as an indicator of the intensity eliciting maximal fat oxidation.\nMLSS (Maximal Lactate Steady State) (Vertical Dotted Grey Line): Marks the power output where PD is zero (i.e., \\(vLa_{SS} = vLa_{ox}\\)). This is the theoretical highest intensity at which lactate clearance can keep pace with lactate production, resulting in stable blood lactate levels during prolonged exercise.\n\nLaAccumulation (Solid Dark Red Line): Represents the theoretical blood lactate concentration that would accumulate if exercise at that specific steady-state power output were sustained indefinitely. This is a modeled value, not a direct simulation of blood lactate over time.\n\nTertiary Y-Axis (Right, further out - yaxis3, visible if “Show Substrate Utilization” is checked): Absolute Substrate Utilization rates, in the units selected by the user (g/h, kcal/h, or kJ/h).\n\nCHO (Unit) (Dotted Pink Line): Shows the absolute rate of carbohydrate oxidation.\nFat (Unit) (Dotted Green Line): Shows the absolute rate of fat oxidation.\n\n\nThe plot includes key annotations for FATmax power, MLSS power, \\(\\dot{V}O_{2,max}\\) value, and the mathematical formula currently defining the \\(\\dot{V}O_2\\)-P relationship (linear or curvilinear, including cadence effects if active).\n\n\nSubstrate Utilization Plot\nThis plot appears below the main plot if “Show Substrate Utilization” is enabled in the control panel.\n\nX-Axis: Power output (P), consistent with the main plot (W or W·kg⁻¹).\nY-Axis: Percentage of Total Aerobic Energy Expenditure (%).\n\nCHO-Utilization (%) (Dotted Pink Line): Shows the relative contribution of carbohydrate oxidation to total aerobic energy production at each power output.\nFat-Utilization (%) (Dotted Dark Green Line): Shows the relative contribution of fat oxidation. This plot provides a clear visual representation of the crossover concept, where the primary fuel source shifts from fats to carbohydrates as exercise intensity increases.\n\n\n\n\nValues Display Area\nLocated below the plot(s), this text area provides a numerical summary of key metabolic parameters calculated at two important physiological points: FATmax and MLSS. For each point, it displays:\n\nPower output (W or W·kg⁻¹)\nSteady-state \\(\\dot{V}O_{2,SS}\\) (absolute and as a percentage of \\(\\dot{V}O_{2,max}\\))\nRate of lactate production (\\(vLa_{SS}\\) in mmol·l⁻¹·min⁻¹)\nRate of lactate oxidation (\\(vLa_{ox}\\) in mmol·l⁻¹·min⁻¹)\nPyruvate Deficit (PD in mmol·l⁻¹·min⁻¹)\nTheoretical Lactate Accumulation (LaAccumulation in mmol·l⁻¹)\nIf substrate utilization is shown:\n\nAbsolute carbohydrate oxidation rate (in selected units) and its percentage contribution.\nAbsolute fat oxidation rate (in selected units) and its percentage contribution.\nPredicted Respiratory Quotient (RQ).\n\nCalculated gross efficiency (ηgross in %).\nCalculated net efficiency (ηnet in %).\n\nIf cadence dependency is active, this area will also display the effective \\(CE\\), \\(\\dot{V}O_{2,Base}\\), and, if their respective dependencies are enabled, the effective \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\) values for the selected cadence."
  },
  {
    "objectID": "Mader_Modell_Info_1.0.html#tab-2-exercise-simulation-dynamic-model",
    "href": "Mader_Modell_Info_1.0.html#tab-2-exercise-simulation-dynamic-model",
    "title": "Mader’s metabolic model",
    "section": "Tab 2: Exercise Simulation (Dynamic Model)",
    "text": "Tab 2: Exercise Simulation (Dynamic Model)\nThis tab transitions from steady-state assumptions to a dynamic simulation of metabolic responses over time, reacting to changing power outputs defined by an exercise protocol.\nA disclaimer at the top of this tab indicates that its features and calculations are still under development and should be considered experimental.\n\nControl Panel: Exercise Simulation\n\nStep Test / Exercise Simulation Parameters\nThese controls define the exercise protocol to be simulated, or allow for the loading of external power data.\n\nStep Increment (Watts): For a generated incremental step test, this sets the amount by which power increases at each new step.\nStep Duration (s): For a generated step test, this defines the duration (in seconds) of each power step.\nMaximum Power (Watts): The highest power output that will be targeted in a generated incremental step test. The test will ramp up to this power.\nPower Adjustment (%): A global scaling factor (0-200%) applied to all power values in the current workout, whether generated or loaded from a file. This allows for easy simulation of the same relative effort for different fitness levels.\nLoad Example Exercise Data Button: Loads a pre-defined interval workout (including power and cadence data) into the simulation. This is useful for quickly exploring the app’s dynamic capabilities.\nInsert workout file / File Upload:\n\nProvides an interface to upload workout data from external files. Supported formats include .csv (comma-separated values), .txt (tab-separated or other delimited text), .xlsx, and .xls (Microsoft Excel formats).\nThe app expects columns for time (or timestamp), power, and optionally cadence.\nFile has headers: A checkbox (default checked) to indicate whether the first row of the uploaded file contains column names. If unchecked, the app assumes data starts from the first row and uses default column order (Time, Power, Cadence).\nUploaded workout data gap processing: This option determines how the app handles missing data points or time gaps in 1-second interpolated data from an uploaded file:\n\nMaintain last values (Default): If there’s a gap between recorded data points, the power (and cadence, if available) from the last valid preceding data point is carried forward to fill the gap. This is often preferred for visualizing structured interval training where power is meant to be constant during an interval.\nInsert zero values: If there’s a gap, the power (and cadence) for the missing seconds are set to zero. This is useful for analyzing training sessions with distinct rest periods where actual power output drops to zero.\n\n\nSmooth Power Curve (5-point window) Button: Applies a 5-point moving average filter to the current power data (loaded or generated). This can help reduce noise or rapid fluctuations in recorded power data, providing a smoother input for the simulation.\nDisplay Window Settings: These controls allow users to customize the visible range of the plot axes without altering the underlying simulation data or calculations. This is purely for visualization focus.\n\nAdjust X-Axis range (Checkbox): Enables manual adjustment of the time axis.\n\nStart Time (s) / End Time (s) (Sliders): Define the visible start and end times on the x-axis of the simulation plot.\n\nAdjust Y-Axis ranges (Checkbox): Enables manual adjustment of the various y-axes.\n\nPower Y-Axis Maximum (Slider): Sets the maximum value for the primary Y-axis (which displays Power, Cadence, MPA, Strain Score, Glycogen).\n\\(\\dot{V}O_2\\) Y-Axis Maximum (Slider): Sets the maximum value for the tertiary Y-axis (displaying \\(\\dot{V}O_2\\) and O₂ Deficit).\nLactate Y-Axis Minimum / Maximum (Sliders): Sets the minimum and maximum values for the secondary Y-axis (displaying Lactate, W’, PCr, pH, Rates, RQ, HR).\n\n\n\n\n\nCadence Dependency\nSimilar to Tab 1, this section allows for the incorporation of cadence effects on metabolic parameters during the dynamic simulation.\n\nEnable U-Shaped Cadence Dependency: Activates cadence-dependent adjustments to \\(CE\\), \\(\\dot{V}O_{2,Base}\\), and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\), using the formulas from Dunst et al. (2025).\nFixed Cadence (rpm): (Used if “Use cadence from file” is unchecked or if no cadence data is available in the file). Sets a constant cadence value that will be assumed throughout the simulation if cadence-dependent effects are enabled.\nUse cadence from file (if available):\n\nIf checked AND cadence data is present in an uploaded workout file AND cadence dependency is enabled, the simulation will use the time-varying cadence values from the file to modulate metabolic parameters.\nIf no cadence data is in the file, or if this option is unchecked, the “Fixed Cadence” value will be used if cadence dependency is active.\n\nThe specific dependencies (CE, \\(\\dot{V}O_{2,Base}\\), Include \\(\\dot{V}O_{2,max}\\) Dependency, Include vLamax Dependency) can be individually toggled, functioning identically to their Tab 1 counterparts but applied dynamically over time.\n\n\n\nPhysiological Parameters (Dynamic Simulation)\nThese parameters govern the kinetic (time-dependent) responses of the metabolic model.\n\n\\(\\dot{V}O_2\\) Start (ml·min⁻¹):\n\nThe initial oxygen uptake value at the very beginning (time = 0s) of the simulation. This slider is dynamically constrained to be between the current effective \\(\\dot{V}O_{2,Base}\\) and \\(\\dot{V}O_{2,max}\\) (which can vary if cadence dependency is active). The default starting value is often set near the \\(\\dot{V}O_2\\) at Fatmax from Tab 1.\n\n\\(\\dot{V}O_{2,on}\\) time constant (τon) (s):\n\nDefines the speed of the exponential rise of \\(\\dot{V}O_2\\) towards its new, higher target value when exercise intensity increases or exercise begins. A smaller τon indicates faster “on” kinetics. The \\(\\dot{V}O_2\\) at any time \\(t\\) during an increase is modeled as: $ O_2(t) = O_{2,initial} + (O_{2,target} - O_{2,initial}) (1 - e^{-(t - t_{delay})/_{on}}) $\nIntensity-Dependent τon (Checkbox):\n\nIf checked, τon is not a fixed value. Instead, it’s dynamically calculated for each step based on the \\(\\dot{V}O_2\\) (as a percentage of the current \\(\\dot{V}O_{2,max}\\)) of the immediately preceding time step. The base formula is \\(\\tau_{on\\_base} = 0.38 \\cdot \\text{PrevIntensity%} + 6\\) seconds. The slider value then acts as the τon that would occur if the preceding intensity was 50% \\(\\dot{V}O_{2,max}\\). This means the slider effectively sets an offset to the formula, allowing the user to shift the entire linear τon-intensity relationship. This feature simulates the physiological observation that \\(\\dot{V}O_2\\) on-kinetics can be slower if an exercise bout is initiated from a higher pre-existing metabolic rate (e.g., due to prior high-intensity work).\n\n\n\\(\\dot{V}O_{2,off}\\) time constant (τoff) (s):\n\nDefines the speed of the exponential fall of \\(\\dot{V}O_2\\) towards its new, lower target value when exercise intensity decreases or during recovery.\nIntensity-Dependent τoff (Checkbox):\n\nIf checked, τoff is dynamically calculated based on the maximum \\(\\dot{V}O_2\\) (as % of current \\(\\dot{V}O_{2,max}\\)) achieved within a lookback window (typically defined as 2 times the previous step’s τoff). The base formula is \\(\\tau_{off\\_base} = 0.45 \\cdot \\text{Intensity%} + 10\\) seconds. Similar to τon, the slider value sets τoff for a reference 50% intensity, thereby shifting the relationship. This models that recovery of \\(\\dot{V}O_2\\) might be faster after lower intensity efforts and slower after higher intensity efforts due to factors like greater metabolic disturbance.\n\n\n\\(\\dot{V}O_2\\) Response Delay (s):\n\nA pure time delay (in seconds) before the exponential \\(\\dot{V}O_2\\) response (either “on” or “off”) begins following a change in power output. This accounts for factors like circulatory transit time of blood from lungs to muscles (and vice-versa for CO₂ control feedback) and initial inertia in muscular metabolic pathway activation. Affects the timing of actual \\(\\dot{V}O_2\\) change, O₂ deficit/surplus calculation, and subsequently \\(vLa_{ox}\\).\n\nLactate exercise termination value (mmol·l⁻¹):\n\nIf the “Terminate simulation…” checkbox below is active, the simulation will automatically stop if the modeled blood lactate concentration reaches this specified threshold.\n\nTerminate simulation when lactate exceeds max value (Checkbox): Enables or disables the lactate-based abortion criterion.\nResting Lactate-value (mmol·l⁻¹):\n\nThe initial blood lactate concentration assumed at the start (time = 0s) of the simulation.\n\nvLaSS,on Time Constant (τvLaSS,on) (s):\n\nThe time constant governing the exponential rise of the lactate production rate (\\(vLa_{SS}\\)) towards its new, higher target value when exercise intensity increases. Represents how quickly the glycolytic flux adapts upwards.\n\nvLaSS,off Time Constant (τvLaSS,off) (s):\n\nThe time constant governing the exponential fall of \\(vLa_{SS}\\) towards its new, lower target value when exercise intensity decreases or during recovery.\n\nvLaSS Response Delay (s):\n\nA pure time delay (in seconds) before the lactate production rate (\\(vLa_{SS}\\)) begins its exponential kinetic response to a change in exercise intensity. This simulates inherent delays in the activation or deactivation of the glycolytic pathway.\n\nCap vLass by \\(\\dot{V}O_2\\) Deficit (Checkbox):\n\nAn optional physiological constraint. If checked, the actual lactate production rate (\\(vLa_{SS}\\)) at any given time point is capped. The cap is determined such that the net anaerobic energy supply (derived from lactate production minus concurrent lactate oxidation) does not exceed the current calculated oxygen deficit (which is \\(\\dot{V}O_2 \\text{ Demand} - \\dot{V}O_2 \\text{ Actual}\\)). The purpose is to enhance physiological plausibility by preventing an unrealistic “overshoot” of anaerobic energy production, especially when aerobic energy supply is still increasing or limited. Default is off, meaning \\(vLa_{SS}\\) is determined purely by its own kinetics without this energy balance cap.\n\nMuscle pH (pHm) Simulation:\n\nThis feature simulates changes in intramuscular pH (pHm). The calculation is based on principles outlined by Mader (2003) and further discussed in texts like Heck & Bartmus (2022, Ch. 4, not in provided citation list). It considers:\n\nEstimated inorganic phosphate concentration [Pi], which is inversely related to [PCr].\nIntramuscular lactate concentration [La]m, derived from the dynamic lactate accumulation model.\nEstimated arterial partial pressure of CO₂ (pCO₂), which is modeled to increase with relative exercise intensity (%\\(\\dot{V}O_{2,max}\\)).\n\nThe pHm calculated from the previous time step is then used to modulate the effective maximal lactate production rate (\\(vLa_{max,eff}\\)) for the current time step. This simulates the well-known inhibitory effect of falling pH on key glycolytic enzymes, particularly phosphofructokinase (PFK). The relationship is often sigmoidal: \\(vLa_{max,eff} = vLa_{max,base} \\cdot \\text{PFK_Activity_Factor(pH}_m\\text{)}\\) where PFK_Activity_Factor decreases as pHm drops below a certain threshold (e.g., below ~7.0).\nThis pH-modulated \\(vLa_{max,eff}\\) then becomes the input for determining the target \\(vLa_{SS}\\) for the current time step, creating a feedback loop where high lactate production can lead to lower pH, which in turn can reduce further lactate production.\n\n\n\n\nGlycogen Storage Parameters\nThis section models the dynamics of muscle glycogen stores during exercise, including depletion due to carbohydrate oxidation and potential repletion from carbohydrate intake.\n\nAuto-calculate glycogen values based on muscle mass (Checkbox):\n\nIf checked, the “Initial Glycogen Storage” and “Maximum Glycogen Storage” sliders are automatically populated based on the “Active Muscle Mass” value (from the PCr section). This calculation assumes typical glycogen concentrations in muscle tissue, for example, around 15 g of glycogen per kg of active muscle for normal, fed states, and perhaps 20 g/kg for carbohydrate-loaded states.\n\nInitial Glycogen Storage (g):\n\nThe amount of glycogen (in grams) assumed to be available in the active muscle mass at the beginning of the simulation.\n\nMaximum Glycogen Storage (g):\n\nThe physiological upper limit for glycogen storage in the active muscle mass. Repletion from carbohydrate intake will not exceed this value.\n\nCarbohydrate Intake Rate (g·h⁻¹):\n\nThe rate (in grams per hour) at which exogenous carbohydrates are ingested and become available for either direct oxidation or glycogen synthesis during the simulation. Typical maximal exogenous CHO oxidation rates are often cited around 60-90 g/h, depending on the type of CHO and individual training status ((Jeukendrup2005?); Jeukendrup & Gleeson (2019)).\n\n\nThe model calculates glycogen depletion based on the rate of carbohydrate oxidation. The CHO oxidation rate itself is derived dynamically from the balance of \\(vLa_{SS}\\) and \\(vLa_{ox}\\), similar to Tab 1, but applied kinetically over time. If glycogen stores reach zero, it can trigger a simulation abortion if that condition is set.\n\n\nW’ Balance Parameters\nThis section implements a model for W’ (pronounced “W prime”), which represents the finite amount of work that can be performed above an individual’s Critical Power (CP). Depletion of W’ is associated with fatigue.\n\nCritical Power (CP) (W):\n\nThe highest power output that can, theoretically, be sustained for a very long time without a progressive loss of homeostasis or depletion of W’. It’s a key parameter in endurance performance modeling.\n\nW’ (kJ):\n\nThe total amount of work (expressed in kilojoules) that can be performed above CP before W’ is fully depleted. It reflects anaerobic capacity and tolerance for high-intensity exercise.\n\nPmax (W):\n\nMaximum instantaneous power an athlete can produce, typically in a very short sprint (e.g., a few seconds). This parameter is integral to the 3-parameter critical power model and is specifically used in this app for calculating MPA (Maximum Power Available) and the Strain Score (SS), drawing on concepts from Hauser et al. (2014) and potentially more recent work like Kontro et al. (2025, though not in the provided citation list, the HTML formulas align with this). Pmax is considered to represent the capacity of the alactic (PCr/immediate) energy system.\n\nUse MLSS from Tab 1 as CP (Checkbox):\n\nIf checked (default), the CP value for this simulation is automatically set to the MLSS power output calculated in Tab 1. The CP slider below becomes disabled. This provides a physiologically grounded estimate for CP.\n\nW’ Balance Minimum (kJ):\n\nA user-defined lower threshold for W’ balance.\n\nAbort simulation when W’ Balance falls below slider minimum (Checkbox):\n\nIf checked (default), the simulation will terminate if the calculated W’BAL (W’ balance) drops below the specified “W’ Balance Minimum”.\n\n\nThe W’ balance dynamics are modeled as follows (conceptually similar to the model by Skiba and colleagues, though specific citation from list is pending): * During exercise above CP (P &gt; CP), W’ depletes: $ W’{BAL}(t) = W’{BAL}(u) - (P - CP) (t-u) $ where \\(W'_{BAL}(t)\\) is W’ balance at time \\(t\\), \\(W'_{BAL}(u)\\) is W’ balance at previous time \\(u\\), and \\((t-u)\\) is the time interval. * During exercise below CP (P &lt; CP), W’ recovers: The recovery follows an exponential pattern, often described by: $ W’_{BAL}(t) = W’0 - (W’0 - W’{BAL}(u)) e^{-((CP - P{recovery})/W’_0) (t-u)} $ where \\(W'_0\\) is the initial W’ capacity, and \\(P_{recovery}\\) is the power output during recovery.\nThe MPA & Strain Score (SS) model, drawing from work like Hauser et al. (2014) and Kontro et al. (2025, formulas in HTML), is calculated as: * MPA (Maximum Power Available): The highest power output theoretically achievable at any given moment, considering the current W’ depletion. $ MPA = P_{max} - (P_{max} - CP) (W’{EXP}/W’)^2 $ where \\(W'_{EXP}\\) is the amount of W’ expended (\\(W'_0 - W'_{BAL}\\)). * kstrain (Strain Coefficient): A factor that modulates the perceived strain based on current power relative to MPA and CP. $ k{strain} = (P_{max} - MPA + CP)/(P_{max} - P + CP) $ * SR (Strain Rate): The instantaneous rate of strain accumulation. $ SR = k_{strain} P $ * SS (Strain Score): The cumulative strain over the exercise bout. $ SS = (SR t) () $ The Normalization Factor, \\((P_{max}/CP^2) \\cdot (100/3600)\\), scales the score so that 1 hour at CP roughly equals 100 SS points.\n\n\nPCr and O₂ Deficit Model\nThis section simulates the dynamics of phosphocreatine (PCr) stores in the active muscle and the associated oxygen deficit incurred at the onset of exercise or during increases in intensity.\n\nResting PCr (mmol·kg⁻¹ wet muscle weight):\n\nThe initial concentration of PCr in the active muscle tissue at the start of the simulation. Typical physiological values in humans range from about 15 to 38 mmol·kg⁻¹ ww. PCr serves as an immediate buffer for ATP regeneration.\n\nP/O₂ (mol ATP · mol O₂⁻¹):\n\nThe P/O₂ ratio represents the stoichiometry of oxidative phosphorylation: the number of moles of ATP synthesized per mole of diatomic oxygen (O₂) reduced. This value is not constant but depends on the substrate being oxidized and the efficiency of the electron transport chain. It’s typically around 4.61 for pure fat oxidation and up to 5.0 for pure carbohydrate oxidation. The slider allows for adjustment within this physiological range.\n\nActive Muscle Mass (kg):\n\nThe estimated mass of the muscle actively involved in the cycling exercise. This is a crucial parameter as PCr concentrations are expressed per kg of muscle. The tooltip provides research-based estimates (e.g., for cyclists, women: ~22-25.5% of body weight; men: ~27-31.5% of body weight, depending on seated/standing, drawing from data like Janssen et al. (2000) (not in list) and general exercise physiology).\n\nO₂-Lactate Equiv. (β) (Display Only):\n\nDisplayed as a constant value of approximately 3.0 ml O₂·kg⁻¹·mM⁻¹. This represents the “oxygen equivalent of lactate accumulation,” meaning the amount of O₂ (in ml per kg body mass) that would have been required aerobically to produce the energy equivalent to accumulating 1 mM of lactate in the blood. This concept, detailed by (diPrampero1981?) (not in provided citation list, but noted in HTML comments), is used in the model to help partition the O₂ deficit between contributions from PCr breakdown and net lactate production.\n\nShow \\(\\dot{V}O_2\\) Demand Curve (Checkbox):\n\nIf checked, the simulation plot will include a trace representing the theoretical, instantaneous \\(\\dot{V}O_2\\) demand required to meet the energy cost of the current power output. The area between this demand curve and the actual kinetically-limited \\(\\dot{V}O_2\\) curve visually represents the accumulated oxygen deficit (or surplus during recovery).\n\n\nPCr Model Dynamics: The model calculates changes in the PCr store based on the balance between O₂ demand and actual O₂ uptake: * PCr Depletion: When \\(\\dot{V}O_2\\) demand exceeds actual \\(\\dot{V}O_2\\) uptake (O₂ deficit), a portion of this deficit is met by the breakdown of PCr to resynthesize ATP. The amount of PCr consumed is proportional to this O₂ deficit portion, scaled by the P/O₂ ratio. $ PCr_{consumed} () (P/O_2 ) $ * PCr Resynthesis: When actual \\(\\dot{V}O_2\\) uptake exceeds \\(\\dot{V}O_2\\) demand (O₂ surplus, e.g., during recovery or lower intensity), PCr is resynthesized. This process also consumes ATP (and thus O₂) and is proportional to the O₂ surplus, scaled by the P/O₂ ratio and a resynthesis efficiency factor (set to 0.5 in the code, meaning 50% of O2 surplus contributes to PCr resynthesis). $ PCr_{resynthesized} ( ) (P/O_2 ) $ The accumulated O₂ deficit represents the total volume of oxygen that would have been consumed if aerobic metabolism could have instantaneously met the energy demand from the start of exercise.\n\n\nModel Parameters (for Tab 2 Simulation)\nThis section allows the user to choose whether the physiological parameters for the Tab 2 simulation are taken from Tab 1 or set independently.\n\nUse model parameters from Tab 1 (Checkbox):\n\nChecked (Default): The core physiological parameters for the simulation (CE, \\(\\dot{V}O_{2,max}\\), \\(\\dot{V}O_{2,Base}\\), vLamax, Body Mass, HR parameters, and curvilinear settings) are directly mirrored from their current values in Tab 1. The individual parameter sliders below this checkbox become disabled but will reflect the values from Tab 1. This ensures consistency if the user wants to simulate dynamics based on a profile established in the steady-state tab. Changes in Tab 1 will automatically propagate to these linked parameters.\nUnchecked: The individual parameter sliders below this checkbox become active, allowing the user to define a completely independent set of physiological parameters for the Tab 2 simulation, different from those in Tab 1.\n\nIndividual Parameter Sliders: (Active if “Use model parameters from Tab 1” is unchecked)\n\nCurvilinear CE relationship (Checkbox): As in Tab 1.\nCE (ml·min⁻¹·W⁻¹) (Slider): For linear CE model.\nCEStart / CETarget (Sliders): For curvilinear CE model.\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹) (Slider)\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹) (Slider)\nvLamax (mmol·l⁻¹·s⁻¹) (Slider)\nBody Mass (kg) (Slider)\nHRmax (bpm) (Slider)\nHRBase (bpm) (Slider)\nCEHR (bpm·W⁻¹) (Slider)\n\n\n\n\n\nExercise Simulation Plot (Tab 2)\nThis is a dynamic, multi-trace plot that visualizes various simulated physiological and performance parameters over the time course of the defined exercise protocol.\n\nX-Axis: Time (seconds). The range can be manually adjusted using the “Display Window Settings.”\nPrimary Y-Axis (Left - y): Displays parameters primarily related to power, mechanical output, and some stores.\n\nPower (W) (Dark Grey Line): The instantaneous power output of the simulated exercise.\nCadence (rpm) (Light Grey Dashed Line): Displayed if cadence data is available from a loaded file and “Use cadence from file” is active, or if fixed cadence is used with cadence dependency enabled.\nMPA (W) (Dark Grey-Blue Dashed Line): Maximum Power Available, calculated from the W’ balance model.\nStrain Score (Unitless) (Pink Line): Cumulative Strain Score.\nGlycogen Stores (g) (Dark Pink Dotted Line): Modeled active muscle glycogen content.\n\nSecondary Y-Axis (Right - y2): Displays a variety of scaled parameters, including lactate kinetics, W’ balance, PCr, pH, RQ, and HR. This axis often has a wider range to accommodate different scales.\n\nW’ Balance (kJ) (Green Line): The current W’ balance.\nLactate (Muscle) (mM) (Dark Red Line): Modeled intramuscular lactate concentration.\nLactate (Blood) (mM) (Dark Red Dotted Line): Modeled blood lactate concentration (from a 2-compartment model).\nvLaSS (mM/min) (Red Dashed Line): Instantaneous rate of lactate production.\nvLaox (mM/min) (Light Blue Dashed Line): Instantaneous rate of lactate oxidation.\nPD (Pyruvate Deficit) (mM/min) (Purple Line): \\(vLa_{ox} - vLa_{SS}\\).\nPCr Store (mM/kg) (Yellow Dotted Line): Modeled phosphocreatine concentration in active muscle.\npHm (Unitless) (Orange Dotted Line): Modeled intramuscular pH.\nRQpredicted ⋅ 10 (Unitless) (Yellow-Orange Dashed Line): Predicted Respiratory Quotient, scaled by a factor of 10 for better visibility on this shared axis. (Actual RQ values from 0.7 to 1.05).\nHeart Rate ⋅ 10⁻¹ (bpm) (Dark Red Dotted Line): Simulated heart rate, scaled by a factor of 0.1 (e.g., 150 bpm shown as 15).\nZero Line (Thin Grey Dotted Line): Reference line at y=0 for this axis.\n\nTertiary Y-Axis (Right, further out - y3): Displays oxygen uptake parameters.\n\n\\(\\dot{V}O_2\\) (ml/min) (Blue Line): The actual, kinetically-determined oxygen uptake.\n\\(\\dot{V}O_2\\) Demand (ml/min) (Blue Dotted Line): (Visible if “Show \\(\\dot{V}O_2\\) Demand Curve” is checked) The theoretical instantaneous \\(\\dot{V}O_2\\) required to meet the energy cost of the current power output.\nO₂ Deficit Area (Light Blue Filled Area): (Visible if demand curve is shown) The area between the \\(\\dot{V}O_2\\) Demand curve and the actual \\(\\dot{V}O_2\\) curve, visually representing the oxygen deficit (when demand &gt; uptake) or surplus (when uptake &gt; demand).\nAcc. O₂ Deficit (ml) (Cyan Dotted Line): The cumulative net oxygen deficit over time.\n\n\nUsers can interact with the plot legend by clicking on trace names to toggle their visibility. This is useful for focusing on specific parameters. If the simulation is terminated prematurely due to one of the set abort conditions (lactate, W’ balance, glycogen depletion, or PCr depletion), an annotation will appear on the plot marking the point and reason for termination.\n\n\nExercise Summary Statistics (Tab 2)\nLocated below the simulation plot, this section provides a quantitative summary of the entire simulated exercise session.\n\nAverage mechanical Power (W): Time-weighted average of the power output.\nNormalized mechanical Power (W): A power averaging method that gives more weight to higher intensity portions, often used for estimating physiological strain (conceptually similar to TrainingPeaks® NP®). Calculated using a 30-second rolling average raised to the 4th power, averaged, then taken to the 1/4th power.\nTotal Aerobic Energy Expenditure (kcal): The gross (total) energy expended via aerobic pathways throughout the simulation, calculated from total oxygen consumption and an average caloric equivalent.\nTotal mechanical Work (kJ): The sum of (Power × time_interval) for all intervals, converted to kJ.\nTotal metabolic Work (kJ): The sum of energy contributions from net aerobic, anaerobic-lactic, and anaerobic-alactic pathways. This represents the total energy turnover above resting levels to perform the exercise.\n\nAerobic contribution (kJ | %): Energy derived from net aerobic metabolism (actual \\(\\dot{V}O_2\\) minus \\(\\dot{V}O_{2,Base}\\), converted to kJ). The percentage is relative to Total Metabolic Work.\nAnaerobic-lactic contribution (kJ | %): Energy derived from net lactate production. This is estimated from the O₂ equivalent of gross lactate production (from \\(vLa_{SS}\\) kinetics), assuming that the energy not covered by PCr or immediate \\(\\dot{V}O_2\\) increase is initially met by glycolysis.\nAnaerobic-alactic contribution (kJ | %): Energy derived from the net breakdown of PCr. This is estimated from the O₂ equivalent of PCr utilization.\n\nηgross (%): Gross efficiency, calculated as \\((\\text{Total mechanical Work}) / (\\text{Total Gross Aerobic Energy Expenditure})\\).\nηnet (%): Net efficiency, calculated as \\((\\text{Total mechanical Work}) / (\\text{Net Aerobic Energy Expenditure})\\), where net aerobic energy excludes the energy cost associated with \\(\\dot{V}O_{2,Base}\\).\nηtotal (%): Total efficiency, calculated as \\((\\text{Total mechanical Work}) / (\\text{Total Metabolic Work})\\). This considers all three (net aerobic, lactic, alactic) energy pathway contributions in the denominator.\nWork &gt; CP (mechanical) (kJ): The total amount of mechanical work performed during periods where power output was above the set Critical Power (CP).\nW’ Balance Drop (kJ): The difference between the initial W’ and the minimum W’ balance reached during the simulation.\nTotal Carbohydrate Utilization (g): The total mass of carbohydrates oxidized during the simulation.\nTotal Fat Utilization (g): The total mass of fats oxidized during the simulation.\nTraining Stress Score (TSS): An estimation of training load, calculated using Normalized Power, exercise duration, and the set Critical Power (CP) as a proxy for Functional Threshold Power (FTP). Formula: \\(TSS = (\\text{Duration in seconds} \\cdot \\text{Normalized Power} \\cdot \\text{Intensity Factor}) / (\\text{FTP} \\cdot 3600) \\cdot 100\\), where Intensity Factor = Normalized Power / FTP.\nStrain Score (SS): The total cumulative Strain Score based on the model by Hauser et al. (2014) and Kontro et al. (2025, as per HTML formulas).\n\nSSCP: The component of the total Strain Score attributed to work at or below CP.\nSSW’: The component attributed to the utilization of W’.\nSSPmax: The component attributed to contributions from Pmax (very high intensity, short duration power).\n\n\nThis comprehensive suite of tools and visualizations offers a powerful platform for students, coaches, and researchers to explore and understand the complex interplay of metabolic processes during exercise."
  },
  {
    "objectID": "Mader_App_Theory.html",
    "href": "Mader_App_Theory.html",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "",
    "text": "The precise quantification of energy released and conserved during carbohydrate metabolism is fundamental to understanding exercise physiology and cellular bioenergetics. Different textbooks and research articles may present slightly varying values due to differing assumptions about standard states, cellular conditions, and the specific pathways or efficiencies considered. This section aims to compare and elucidate the energy yields from glucose and glycogen breakdown as presented in key literature, including Stegemann (1991), Brooks (2012), Åstrand et al. (2003), and Nelson & Cox (2012), with significant contributions and context provided by the comprehensive review of Di Prampero (1981). This review by Di Prampero (1981) is particularly valuable as it synthesizes experimental data from that era and provides a framework for understanding the energetics of muscular exercise under various conditions.\n\n\nAnaerobic glycolysis is the metabolic pathway that converts glucose (or glucosyl units from glycogen) into pyruvate, and subsequently into lactate under anaerobic conditions, with a net production of ATP. This pathway is crucial for rapid energy supply, especially when oxygen availability is limited, such as during high-intensity exercise. Di Prampero (1981, S. 171, Sect. 6.1) dedicates an entire section to the “Lactic Mechanism,” underscoring its importance. He notes that “When the intensity of the exercise exceeds VO₂max, a substantial accumulation of lactic acid (La) in blood takes place. Under these conditions the exercise comes to an end when the blood La has reached a concentration of the order of 16–17 mM in non-athletic subjects.” This highlights the capacity limitation of this pathway.\n\n\nThe overall conversion of glucose to lactate is an exergonic process, releasing a significant amount of free energy, which can then be partially conserved in ATP.\n\nAccording to Stegemann (1991, S. 36, Gleichung 10), the direct conversion from glucose to lactate has a standard free energy change of: \\[\n\\text{C}_6\\text{H}_{12}\\text{O}_6 \\text{ (Glucose)} \\rightarrow 2 \\text{ C}_3\\text{H}_6\\text{O}_3 \\text{ (Lactate)} \\quad (\\Delta G'^\\circ = -199 \\text{ kJ/mol glucose})\n\\tag{1}\\] This value indicates the total exergonic drive of the anaerobic breakdown of glucose to lactate.\nNelson & Cox (2012) [S. 546, Eq. 14-1 & 14-3; S. 563] detail this process in two main stages for calculation:\n\nGlycolysis to pyruvate (the exergonic part, excluding ATP formation for this specific ΔG component): \\[\n\\text{Glucose} + 2\\text{NAD}^+ \\rightarrow 2\\text{ Pyruvate} + 2\\text{NADH} + 2\\text{H}^+ \\quad (\\Delta G_1'^\\circ = -146 \\text{ kJ/mol})\n\\] (This is derived from Nelson & Cox (2012, S. 546, Eq. 14-2)).\nReduction of pyruvate to lactate (occurring twice per initial glucose molecule): \\[\n\\text{Pyruvate} + \\text{NADH} + \\text{H}^+ \\leftrightarrow \\text{L-Lactate} + \\text{NAD}^+ \\quad (\\Delta G_2'^\\circ = -25.1 \\text{ kJ/mol})\n\\] (From Nelson & Cox (2012, S. 563)). This reaction is crucial for regenerating NAD⁺ from NADH, allowing glycolysis to continue under anaerobic conditions, a point also emphasized by Di Prampero (1981, S. 172) when he states, “The excess pyruvate is reduced to La and the resulting oxidation of NADH to NAD allows glycolysis to continue.” The overall standard free-energy change for glucose to lactate according to Nelson & Cox (2012) is the sum: \\[\n\\Delta G'_{\\text{glucose} \\rightarrow \\text{lactate}} = \\Delta G_1'^\\circ + 2 \\times \\Delta G_2'^\\circ = -146 \\text{ kJ/mol} + 2 \\times (-25.1 \\text{ kJ/mol}) = -196.2 \\text{ kJ/mol glucose}\n\\tag{2}\\] This calculated value aligns very closely with the -199 kJ/mol reported by Stegemann (1991).\n\n\n\n\n\nFrom Free Glucose:\nThe net production of ATP when starting from free glucose is a cornerstone of basic biochemistry.\n\nStegemann (S. 36): Details the process involving an initial investment of 2 ATP and a subsequent generation of 4 ATP, resulting in a net yield of: \\[\n4 \\text{ ATP (produced)} - 2 \\text{ ATP (consumed)} = \\mathbf{2 \\text{ ATP (net) per glucose}}\n\\] Using Stegemann’s value of 30.5 kJ/mol for ATP hydrolysis under physiological conditions (ΔG ≈ -30.5 kJ/mol, (Stegemann, 1991, S. 34, Eq. 7)), the energy conserved is 61 kJ per mol glucose. This represents an efficiency of approximately 30.7% ((61 kJ / 199 kJ) * 100%).\nNelson & Cox (p. 545, Fig. 14-2; p. 555): Clearly illustrate and state a net yield of 2 ATP per molecule of glucose. The overall balanced equation for anaerobic glycolysis to lactate is: \\[\n\\text{Glucose} + 2\\text{ADP} + 2\\text{P}_\\text{i} \\rightarrow 2\\text{ Lactate} + 2\\text{ATP} + 2\\text{H}_2\\text{O}\n\\]\nBrooks (2012): “1.0 ATP is produced per lactate anion accumulated when glucose is the precursor.” This implies 2 \\times 1.0 \\text{ ATP} = \\mathbf{2 \\text{ ATP per glucose}}.\nDi Prampero (1981, S. 151, Table 1): In this table, which summarizes ATP yield per unit of fuel or O₂ based on data from McGilvery (1975), “Glucose → Lactate” is listed as yielding 2 ~P/mol fuel. The symbol “~P” denotes a high-energy phosphate bond, equivalent to one molecule of ATP.\n\nThere is thus universal agreement across these sources for a net gain of 2 ATP molecules from the anaerobic glycolysis of one molecule of free glucose to two molecules of lactate.\nFrom Glycogen (Glucosyl Units):\nStarting glycolysis from stored glycogen offers a slight energetic advantage.\n\nStegemann (S. 36): “Wird Laktat aus Glykogen erzeugt, so wird bezogen auf 1mol Glukose – 1 mol ATP mehr, also 3 mol ATP, gewonnen.” (If lactate is produced from glycogen, 1 mol more ATP is gained compared to 1 mol of glucose, thus 3 mol ATP). This is because the first ATP-consuming step, the phosphorylation of glucose to glucose 6-phosphate by hexokinase, is bypassed. Glycogen phosphorylase uses inorganic phosphate (Pᵢ) for phosphorolytic cleavage of glucosyl units. The net yield is: \\[\n4 \\text{ ATP (produced)} - 1 \\text{ ATP (consumed for fructose 6-P phosphorylation)} = \\mathbf{3 \\text{ ATP (net) per glucosyl unit}}\n\\]\nNelson & Cox (p. 558, Worked Example 14-1): Clearly explain that starting from glycogen saves 1 ATP in the preparatory phase, leading to a net yield of 3 ATP per glucose monomer from glycogen.\nBrooks (2012): “1.5 ATP is produced per lactate anion accumulated when glycogen is the precursor.” Since one glucosyl unit from glycogen forms two lactate anions, the yield per glucosyl unit is 2 \\times 1.5 \\text{ ATP} = \\mathbf{3 \\text{ ATP}}.\nDi Prampero (1981, S. 151, Table 1): Consistent with the other sources, lists “Glycogen → Lactate” as yielding 3 ~P/mol glucosyl unit. This translates to 1.5 ATP per mole of lactate formed from glycogen, a ratio that Di Prampero (1981) explicitly uses in subsequent calculations for the energy equivalent of lactate (Di Prampero, 1981, S. 182).\n\nThe consensus is firm: 3 net ATP molecules are gained when one glucosyl unit from glycogen is anaerobically converted to two molecules of lactate.\n\n\n\nThe actual energy (ΔG) available from ATP hydrolysis under cellular conditions is crucial for accurate bioenergetic modeling.\n\nStandard Free Energy Change (ΔG’°): Typically cited as approximately -30.5 kJ/mol for ATP → ADP + Pᵢ (Stegemann, 1991, S. 34, Eq. 7; Nelson & Cox, 2012, S. 519, Table 13-6).\nActual Free Energy Change (ΔG) in vivo: This value is significantly more negative and variable than ΔG’° due to the actual intracellular concentrations of ATP, ADP, Pᵢ, and Mg²⁺, as well as pH. Nelson & Cox (2012, S. 519) suggest a typical range of -50 to -65 kJ/mol. Di Prampero (1981, S. 156, Fig. 2a) provides a graphical representation showing ΔGATP as a function of PCr and ATP concentrations. At rest (e.g., PCr ≈ 18-22 mmol/kg muscle, ATP ≈ 5 mmol/kg), ΔGATP is estimated to be around -50 to -52 kJ/mol. During intense exercise, as PCr is depleted (e.g., to ~3.5-4 mmol/kg), ΔGATP can decrease to approximately -44 kJ/mol. This dynamic behavior is important but often simplified in models by using an average physiological value.\nYour Model’s Global Constant: DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ = 50.0; This value is a well-chosen representative for the actual physiological free energy change (ΔG) of ATP hydrolysis, consistent with the range depicted by Di Prampero (1981) for contracting muscle.\nÅstrand et al. (2003, S. 33): Provides an important conceptual clarification: “Die Energie liegt nicht in der Bindung selbst, sondern in der freien Energie, die verfügbar wird, wenn über Abspaltung von anorganischem Phosphat das ATP in die energieärmere Verbindung Adenosindiphosphat (ADP) übergeht.”\n\n\n\n\nUnderstanding the total energy associated with lactate formation requires comparing the ATP-conserved energy with the overall free energy change of the pathway.\n\nÅstrand’s (2003) Value (citing Di Prampero (1981)): States that approximately 110 kJ/mol lactate is released when glycogen is converted to lactate (derived from ~220 kJ per glucosyl unit, which forms 2 lactate). This likely represents the total exergonic drive (ΔG’°) of the pathway per mole of lactate.\nDi Prampero (1981)’s Calculation of α (Energy Equivalent of Lactate Formation in vivo, S. 182): Di Prampero provides a detailed derivation for α, the energy equivalent of lactate formation, by linking it to aerobic metabolism. He assumes that the ATP yield per mole of lactate from glycogen is 1.5, and per mole of O₂ during glycogen oxidation is 6.2 (both from McGilvery (1975) data in his Table 1). The enthalpy change for O₂ consumption during glycogen oxidation (ΔHO₂) is taken as 469 kJ/mol O₂. The formula used is: \\[\n\\alpha = \\Delta H_{\\text{O}_2, \\text{glycogen}} \\times \\frac{\\text{mol ATP per mol La (from glycogen)}}{\\text{mol ATP per mol O}_2 \\text{ (glycogen oxidation)}}\n\\] Substituting the values: \\[\n\\alpha = 469 \\text{ kJ/mol O}_2 \\times \\frac{1.5 \\text{ mol ATP/mol La}}{6.2 \\text{ mol ATP/mol O}_2} \\approx \\mathbf{113 \\text{ kJ/mol La}}\n\\tag{3}\\] Di Prampero (1981, S. 182) notes this is an enthalpy-based equivalent and that other estimations place the value around 100 kJ/mol La. He further clarifies the utility: “Regardless of the correct interpretation of α its value allows one to calculate that, in vivo, the resynthesis of ATP requires approximately the same amount of energy from glycolytic sources (100/1.5 = 67 kJ/mol) as from oxidative sources (469/6.2 = 76 kJ/mol).” This calculation of “energy per mole of ATP equivalent” via different pathways is insightful for comparing efficiencies.\nYour Model (75 kJ/mol Lactate as ATP-equivalent): Based on 1.5 mol ATP/mol Lactate * 50.0 kJ/mol ATP = 75 kJ/mol Lactate. This 75 kJ/mol represents the portion of the total energy change that is directly conserved in the high-energy phosphate bonds of ATP and is readily available for cellular work. The difference between the ~113 kJ/mol (di Prampero’s α) or ~110 kJ/mol (Åstrand) and your model’s 75 kJ/mol is primarily due to the thermodynamic inefficiency of glycolysis; a substantial portion of the total free energy released is dissipated as heat. For your model’s purpose of quantifying the ATP-mediated energy available to cover an O₂ deficit, the 75 kJ/mol is the appropriate, internally consistent value.\n\n\n\n\n\nComplete oxidation of glucose to CO₂ and H₂O via glycolysis, the pyruvate dehydrogenase complex, the citric acid cycle, and oxidative phosphorylation yields a much larger amount of ATP.\n\nOverall Reaction and Free Energy Change:\n\nStegemann (1991, S. 43, Gleichung 21): \\[\n\\text{C}_6\\text{H}_{12}\\text{O}_6 + 6\\text{O}_2 \\rightarrow 6\\text{CO}_2 + 6\\text{H}_2\\text{O} \\quad (\\Delta G = -2869 \\text{ kJ/mol glucose})\n\\]\nNelson & Cox (2012, S. 543): States the standard free-energy change is -2,840 kJ/mol glucose.\n\n\n\n\nThe P/O₂ ratio (moles of ATP synthesized per mole of atomic oxygen (O), or per ½ O₂ molecule, consumed) is a key determinant of the overall ATP yield.\n\nDi Prampero (1981; S. 151, Table 1, values from McGilvery, 1975): This table reflects older, generally higher, P/O ratio conventions:\n\nGlucose → CO₂ + H₂O: 6.0 mol ~P (ATP) / mol O₂. Since 6 moles of O₂ are consumed per mole of glucose, this implies 6 mol O₂ * 6.0 mol ATP/mol O₂ = 36 ATP per glucose.\nGlycogen → CO₂ + H₂O: 6.2 mol ~P (ATP) / mol O₂. This implies 6 mol O₂ * 6.2 mol ATP/mol O₂ = 37.2 ≈ 37 ATP per glucosyl unit.\nFFA → CO₂ + H₂O: 5.6 mol ~P (ATP) / mol O₂. Di Prampero (1981, S. 169, Eq. 15) also provides an empirical formula for the P/O₂ ratio (denoted ‘c’) as a function of the respiratory quotient (RQ): \\[\nc = \\text{P/O}_2 = 4.13 + 2.07 \\times \\text{RQ}\n\\tag{4}\\] For pure carbohydrate oxidation (RQ = 1.0), this yields c = 4.13 + 2.07 * 1.0 = 6.20 mol ATP/mol O₂, matching his Table 1 value for glycogen. For pure fat oxidation (RQ ≈ 0.71), it yields c ≈ 5.60 mol ATP/mol O₂, also matching his Table 1. This equation allows for a dynamic P/O₂ based on substrate mixture.\n\nModern Estimates (e.g., Nelson & Cox (2012, S. 759, Table 19-5)): Current biochemical understanding leads to lower P/O ratios, approximately 2.5 ATP per NADH and 1.5 ATP per FADH₂ oxidized in the electron transport chain. This results in a total yield of 30 or 32 ATP molecules per glucose molecule, depending on the efficiency of the shuttle system used to transport cytosolic NADH electrons into the mitochondria.\nYour Model’s P/O₂ Ratios (as defined in your app’s Quarto documentation):\n\nP/O2,KH = 5.0 [mol ATP / mol O₂] (for carbohydrates). This corresponds to 30 ATP / 6 O₂ per glucose.\nP/O2,Fett = 4.61 [mol ATP / mol O₂] (for fats, e.g., from 106 ATP / 23 O₂ for palmitate according to Nelson & Cox (2012, S. 675)). It is crucial to use these modern, lower P/O₂ ratios consistently throughout your model for calculations involving aerobic ATP resynthesis (e.g., PCr recovery, aerobic energy contribution in the summary) to maintain alignment with current biochemical consensus as represented by texts like Nelson & Cox (2012).\n\n\n\n\n\n\nPCr acts as an immediate buffer for ATP during high-intensity muscle contraction.\n\nLohmann Reaction (Stegemann (1991, S. 34); Nelson & Cox (2012, S. 526)): \\[\n\\text{ADP} + \\text{PCr} \\stackrel{\\text{Creatin-Kinase}}{\\rightleftharpoons} \\text{ATP} + \\text{Cr}\n\\] The standard free energy change (ΔG’°) for PCr hydrolysis (PCr + H₂O → Creatine + Pᵢ) is approximately -43 kJ/mol (Nelson & Cox, 2012, S. 526). This exergonic reaction drives the endergonic phosphorylation of ADP. Di Prampero (1981, S. 150) highlights the Lohmann reaction as the primary mechanism for ATP rephosphorylation when oxidative phosphorylation and anaerobic glycolysis are insufficient or too slow, such as at the very onset of exercise or during maximal short bursts. His Fig. 2a (Di Prampero, 1981, S. 156) shows the ΔGATP maintained around -50 kJ/mol by this buffering action until PCr stores are significantly depleted.\nYour Model’s Energetic Contribution of PCr: The calculation kJ_per_mmol_PCr = DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ / 1000.0; combined with DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ = 50.0 kJ/mol ATP correctly implies that each mole of PCr consumed effectively provides 50 kJ of usable energy by regenerating one mole of ATP, which itself yields 50 kJ upon hydrolysis. This is a consistent and physiologically relevant approach for modeling the alactic energy contribution.\n\nThis comprehensive comparison integrates data and concepts from Di Prampero (1981) with other key literature, providing a robust framework for the energetic parameters used in your metabolic simulation. The consistent application of your defined DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ and the modern P/O₂ ratios is paramount for internal model consistency."
  },
  {
    "objectID": "Mader_App_Theory.html#anaerobic-glycolysis-glucoseglycogen-to-lactate",
    "href": "Mader_App_Theory.html#anaerobic-glycolysis-glucoseglycogen-to-lactate",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "",
    "text": "Anaerobic glycolysis is the metabolic pathway that converts glucose (or glucosyl units from glycogen) into pyruvate, and subsequently into lactate under anaerobic conditions, with a net production of ATP. This pathway is crucial for rapid energy supply, especially when oxygen availability is limited, such as during high-intensity exercise. Di Prampero (1981, S. 171, Sect. 6.1) dedicates an entire section to the “Lactic Mechanism,” underscoring its importance. He notes that “When the intensity of the exercise exceeds VO₂max, a substantial accumulation of lactic acid (La) in blood takes place. Under these conditions the exercise comes to an end when the blood La has reached a concentration of the order of 16–17 mM in non-athletic subjects.” This highlights the capacity limitation of this pathway.\n\n\nThe overall conversion of glucose to lactate is an exergonic process, releasing a significant amount of free energy, which can then be partially conserved in ATP.\n\nAccording to Stegemann (1991, S. 36, Gleichung 10), the direct conversion from glucose to lactate has a standard free energy change of: \\[\n\\text{C}_6\\text{H}_{12}\\text{O}_6 \\text{ (Glucose)} \\rightarrow 2 \\text{ C}_3\\text{H}_6\\text{O}_3 \\text{ (Lactate)} \\quad (\\Delta G'^\\circ = -199 \\text{ kJ/mol glucose})\n\\tag{1}\\] This value indicates the total exergonic drive of the anaerobic breakdown of glucose to lactate.\nNelson & Cox (2012) [S. 546, Eq. 14-1 & 14-3; S. 563] detail this process in two main stages for calculation:\n\nGlycolysis to pyruvate (the exergonic part, excluding ATP formation for this specific ΔG component): \\[\n\\text{Glucose} + 2\\text{NAD}^+ \\rightarrow 2\\text{ Pyruvate} + 2\\text{NADH} + 2\\text{H}^+ \\quad (\\Delta G_1'^\\circ = -146 \\text{ kJ/mol})\n\\] (This is derived from Nelson & Cox (2012, S. 546, Eq. 14-2)).\nReduction of pyruvate to lactate (occurring twice per initial glucose molecule): \\[\n\\text{Pyruvate} + \\text{NADH} + \\text{H}^+ \\leftrightarrow \\text{L-Lactate} + \\text{NAD}^+ \\quad (\\Delta G_2'^\\circ = -25.1 \\text{ kJ/mol})\n\\] (From Nelson & Cox (2012, S. 563)). This reaction is crucial for regenerating NAD⁺ from NADH, allowing glycolysis to continue under anaerobic conditions, a point also emphasized by Di Prampero (1981, S. 172) when he states, “The excess pyruvate is reduced to La and the resulting oxidation of NADH to NAD allows glycolysis to continue.” The overall standard free-energy change for glucose to lactate according to Nelson & Cox (2012) is the sum: \\[\n\\Delta G'_{\\text{glucose} \\rightarrow \\text{lactate}} = \\Delta G_1'^\\circ + 2 \\times \\Delta G_2'^\\circ = -146 \\text{ kJ/mol} + 2 \\times (-25.1 \\text{ kJ/mol}) = -196.2 \\text{ kJ/mol glucose}\n\\tag{2}\\] This calculated value aligns very closely with the -199 kJ/mol reported by Stegemann (1991).\n\n\n\n\n\nFrom Free Glucose:\nThe net production of ATP when starting from free glucose is a cornerstone of basic biochemistry.\n\nStegemann (S. 36): Details the process involving an initial investment of 2 ATP and a subsequent generation of 4 ATP, resulting in a net yield of: \\[\n4 \\text{ ATP (produced)} - 2 \\text{ ATP (consumed)} = \\mathbf{2 \\text{ ATP (net) per glucose}}\n\\] Using Stegemann’s value of 30.5 kJ/mol for ATP hydrolysis under physiological conditions (ΔG ≈ -30.5 kJ/mol, (Stegemann, 1991, S. 34, Eq. 7)), the energy conserved is 61 kJ per mol glucose. This represents an efficiency of approximately 30.7% ((61 kJ / 199 kJ) * 100%).\nNelson & Cox (p. 545, Fig. 14-2; p. 555): Clearly illustrate and state a net yield of 2 ATP per molecule of glucose. The overall balanced equation for anaerobic glycolysis to lactate is: \\[\n\\text{Glucose} + 2\\text{ADP} + 2\\text{P}_\\text{i} \\rightarrow 2\\text{ Lactate} + 2\\text{ATP} + 2\\text{H}_2\\text{O}\n\\]\nBrooks (2012): “1.0 ATP is produced per lactate anion accumulated when glucose is the precursor.” This implies 2 \\times 1.0 \\text{ ATP} = \\mathbf{2 \\text{ ATP per glucose}}.\nDi Prampero (1981, S. 151, Table 1): In this table, which summarizes ATP yield per unit of fuel or O₂ based on data from McGilvery (1975), “Glucose → Lactate” is listed as yielding 2 ~P/mol fuel. The symbol “~P” denotes a high-energy phosphate bond, equivalent to one molecule of ATP.\n\nThere is thus universal agreement across these sources for a net gain of 2 ATP molecules from the anaerobic glycolysis of one molecule of free glucose to two molecules of lactate.\nFrom Glycogen (Glucosyl Units):\nStarting glycolysis from stored glycogen offers a slight energetic advantage.\n\nStegemann (S. 36): “Wird Laktat aus Glykogen erzeugt, so wird bezogen auf 1mol Glukose – 1 mol ATP mehr, also 3 mol ATP, gewonnen.” (If lactate is produced from glycogen, 1 mol more ATP is gained compared to 1 mol of glucose, thus 3 mol ATP). This is because the first ATP-consuming step, the phosphorylation of glucose to glucose 6-phosphate by hexokinase, is bypassed. Glycogen phosphorylase uses inorganic phosphate (Pᵢ) for phosphorolytic cleavage of glucosyl units. The net yield is: \\[\n4 \\text{ ATP (produced)} - 1 \\text{ ATP (consumed for fructose 6-P phosphorylation)} = \\mathbf{3 \\text{ ATP (net) per glucosyl unit}}\n\\]\nNelson & Cox (p. 558, Worked Example 14-1): Clearly explain that starting from glycogen saves 1 ATP in the preparatory phase, leading to a net yield of 3 ATP per glucose monomer from glycogen.\nBrooks (2012): “1.5 ATP is produced per lactate anion accumulated when glycogen is the precursor.” Since one glucosyl unit from glycogen forms two lactate anions, the yield per glucosyl unit is 2 \\times 1.5 \\text{ ATP} = \\mathbf{3 \\text{ ATP}}.\nDi Prampero (1981, S. 151, Table 1): Consistent with the other sources, lists “Glycogen → Lactate” as yielding 3 ~P/mol glucosyl unit. This translates to 1.5 ATP per mole of lactate formed from glycogen, a ratio that Di Prampero (1981) explicitly uses in subsequent calculations for the energy equivalent of lactate (Di Prampero, 1981, S. 182).\n\nThe consensus is firm: 3 net ATP molecules are gained when one glucosyl unit from glycogen is anaerobically converted to two molecules of lactate.\n\n\n\nThe actual energy (ΔG) available from ATP hydrolysis under cellular conditions is crucial for accurate bioenergetic modeling.\n\nStandard Free Energy Change (ΔG’°): Typically cited as approximately -30.5 kJ/mol for ATP → ADP + Pᵢ (Stegemann, 1991, S. 34, Eq. 7; Nelson & Cox, 2012, S. 519, Table 13-6).\nActual Free Energy Change (ΔG) in vivo: This value is significantly more negative and variable than ΔG’° due to the actual intracellular concentrations of ATP, ADP, Pᵢ, and Mg²⁺, as well as pH. Nelson & Cox (2012, S. 519) suggest a typical range of -50 to -65 kJ/mol. Di Prampero (1981, S. 156, Fig. 2a) provides a graphical representation showing ΔGATP as a function of PCr and ATP concentrations. At rest (e.g., PCr ≈ 18-22 mmol/kg muscle, ATP ≈ 5 mmol/kg), ΔGATP is estimated to be around -50 to -52 kJ/mol. During intense exercise, as PCr is depleted (e.g., to ~3.5-4 mmol/kg), ΔGATP can decrease to approximately -44 kJ/mol. This dynamic behavior is important but often simplified in models by using an average physiological value.\nYour Model’s Global Constant: DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ = 50.0; This value is a well-chosen representative for the actual physiological free energy change (ΔG) of ATP hydrolysis, consistent with the range depicted by Di Prampero (1981) for contracting muscle.\nÅstrand et al. (2003, S. 33): Provides an important conceptual clarification: “Die Energie liegt nicht in der Bindung selbst, sondern in der freien Energie, die verfügbar wird, wenn über Abspaltung von anorganischem Phosphat das ATP in die energieärmere Verbindung Adenosindiphosphat (ADP) übergeht.”\n\n\n\n\nUnderstanding the total energy associated with lactate formation requires comparing the ATP-conserved energy with the overall free energy change of the pathway.\n\nÅstrand’s (2003) Value (citing Di Prampero (1981)): States that approximately 110 kJ/mol lactate is released when glycogen is converted to lactate (derived from ~220 kJ per glucosyl unit, which forms 2 lactate). This likely represents the total exergonic drive (ΔG’°) of the pathway per mole of lactate.\nDi Prampero (1981)’s Calculation of α (Energy Equivalent of Lactate Formation in vivo, S. 182): Di Prampero provides a detailed derivation for α, the energy equivalent of lactate formation, by linking it to aerobic metabolism. He assumes that the ATP yield per mole of lactate from glycogen is 1.5, and per mole of O₂ during glycogen oxidation is 6.2 (both from McGilvery (1975) data in his Table 1). The enthalpy change for O₂ consumption during glycogen oxidation (ΔHO₂) is taken as 469 kJ/mol O₂. The formula used is: \\[\n\\alpha = \\Delta H_{\\text{O}_2, \\text{glycogen}} \\times \\frac{\\text{mol ATP per mol La (from glycogen)}}{\\text{mol ATP per mol O}_2 \\text{ (glycogen oxidation)}}\n\\] Substituting the values: \\[\n\\alpha = 469 \\text{ kJ/mol O}_2 \\times \\frac{1.5 \\text{ mol ATP/mol La}}{6.2 \\text{ mol ATP/mol O}_2} \\approx \\mathbf{113 \\text{ kJ/mol La}}\n\\tag{3}\\] Di Prampero (1981, S. 182) notes this is an enthalpy-based equivalent and that other estimations place the value around 100 kJ/mol La. He further clarifies the utility: “Regardless of the correct interpretation of α its value allows one to calculate that, in vivo, the resynthesis of ATP requires approximately the same amount of energy from glycolytic sources (100/1.5 = 67 kJ/mol) as from oxidative sources (469/6.2 = 76 kJ/mol).” This calculation of “energy per mole of ATP equivalent” via different pathways is insightful for comparing efficiencies.\nYour Model (75 kJ/mol Lactate as ATP-equivalent): Based on 1.5 mol ATP/mol Lactate * 50.0 kJ/mol ATP = 75 kJ/mol Lactate. This 75 kJ/mol represents the portion of the total energy change that is directly conserved in the high-energy phosphate bonds of ATP and is readily available for cellular work. The difference between the ~113 kJ/mol (di Prampero’s α) or ~110 kJ/mol (Åstrand) and your model’s 75 kJ/mol is primarily due to the thermodynamic inefficiency of glycolysis; a substantial portion of the total free energy released is dissipated as heat. For your model’s purpose of quantifying the ATP-mediated energy available to cover an O₂ deficit, the 75 kJ/mol is the appropriate, internally consistent value."
  },
  {
    "objectID": "Mader_App_Theory.html#aerobic-oxidation-of-glucose",
    "href": "Mader_App_Theory.html#aerobic-oxidation-of-glucose",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "",
    "text": "Complete oxidation of glucose to CO₂ and H₂O via glycolysis, the pyruvate dehydrogenase complex, the citric acid cycle, and oxidative phosphorylation yields a much larger amount of ATP.\n\nOverall Reaction and Free Energy Change:\n\nStegemann (1991, S. 43, Gleichung 21): \\[\n\\text{C}_6\\text{H}_{12}\\text{O}_6 + 6\\text{O}_2 \\rightarrow 6\\text{CO}_2 + 6\\text{H}_2\\text{O} \\quad (\\Delta G = -2869 \\text{ kJ/mol glucose})\n\\]\nNelson & Cox (2012, S. 543): States the standard free-energy change is -2,840 kJ/mol glucose.\n\n\n\n\nThe P/O₂ ratio (moles of ATP synthesized per mole of atomic oxygen (O), or per ½ O₂ molecule, consumed) is a key determinant of the overall ATP yield.\n\nDi Prampero (1981; S. 151, Table 1, values from McGilvery, 1975): This table reflects older, generally higher, P/O ratio conventions:\n\nGlucose → CO₂ + H₂O: 6.0 mol ~P (ATP) / mol O₂. Since 6 moles of O₂ are consumed per mole of glucose, this implies 6 mol O₂ * 6.0 mol ATP/mol O₂ = 36 ATP per glucose.\nGlycogen → CO₂ + H₂O: 6.2 mol ~P (ATP) / mol O₂. This implies 6 mol O₂ * 6.2 mol ATP/mol O₂ = 37.2 ≈ 37 ATP per glucosyl unit.\nFFA → CO₂ + H₂O: 5.6 mol ~P (ATP) / mol O₂. Di Prampero (1981, S. 169, Eq. 15) also provides an empirical formula for the P/O₂ ratio (denoted ‘c’) as a function of the respiratory quotient (RQ): \\[\nc = \\text{P/O}_2 = 4.13 + 2.07 \\times \\text{RQ}\n\\tag{4}\\] For pure carbohydrate oxidation (RQ = 1.0), this yields c = 4.13 + 2.07 * 1.0 = 6.20 mol ATP/mol O₂, matching his Table 1 value for glycogen. For pure fat oxidation (RQ ≈ 0.71), it yields c ≈ 5.60 mol ATP/mol O₂, also matching his Table 1. This equation allows for a dynamic P/O₂ based on substrate mixture.\n\nModern Estimates (e.g., Nelson & Cox (2012, S. 759, Table 19-5)): Current biochemical understanding leads to lower P/O ratios, approximately 2.5 ATP per NADH and 1.5 ATP per FADH₂ oxidized in the electron transport chain. This results in a total yield of 30 or 32 ATP molecules per glucose molecule, depending on the efficiency of the shuttle system used to transport cytosolic NADH electrons into the mitochondria.\nYour Model’s P/O₂ Ratios (as defined in your app’s Quarto documentation):\n\nP/O2,KH = 5.0 [mol ATP / mol O₂] (for carbohydrates). This corresponds to 30 ATP / 6 O₂ per glucose.\nP/O2,Fett = 4.61 [mol ATP / mol O₂] (for fats, e.g., from 106 ATP / 23 O₂ for palmitate according to Nelson & Cox (2012, S. 675)). It is crucial to use these modern, lower P/O₂ ratios consistently throughout your model for calculations involving aerobic ATP resynthesis (e.g., PCr recovery, aerobic energy contribution in the summary) to maintain alignment with current biochemical consensus as represented by texts like Nelson & Cox (2012)."
  },
  {
    "objectID": "Mader_App_Theory.html#energy-from-kreatinphosphat-pcr",
    "href": "Mader_App_Theory.html#energy-from-kreatinphosphat-pcr",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "",
    "text": "PCr acts as an immediate buffer for ATP during high-intensity muscle contraction.\n\nLohmann Reaction (Stegemann (1991, S. 34); Nelson & Cox (2012, S. 526)): \\[\n\\text{ADP} + \\text{PCr} \\stackrel{\\text{Creatin-Kinase}}{\\rightleftharpoons} \\text{ATP} + \\text{Cr}\n\\] The standard free energy change (ΔG’°) for PCr hydrolysis (PCr + H₂O → Creatine + Pᵢ) is approximately -43 kJ/mol (Nelson & Cox, 2012, S. 526). This exergonic reaction drives the endergonic phosphorylation of ADP. Di Prampero (1981, S. 150) highlights the Lohmann reaction as the primary mechanism for ATP rephosphorylation when oxidative phosphorylation and anaerobic glycolysis are insufficient or too slow, such as at the very onset of exercise or during maximal short bursts. His Fig. 2a (Di Prampero, 1981, S. 156) shows the ΔGATP maintained around -50 kJ/mol by this buffering action until PCr stores are significantly depleted.\nYour Model’s Energetic Contribution of PCr: The calculation kJ_per_mmol_PCr = DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ / 1000.0; combined with DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ = 50.0 kJ/mol ATP correctly implies that each mole of PCr consumed effectively provides 50 kJ of usable energy by regenerating one mole of ATP, which itself yields 50 kJ upon hydrolysis. This is a consistent and physiologically relevant approach for modeling the alactic energy contribution.\n\nThis comprehensive comparison integrates data and concepts from Di Prampero (1981) with other key literature, providing a robust framework for the energetic parameters used in your metabolic simulation. The consistent application of your defined DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ and the modern P/O₂ ratios is paramount for internal model consistency."
  },
  {
    "objectID": "Mader_App_Theory.html#summary-of-energy-equivalents-for-your-model",
    "href": "Mader_App_Theory.html#summary-of-energy-equivalents-for-your-model",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "",
    "text": "Based on your previous choices and aiming for internal consistency with DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ = 50.0 kJ/mol:\n\nATP Hydrolysis: ΔG = -50.0 kJ/mol (as per your global constant).\nPCr System: 1 mol PCr → 1 mol ATP → 50.0 kJ of usable energy.\nAnaerobic Glycolysis (from Glycogen) to Lactate:\n\n1 mol Glucosyl unit → 2 mol Lactate + 3 mol ATP.\nEnergy yield = 3 ATP * 50.0 kJ/ATP = 150 kJ per glucosyl unit.\nEnergy yield per mol Lactate produced = 150 kJ / 2 mol Lactate = **75 kJ/mol Lactate**.\n\nAerobic Oxidation (Glucose):\n\nUsing your P/O2,KH of 5.0 mol ATP / mol O₂:\n1 mol Glucose consumes 6 mol O₂.\nTotal ATP = 6 mol O₂ * 5.0 mol ATP/mol O₂ = **30 mol ATP** per mol Glucose.\nTotal usable energy = 30 mol ATP * 50.0 kJ/mol ATP = **1500 kJ** per mol Glucose.\n(Compare this to Stegemann’s -2869 kJ total free energy; 1500 / 2869 * 100% ≈ 52% efficiency of ATP conservation in the aerobic pathway, which is a reasonable range).\n\n\nThis detailed comparison should help solidify the energetic assumptions within your model and align them with established literature, while maintaining internal consistency based on your defined DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ."
  },
  {
    "objectID": "Mader_App_Theory.html#modeling-the-free-energy-change-of-atp-hydrolysis-delta-g_atpcyt",
    "href": "Mader_App_Theory.html#modeling-the-free-energy-change-of-atp-hydrolysis-delta-g_atpcyt",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "2.1 Modeling the Free Energy Change of ATP Hydrolysis (\\(\\Delta G_{ATP,cyt}\\))",
    "text": "2.1 Modeling the Free Energy Change of ATP Hydrolysis (\\(\\Delta G_{ATP,cyt}\\))\nThe energy currency of the cell, Adenosine Triphosphate (ATP), does not release a fixed amount of energy upon hydrolysis. Instead, the actual free energy change (\\(\\Delta G_{ATP,cyt}\\)) depends critically on the intracellular conditions, primarily the concentrations of ATP, Adenosine Diphosphate (ADP), inorganic phosphate (Pi), and hydrogen ions (pH). This dynamic yield is crucial for understanding muscle bioenergetics and fatigue.\n\n2.1.1 Theoretical Basis: Thermodynamics of ATP Hydrolysis\nThe hydrolysis of ATP to ADP and Pi can be represented as:\n\\[\n\\text{ATP}^{4-} + \\text{H}_2\\text{O} \\rightleftharpoons \\text{ADP}^{3-} + \\text{HPO}_4^{2-} + \\text{H}^+\n\\tag{5}\\]\nThe standard free energy change (\\(\\Delta G'^\\circ\\)) for this reaction under biochemical standard conditions (1M concentrations, pH 7, 25°C, 1 atm, 10 mM Mg²⁺) is approximately -30.5 kJ/mol (Nelson & Cox, 2012, S. 536; Heck et al., 2022, S. 31).\nHowever, intracellular conditions are far from standard. The actual free energy change (\\(\\Delta G_{ATP,cyt}\\)) is given by the Gibbs free energy equation (Nelson & Cox, 2012, S. 537):\n\\[\n\\Delta G_{ATP,cyt} = \\Delta G'^\\circ + RT \\ln \\left( \\frac{[\\text{ADP}^{3-}] \\cdot [\\text{HPO}_4^{2-}]}{[\\text{ATP}^{4-}]} \\right)\n\\tag{6}\\]\nWhere: - \\(R\\) is the gas constant (8.314 J·mol⁻¹·K⁻¹ or 0.008314 kJ·mol⁻¹·K⁻¹) - \\(T\\) is the absolute temperature in Kelvin (e.g., 310.15 K for 37°C) - The terms in brackets represent the actual molar concentrations of the reactants and products.\nUnder typical resting physiological conditions in muscle cells, [ATP] is high, while [ADP] and [Pi] are very low. This makes the natural logarithm term significantly negative, resulting in a much more negative \\(\\Delta G_{ATP,cyt}\\) than \\(\\Delta G'^\\circ\\). Values often range from -50 to -65 kJ/mol (Nelson & Cox, 2012, S. 536; Heck et al., 2022, S. 31; Mader, 2003). The magnitude, \\(-\\Delta G_{ATP,cyt}\\), represents the energy that can be released to do work.\n\n\n2.1.2 Linking \\(\\Delta G_{ATP,cyt}\\) to PCr and pH: The Mader/Heck Approach\nDirectly measuring or calculating instantaneous [ADP] and [Pi] in a dynamic simulation is complex. Mader and Heck, building on work by Veech and others, utilize the near-equilibrium of the creatine kinase (CK) reaction to relate \\(\\Delta G_{ATP,cyt}\\) to more readily modeled parameters like phosphocreatine ([PCr]) and intracellular pH (pHm).\nThe CK reaction: \\[\n\\text{PCr}^{2-} + \\text{ADP}^{3-} + \\text{H}^+ \\rightleftharpoons \\text{ATP}^{4-} + \\text{Creatine}\n\\tag{7}\\]\nThe equilibrium constant for this, \\(K'_{CK}\\), can be expressed, and rearranged to show the tight coupling between the ATP/ADP ratio and the PCr/Pi ratio (as free Creatine changes reciprocally with PCr, and Pi changes reciprocally with PCr if S[C] = [PCr]+[Pi] is assumed somewhat constant, or if Pi is related to PCr via total Creatine pool).\nMader (2003) (Fig. 1, and similar in Heck et al. (2022), Abb. 4.2 & 4.4) graphically shows the relationship between \\(-\\Delta G_{ATP,cyt}\\) and the “Sum: ADP + AMP + Pi” (which is inversely related to [PCr]) at different pH levels. These figures serve as the empirical basis for our model’s ATP yield calculation.\nKey observations from these figures: 1. PCr Depletion Effect: As PCr decreases (and thus the sum ADP+AMP+Pi increases), the magnitude of released energy (\\(-\\Delta G_{ATP,cyt}\\)) decreases. This means ATP provides less “oomph” when PCr stores are low. 2. pH Effect: At a lower (more acidic) pHm, the entire curve of \\(-\\Delta G_{ATP,cyt}\\) versus the ADP+AMP+Pi sum is shifted downwards. This means that for any given level of PCr (or ADP+AMP+Pi sum), less energy is released from ATP hydrolysis when the muscle is acidic.\n\n\n2.1.3 Implementation in the Simulation App\nGiven that the app already dynamically calculates pcrStore[i] and pHm[i] at each time step i, we can model the dynamic ATP yield (\\(-\\Delta G_{ATP,cyt}\\)) using a two-stage interpolation approach based on the Mader/Heck figures:\n\nDefine Anchor Points for ATP Yield: We establish the maximum (at high PCr/rest) and minimum (at low PCr/fatigue) ATP yields observed at two reference pH values, derived from the figures:\n\nAt optimal pH (e.g., pH 7.0, PH_REF_HIGH):\n\nATP_YIELD_MAX_pH70 = 65.0 kJ/mol\nATP_YIELD_MIN_pH70 = 50.0 kJ/mol\n\nAt acidic pH (e.g., pH 6.2, PH_REF_LOW):\n\nATP_YIELD_MAX_pH62 = 57.0 kJ/mol\nATP_YIELD_MIN_pH62 = 48.0 kJ/mol\n\n\nStep-wise Calculation of Dynamic ATP Yield: For each time step i in the simulation:\n\na. pH-dependent Interpolation of Max/Min Yields: The current muscle pH (pHm[i]) is used to interpolate the effective maximum yield (current_ATP_YIELD_MAX_effective_loop) and effective minimum yield (current_ATP_YIELD_MIN_effective_loop) for that specific pH. This is done by linear interpolation between the anchor points defined above. For example, if pHm[i] is 6.6, the effective max yield will be halfway between 65.0 and 57.0 kJ/mol.\n// Simplified conceptual logic for pH interpolation\nlet pH_fraction = (current_pHm[i] - PH_REF_LOW) / (PH_REF_HIGH - PH_REF_LOW);\npH_fraction = Math.max(0, Math.min(1, pH_fraction)); // Clamp between 0 and 1\n\ncurrent_ATP_YIELD_MAX_effective_loop = ATP_YIELD_MIN_pH62 + (ATP_YIELD_MAX_pH70 - ATP_YIELD_MAX_pH62) * pH_fraction; \n// Correction: MAX should use MAX values for interpolation\ncurrent_ATP_YIELD_MAX_effective_loop = ATP_YIELD_MAX_pH62 + (ATP_YIELD_MAX_pH70 - ATP_YIELD_MAX_pH62) * pH_fraction;\ncurrent_ATP_YIELD_MIN_effective_loop = ATP_YIELD_MIN_pH62 + (ATP_YIELD_MIN_pH70 - ATP_YIELD_MIN_pH62) * pH_fraction;\nb. PCr-dependent Interpolation of Actual Yield: The current PCr concentration (pcrStore[i]) is used to determine the actual ATP yield for that time step. This is done by linear interpolation between the current_ATP_YIELD_MIN_effective_loop (corresponding to zero PCr) and current_ATP_YIELD_MAX_effective_loop (corresponding to initial/full PCr). The pcr_fraction_loop is calculated as pcrStore[i] / appState.pcr_init. javascript     // Simplified conceptual logic for PCr interpolation     current_dynamic_yield_kJ_mol_loop = current_ATP_YIELD_MIN_effective_loop +                                         (current_ATP_YIELD_MAX_effective_loop - current_ATP_YIELD_MIN_effective_loop) * pcr_fraction_loop; This current_dynamic_yield_kJ_mol_loop is then stored in the dynamic_ATP_yield_kJ_mol_values array for plotting and used in subsequent energy calculations (for alactic and lactic contributions).\n\n\n\n\n2.1.4 Rationale and Implications\n\nWhy this approach?\n\nIt directly reflects the empirically derived relationships shown by Mader (2003) and Heck et al. (2022), linking the energetic state (PCr, pH) to the energy releasable by ATP.\nIt avoids the high complexity and potential instability of solving the full system of equilibrium equations for [ATP], [ADP], and [Pi] at each time step, which would require precise knowledge of total adenine and creatine pools and their compartmentation, data not always readily available or constant.\nIt captures the two main modulatory effects:\n\nThe general decline in ATP energy yield as PCr is depleted.\nThe downward shift of this entire relationship under more acidic conditions.\n\n\nImpact on Simulation:\n\nEnergy Calculations: The energy (kJ) derived from anaerobic sources (PCr consumption, net lactate production) will now vary. During intense exercise leading to PCr depletion and acidosis, each mmol of ATP (or its equivalent from PCr/glycolysis) will yield less energy.\nFatigue Modeling: This provides a more nuanced mechanism contributing to fatigue. If cellular processes require a certain energy threshold from ATP hydrolysis, a lower dynamic yield means this threshold is harder to reach or requires a higher rate of ATP turnover, potentially accelerating the depletion of energy reserves.\nEfficiency Metrics: Metrics like total metabolic efficiency (\\(\\eta_{total}\\)) will be more realistically affected, as the denominator (total metabolic energy expenditure) will be based on this dynamic ATP yield.\n\n\nBy implementing this dynamic ATP yield, the simulation becomes a more accurate representation of muscle bioenergetics, particularly under conditions that challenge cellular homeostasis like high-intensity exercise."
  },
  {
    "objectID": "Metabolic_Profile.html",
    "href": "Metabolic_Profile.html",
    "title": "Integrated Metabolic & Power Profile: Ein detaillierter Leitfaden",
    "section": "",
    "text": "Fullscreen-Link: Metabolic Profile App\nThe Integrated Metabolic & Power Profile application is an advanced, web-based tool designed to unify two critical domains of performance physiology: the underlying metabolic framework of an athlete and their maximal power-duration capabilities. It achieves this by synergistically combining a sophisticated metabolic model, based on the principles established by Dr. Alois Mader (Mader, 2003), with a suite of established power-duration models. This integration allows for a comprehensive, multi-faceted analysis of an athlete’s physiological profile, providing insights that extend far beyond what either model could offer in isolation.\nThe application operates through an interactive interface, allowing users to:"
  },
  {
    "objectID": "Metabolic_Profile.html#core-concepts-the-union-of-two-model-worlds",
    "href": "Metabolic_Profile.html#core-concepts-the-union-of-two-model-worlds",
    "title": "Integrated Metabolic & Power Profile: Ein detaillierter Leitfaden",
    "section": "Core Concepts: The Union of Two Model Worlds",
    "text": "Core Concepts: The Union of Two Model Worlds\nThe application’s strength lies in its ability to bridge the gap between two complementary modeling approaches:\n\nThe Mader Metabolic Model: This “bottom-up” model simulates an athlete’s physiological state based on fundamental parameters. It calculates steady-state oxygen uptake, lactate production and clearance rates, and substrate utilization to predict key metabolic thresholds like the Maximal Lactate Steady State (MLSS) and the point of maximal fat oxidation (FATmax). This model answers the question: “Given this athlete’s specific engine characteristics, what are their metabolic responses at various intensities?”\nThe Power-Duration (PD) Model: This “top-down” approach characterizes an athlete’s performance capabilities based on their actual maximal efforts. By fitting a mathematical curve to these data points, it can interpolate or extrapolate the maximal sustainable power for any duration and derive parameters like Critical Power (CP) and W’ (anaerobic work capacity). This model answers the question: “Based on their performances, what are this athlete’s functional threshold and anaerobic capacity?”\n\nThe app not only presents these models side-by-side but also provides tools to link them—for instance, by estimating \\(\\dot{V}O_{2,max}\\) from the PD model or by fitting a metabolic parameter (like \\(vLa_{max}\\)) to align the Mader-predicted MLSS with the PD-derived Critical Power."
  },
  {
    "objectID": "Metabolic_Profile.html#the-sidebar-the-control-center",
    "href": "Metabolic_Profile.html#the-sidebar-the-control-center",
    "title": "Integrated Metabolic & Power Profile: Ein detaillierter Leitfaden",
    "section": "The Sidebar: The Control Center",
    "text": "The Sidebar: The Control Center\nThe sidebar is the primary interface for controlling all model parameters and settings, logically organized into tabs.\n\nTab 1: Settings & Profile\nThis is the main tab for defining the athlete’s profile and configuring the underlying models.\n\nAthlete & Profile Management\nThis section allows for the creation, selection, and management of athlete profiles.\n\nAthlete Profile Dropdown: Select from a list of pre-defined example profiles (e.g., “T. Pogačar”, “Heavy ♂”) or custom profiles that have been added or imported. Selecting a profile loads all its associated physiological parameters and power data.\nImport/Export/Add Profile:\n\nImport Profile: Loads a complete athlete profile from a local .json file. The app intelligently handles missing data by applying sensible defaults or calculating parameters where possible (e.g., calculating \\(\\dot{V}O_{2,Base}\\) from anthropometrics if it’s not in the file).\nExport Profile: Saves the currently displayed custom profile to a .json file. This includes all settings, physiological parameters, and power data points. Note: Pre-defined athlete profiles are protected and cannot be exported.\nAdd Profile: Prompts the user for a name and creates a new, blank profile with default ‘Well-Trained’ settings, ready for customization.\n\nEnable Comparison Mode: This toggle switches the entire application into a multi-profile comparison view (see Tab 3).\nExperience Level Presets: These buttons (Pro, Well-Trained, Beginner) provide a quick way to apply typical metabolic settings. They primarily adjust the Cost of Exercise (CE) and the duration used for \\(\\dot{V}O_{2,max}\\) estimation, reflecting known differences in efficiency and fatigue resistance between athlete populations.\n\nPro: CE = 11.5 ml·min⁻¹·W⁻¹, \\(\\dot{V}O_{2,max}\\) Calc. Duration = 6:00 min\nWell-Trained: CE = 11.7 ml·min⁻¹·W⁻¹, \\(\\dot{V}O_{2,max}\\) Calc. Duration = 4:00 min\nBeginner: CE = 11.9 ml·min⁻¹·W⁻¹, \\(\\dot{V}O_{2,max}\\) Calc. Duration = 3:30 min\n\n\n\n\nPower-Duration Modeling\nThis crucial section configures how the athlete’s performance data is modeled.\n\nPower-Duration Model (Dropdown): Selects the mathematical model used to fit the power data points.\n\n2-Parameter CP (Hyperbolic): The classic model where power is the sum of a sustainable component (CP) and an unsustainable component (W’) that depletes over time (Monod & Scherrer, 1965). \\[ P(t) = CP + \\frac{W'}{t} \\]\n\nPros: Well-established; the parameters are physiologically interpretable (CP as a metabolic threshold, W’ as anaerobic work capacity).\nCons: Unrealistic for very short durations (predicts infinite power as t→0) and very long durations (predicts no fatigue below CP).\nData: Best suited for efforts in the “severe” intensity domain, typically from 2 to 20 minutes. Requires 3-5 reliable data points for a robust fit (Leo et al., 2022).\n\nOmni-Domain (OmPD): A 4-parameter extension of the 2P-CP model, designed for a more realistic fit across a wider range of durations, including prolonged endurance (Puchowicz et al., 2020). It adds a maximal power parameter (\\(P_{max}\\)) to anchor the short end of the curve and a fatigue parameter (A) to model the performance decline during very long efforts. \\[ P(t) =\n\\begin{cases}\n\\frac{W'_{\\text{eff}}(t)}{t} + CP & \\text{if } t \\le 1800s \\\\\n\\frac{W'_{\\text{eff}}(t)}{t} + CP - A \\cdot \\ln(\\frac{t}{1800}) & \\text{if } t &gt; 1800s\n\\end{cases}\n\\] Where \\(W'_{\\text{eff}}(t) = W' \\cdot (1 - e^{-t/\\tau})\\) and \\(\\tau = W' / (P_{max} - CP)\\).\n\nPros: Aims to model the entire power curve, from sprints to ultra-endurance.\nCons: More complex; requires more data points (≥4, including efforts &gt;30 min) for a stable fit.\nVirtual Points: To improve stability, the app automatically adds a virtual 20s data point (based on the “Best 20s Avg. Power” input) if no real data exists in the 1-35s range when this model is selected.\n\nPower-Law: A simple, robust 2-parameter model where power is a power function of time. \\[ P(t) = S \\cdot t^{E-1} \\]\n\nPros: Often provides an excellent mathematical fit across all durations with as few as two data points.\nCons: The parameters (S and E) are less directly interpretable as physiological thresholds compared to CP and W’.\n\n\nAdvanced Model Options (Toggle): Hides or shows more detailed controls for fine-tuning the model fitting process.\n\nW’max Constraint (Slider): (Affects 2P-CP and OmPD models) Sets a physiological upper limit on the calculated W’ value (in kJ·kg⁻¹), preventing unrealistically high W’ estimates, especially with sparse or noisy data. The tooltip provides typical ranges for different athlete types (e.g., Climbers ~0.20 kJ/kg, Sprinters &gt;0.40 kJ/kg).\nFitting Time Range (Dual-handle Slider): Allows the user to manually select the specific duration range of data points to be included in the model fitting process. This is useful for excluding outliers or focusing the fit on a specific physiological domain (e.g., the severe domain for a more accurate CP estimate).\nFitting Method (Dropdown): Determines the mathematical error minimization strategy for non-linear models.\n\nStandard (SSE): Minimizes the sum of squared errors. Good for balanced data but can be dominated by high-power sprint values.\nWeighted (by Duration): Gives more weight to longer-duration efforts, improving the stability and accuracy of the CP estimate.\nRelative Error (%): Minimizes percentage error, balancing the influence of high-power sprints and lower-power endurance efforts.\n\nAdd/Control 1s Virtual Pmax (Toggle & Slider): When enabled, this adds a virtual 1-second data point to the fitting process. The slider sets its power value. This is a powerful tool for anchoring the high end of the power curve for all models, improving the fit for very short durations.\n\n\n\n\nMetabolic Profile Setup (Mader Model)\nThis is the core of the metabolic modeling, where the athlete’s “engine” is defined.\n\nOxygen Demand Settings: Defines the Power-\\(\\dot{V}O_2\\) relationship.\n\nCurvilinear CE relationship (Toggle): Switches between a linear model and a more physiologically nuanced quadratic model for \\(\\dot{V}O_2\\) demand.\n\nLinear Model: \\(\\dot{V}O_{2,SS} = CE \\cdot P + \\dot{V}O_{2,Base}\\). A constant oxygen cost per Watt.\nCurvilinear Model: \\(\\dot{V}O_{2,SS} = a \\cdot P^2 + CE_{Start} \\cdot P + \\dot{V}O_{2,Base}\\). Models the decrease in efficiency at higher intensities. The curvature parameter ‘a’ is automatically calculated to ensure the slope at \\(\\dot{V}O_{2,max}\\) matches the user-defined \\(CE_{Target}\\).\n\nEfficiency Display (ηgross, ηnet, Δη): This area displays three key, dynamically calculated efficiency metrics.\n\nGross Efficiency (ηgross): Ratio of mechanical power output to total metabolic energy expenditure.\nNet Efficiency (ηnet): Ratio of mechanical power output to metabolic energy expenditure above resting levels.\nDelta Efficiency (Δη): Efficiency of performing additional mechanical work, calculated from the Cost of Exercise (CE).\n\n\nPhysiological Inputs: The sliders for setting the athlete’s core parameters.\n\n\\(\\dot{V}O_{2,max}\\) (Slider & Auto-Calculation): Maximal oxygen uptake. Can be set manually or automatically calculated from the power profile using one of three methods:\n\nSitko et al. (2022) formula: A regression equation based on 5-minute maximal power. \\[ \\dot{V}O_{2,max,rel} = 16.6 + (8.87 \\cdot P_{max,5min,rel}) \\]\nCE-based formula: Estimates \\(\\dot{V}O_{2,max}\\) from the oxygen demand of a maximal effort of a user-defined duration (set via the “Duration for \\(\\dot{V}O_{2,max}\\) Calc” slider). \\[ \\dot{V}O_{2,max,abs} = (P_{max,duration,abs} \\cdot CE) + \\dot{V}O_{2,Base} \\]\nAverage: Averages the results of the Sitko and CE-based methods.\n\nvLamax (Slider & Auto-Calculation): This parameter represents the maximal rate of lactate production, a key indicator of an athlete’s maximal glycolytic capacity. It can be set manually via the slider or automatically estimated using the “Estimate vLamax from 20s Power” feature. This estimation tool leverages a 20-second maximal sprint power value, a practical field-based proxy for assessing glycolytically dominant power output. The app implements regression equations adapted from research by (Clark2025?) to derive \\(vLa_{max}\\) from this power input. Users can choose from three estimation methods via a dropdown menu:\n\nMethod: Absolute (W only): This method uses the absolute 20-second average power (\\(P_{20s, abs}\\) in Watts) as the sole predictor. The formula implemented is: \\[ vLa_{max} = 0.062773 + (0.000483 \\cdot P_{20s, abs}) \\] This approach is useful when comparing athletes or tests where absolute power output is the primary metric of interest, independent of body mass.\n\n\n\nMethod: Relative (W/kg only): This method uses the mass-relative 20-second average power (\\(P_{20s, rel}\\) in W·kg⁻¹), normalizing for the athlete’s body mass. The formula is: \\[ vLa_{max} = -0.402955 + (0.071581 \\cdot P_{20s, rel}) \\] This approach is often preferred for comparing the glycolytic capacity of athletes of different sizes, as it accounts for the influence of body mass on power production.\nMethod: Average (W & W/kg) (Default): This method calculates \\(vLa_{max}\\) using both the absolute and relative power formulas and then takes the average of the two results. This hybrid approach aims to balance the perspectives of absolute power output and mass-relative capacity, potentially providing a more robust estimate across a wider range of athlete types. \\[ vLa_{max, final} = \\frac{vLa_{max, abs} + vLa_{max, rel}}{2} \\] The “Best 20s Avg. Power” slider allows the user to input the power value for these calculations, and pressing the “Estimate” button applies the selected formula, updates the main \\(vLa_{max}\\) slider, and triggers a full recalculation of the metabolic profile. This feature provides a valuable, non-invasive method for estimating a key anaerobic parameter from a simple, repeatable performance test.\n\n\nFit Parameter to Power Profile (Tool): A powerful integration feature. It algorithmically adjusts one metabolic parameter (\\(\\dot{V}O_{2,max}\\), \\(vLa_{max}\\), or CE) to make the Mader model’s predicted MLSS power match 95% of the Critical Power (CP) derived from the 2-Parameter PD model. This provides a physiologically plausible way to anchor the metabolic model to real-world performance data.\n\n\n\n\nSubstrate Utilization\n\nShow Substrate Utilization (Toggle): Enables the modeling and visualization of fuel use (carbohydrates vs. fats).\nModel Basis: The app calculates the percentage contribution of carbohydrates based on the ratio of lactate production to lactate oxidation (\\(vLa_{SS} / vLa_{ox}\\)). As intensity rises, this ratio increases, reflecting a shift towards CHO metabolism. Fat utilization is the remainder. This creates a self-consistent system where the predicted substrate mix determines the Respiratory Quotient (RQ), which in turn determines the precise caloric equivalent of oxygen used for all efficiency calculations.\n\n\n\n\nTab 2: Power Data Points\nA simple interface for managing the athlete’s performance data. Users can input a label, power (in W or W·kg⁻¹, depending on the global unit setting), and duration for their maximal efforts. These points form the basis for the power-duration model fitting.\n\n\nTab 3: Compare\nWhen “Enable Comparison Mode” is checked, this tab becomes active, transforming the app into a powerful multi-profile analysis tool.\n\nProfile Selection: Users can select multiple profiles to compare simultaneously.\nMirrored Settings: The tab contains an independent set of controls for the Power-Duration model, allowing users to apply a consistent fitting methodology (e.g., same model, same fitting range) to all selected profiles for a fair comparison.\nEtalon Profile Conversion: A unique feature that converts all athlete profiles to a standardized “Etalon” (60 kg rider, 7.2 kg bike) by using a physics model to calculate the power this standard rider would need to produce to match the actual athlete’s speed on a given gradient. This normalizes for differences in body mass and allows for a more direct comparison of climbing performance."
  },
  {
    "objectID": "Metabolic_Profile.html#the-main-content-area-visualizations-outputs",
    "href": "Metabolic_Profile.html#the-main-content-area-visualizations-outputs",
    "title": "Integrated Metabolic & Power Profile: Ein detaillierter Leitfaden",
    "section": "The Main Content Area: Visualizations & Outputs",
    "text": "The Main Content Area: Visualizations & Outputs\nThis is where the results of the models are displayed through a series of interconnected plots and tables.\n\nPower-Duration Profile (PDP) Plot\nThis plot visualizes the athlete’s performance data and the fitted PD model.\n\nData Points: Plotted as markers. Points used in the fit are solid, while unused points are marked with an ‘x’. Virtual points are shown as stars. Markers are color-coded based on their deviation from the fitted model line, providing an instant visual cue for how well the model represents each effort.\nModel Curve: The selected PD model (2P-CP, Power-Law, or OmPD) is drawn as a solid line through the range of the fitted data points and as a dashed line where it is extrapolated.\nAnnotations: Key parameters from the fitted model (e.g., CP, W’, S, E, R²) and the resulting V̇O₂max estimations are displayed directly on the plot.\n\n\n\nMetabolic Profile (Mader Model) Plot\nThis plot illustrates the steady-state metabolic responses based on the defined physiological profile.\n\nAxes: Power (X-axis), \\(\\dot{V}O_2\\) (left Y-axis), and Lactate/Metabolic Rates (right Y-axis). A third Y-axis for absolute substrate rates appears if enabled.\nTraces: Displays key curves like \\(\\dot{V}O_{2,SS}\\), lactate production (\\(vLa_{SS}\\)), lactate oxidation (\\(vLa_{ox}\\)), and the resulting Pyruvate Deficit (PD).\nAnnotations: Vertical lines and text mark the crucial metabolic thresholds of FATmax (power at maximal pyruvate deficit) and MLSS (power where PD is zero).\n\n\n\nSubstrate Utilization Plot\nThis plot, visible when enabled, shows the relative contribution of carbohydrates and fats to total energy expenditure across the power spectrum, clearly visualizing the “substrate crossover” point.\n\n\nKey Metrics & Radar Chart\nThis section in the bottom row provides a summary and a powerful comparative visualization.\n\nValues Container: A numerical summary of the key metabolic parameters (Power, \\(\\dot{V}O_2\\), Substrate Use, Efficiency) at the FATmax and MLSS intensities.\nRadar Chart: A heptagonal plot comparing the athlete’s modeled power at seven key durations (5s, 30s, 1m, 3m, 5m, 20m, 60m) against normative data. The outer ring (100%) represents the 90th percentile of professional cyclists (Mateo-March2022?), while the center (0%) represents an untrained individual (Allen2010?). This provides an at-a-glance view of the athlete’s strengths and weaknesses relative to established benchmarks.\n\n\n\nTraining Zones Tables\nThe app generates two detailed tables to guide training prescription.\n\nTraining Zones (7 Zone Model): A classic 7-zone table where power zones are defined as percentages of the Mader-derived MLSS. For each zone, it provides the power range (in %MLSS and absolute Watts), the corresponding heart rate range (based on %HRmax), and the estimated carbohydrate and fat utilization rates (in g/h).\nSpecific Training Areas: This table provides more targeted training recommendations for key physiological adaptations. It defines specific interval and rest power targets for workouts aimed at improving FATmax, Lactate Clearance, and \\(\\dot{V}O_{2,max}\\) (via intermittent exercise).\n\n\n\nComparison Results (Visible in Compare Mode)\nWhen in comparison mode, the main content area is replaced by a detailed results table and a combined PDP plot.\n\nComparison Table: A comprehensive table listing key metabolic and performance metrics for each selected profile, allowing for direct quantitative comparison. Metrics include \\(\\dot{V}O_{2,max}\\), \\(vLa_{max}\\), Pmax at various durations, CP, MLSS, FATmax, and a calculated “Compound Score” (\\(P_{5min,abs} \\times P_{5min,wkg}\\)) for an integrated performance measure. The table is sortable by any column.\nModel Details: Below the table, a summary of the fitted model parameters and the mathematical formula is provided for each profile.\nCombined PDP Plot: All selected profiles’ data points and fitted model curves are plotted on a single graph, with each profile assigned a distinct color for clear visual comparison."
  },
  {
    "objectID": "Power_Profile.html",
    "href": "Power_Profile.html",
    "title": "Composite Power Profile Analyzer: A Detailed Feature Guide",
    "section": "",
    "text": "Fullscreen-Link: Power Profile Analyzer\nThe Composite Power Profile Analyzer is a sophisticated, web-based tool designed for the in-depth analysis of cycling performance data. Its primary function is to process raw activity files (from sources like FIT, TCX, or GPX) and transform them into a comprehensive and actionable power profile. The application serves as a crucial “top-down” analytical engine, starting with an athlete’s real-world performance data to model their maximal power-duration capabilities.\nThe core workflow of the application can be broken down into several key stages:\nThis tool is invaluable for athletes and coaches who wish to build a robust and accurate picture of their power profile from a wealth of training data, moving beyond the limitations of single-session analysis."
  },
  {
    "objectID": "Power_Profile.html#the-sidebar-the-control-center",
    "href": "Power_Profile.html#the-sidebar-the-control-center",
    "title": "Composite Power Profile Analyzer: A Detailed Feature Guide",
    "section": "The Sidebar: The Control Center",
    "text": "The Sidebar: The Control Center\nThe sidebar is the primary interface for controlling the entire analysis workflow, organized into logical tabs that guide the user from file upload to final export.\n\nTab 1: Analysis & Settings\nThis is the main control panel for data input, athlete configuration, and model selection.\n\n1. Upload Activity Files\nThis section handles the initial data ingestion.\n\nFile Drop Area: Users can drag and drop multiple activity files or click to open a file selection dialog. The app supports three common formats:\n\n.fit (Flexible and Interoperable Data Transfer): The standard format for modern Garmin devices and many other GPS computers. It is a binary format that the app parses using the fit-file-parser.js library.\n.tcx (Training Center XML): An XML-based format that also contains detailed workout data, including power.\n.gpx (GPS Exchange Format): An XML-based format primarily for GPS tracks, but it can contain power data within its &lt;extensions&gt; tags, which the app is equipped to parse.\n\nAnalysis Process: Once files are uploaded, the app performs a multi-step analysis “under the hood”:\n\nParsing: Each file is read and the raw, time-stamped power data points are extracted.\nInterpolation: The raw data, which may have variable recording intervals, is interpolated to a consistent 1-second resolution. This ensures that the subsequent MMP calculation is accurate and standardized.\nMMP Calculation: For each individual activity file, the app calculates the Mean Maximal Power (MMP) curve. This is achieved using a sliding window algorithm: for every duration d (from 1 second up to the total activity duration), the algorithm slides a window of size d across the 1-second power data array, calculating the average power for each window position. The highest average found for that duration d becomes the MMP value for that duration.\nComposite Curve Synthesis: After calculating the MMP curve for every uploaded file, the app creates the final composite power curve. For each second of duration (e.g., 1s, 2s, …, 3600s, etc.), it compares the MMP value from all the individual files and retains only the single highest value. The result is a single curve representing the athlete’s absolute best performance across all provided activities.\n\nShow Key Efforts (Checkbox): This toggle controls the visibility of “Key Effort” markers on the main plot. These markers highlight significant “breakthrough” performances. The logic for their selection is based on a comparison between the athlete’s actual composite curve and the power predicted by the fitted mathematical model:\n\nSelection Logic: The app divides the power curve into time “buckets” (e.g., 1-3 min, 5-10 min, etc.). Within each bucket, it identifies the data point that has the highest positive percentage deviation from the fitted model line.\nSpecial Rule: For critical endurance ranges (e.g., around the 5 to 60-minute mark), if no data point lies above the model’s prediction, the algorithm pragmatically selects the point with the smallest negative deviation. This ensures that even in a well-modeled profile, a representative point is chosen for these important durations.\nProtected Efforts: The maximal power for 1 second and 20 seconds are always identified and protected as key efforts, given their physiological significance for neuromuscular and glycolytic power.\n\n\n\n\n2. Athlete & Unit Settings\nThis section allows for personalization and sets the units for display.\n\nGender, Age, Height: These anthropometric details are primarily collected for compatibility when exporting the profile for use in other applications that may require them for metabolic calculations (like the Integrated Metabolic & Power Profile app).\nBody Mass (kg): A critical input. This value is used to calculate and display mass-relative power (in W/kg) if the user chooses.\nGlobal Power Unit (Toggle): This switch (Use Absolute Units (W)) determines how power data is displayed throughout the application—on the plot’s Y-axis, in the summary tables, and in the data lists. When checked, all values are in absolute Watts (W). When unchecked, values are in Watts per kilogram (W·kg⁻¹). This setting only affects visualization; the underlying model fitting is handled internally to ensure consistency.\n\n\n\n3. Power-Duration Model & Plot\nThis section configures the mathematical modeling and visualization of the composite power curve.\n\nPower-Duration Model (Dropdown): Selects the model to be fitted to the composite power data. The options are the same as in the metabolic app:\n\n2-Parameter CP (Hyperbolic): The classic model where power is the sum of a sustainable component (CP) and an unsustainable component (W’) that depletes over time (Monod & Scherrer, 1965). \\[ P(t) = CP + \\frac{W'}{t} \\]\n\nPros: Well-established; the parameters are physiologically interpretable (CP as a metabolic threshold, W’ as anaerobic work capacity).\nCons: Unrealistic for very short durations (predicts infinite power as t→0) and very long durations (predicts no fatigue below CP).\nData: Best suited for efforts in the “severe” intensity domain, typically from 2 to 20 minutes. Requires 3-5 reliable data points for a robust fit (Leo et al., 2022).\n\nOmni-Domain (OmPD): A 4-parameter extension of the 2P-CP model, designed for a more realistic fit across a wider range of durations, including prolonged endurance (Puchowicz et al., 2020). It adds a maximal power parameter (\\(P_{max}\\)) to anchor the short end of the curve and a fatigue parameter (A) to model the performance decline during very long efforts. \\[ P(t) =\n\\begin{cases}\n\\frac{W'_{\\text{eff}}(t)}{t} + CP & \\text{if } t \\le 1800s \\\\\n\\frac{W'_{\\text{eff}}(t)}{t} + CP - A \\cdot \\ln(\\frac{t}{1800}) & \\text{if } t &gt; 1800s\n\\end{cases}\n\\] Where \\(W'_{\\text{eff}}(t) = W' \\cdot (1 - e^{-t/\\tau})\\) and \\(\\tau = W' / (P_{max} - CP)\\).\n\nPros: Aims to model the entire power curve, from sprints to ultra-endurance.\nCons: More complex; requires more data points (≥4, including efforts &gt;30 min) for a stable fit.\nVirtual Points: To improve stability, the app automatically adds a virtual 20s data point (based on the “Best 20s Avg. Power” input) if no real data exists in the 1-35s range when this model is selected.\n\nPower-Law: A simple, robust 2-parameter model where power is a power function of time. \\[ P(t) = S \\cdot t^{E-1} \\]\n\nPros: Often provides an excellent mathematical fit across all durations with as few as two data points.\nCons: The parameters (S and E) are less directly interpretable as physiological thresholds compared to CP and W’.\n\n\nCustomize Fitting Range (Toggle & Sliders): This allows the user to precisely control which portion of the composite power curve is used for the model fitting. By adjusting the “Fitting Start (s)” and “Fitting End (s)” sliders, a user can, for example, focus the fit of a 2P-CP model on the 2-20 minute range to get a more robust CP value, or use the entire curve for a Power-Law model.\nCustomize Plot X-Axis (Toggle & Sliders): These controls adjust the visible time range of the main plot’s X-axis without affecting the data or the model fit. It is purely a visualization tool for zooming in on specific sections of the power curve (e.g., focusing on sprint performance from 0-60 seconds).\n\n\n\n4. Export Profile\nThis is the final output stage of the application.\n\nProfile Name: A text input field allowing the user to assign a descriptive name to the exported profile (e.g., “Pogi - Stage 1”).\nClean Up Key Efforts (Button): This triggers a sophisticated algorithm designed to refine the list of automatically-identified key efforts, removing redundant points to create a more balanced and representative set for export. The algorithm works as follows:\n\nProtect: The 1s and 20s efforts are always kept.\nFilter: Efforts that fall significantly below the model’s prediction (e.g., deviation &lt; -3%) are removed.\nWinner-Takes-All: The remaining efforts are sorted by their “quality” (i.e., their positive deviation from the model). The algorithm iterates through this sorted list. The highest-quality effort is selected and “claims” a surrounding time window. The size of this window is dynamic: it’s wider for longer-duration efforts (e.g., +/- 20% for efforts &gt;30 min) and narrower for shorter ones (e.g., +/- 50% for efforts &lt;1 min). Any other efforts falling within the winner’s claimed window are discarded. This process repeats until all efforts have either been selected as a winner or discarded, ensuring the final list is well-distributed across the time spectrum.\n\nExport Key Efforts Profile (Button): Exports a .json file containing only the curated list of key efforts. This is the recommended export format for use in metabolic modeling, as it provides a set of high-quality, non-redundant maximal efforts.\nExport Full Profile (Button): Exports a .json file containing the entire composite power curve (MMP data for every second).\n\n\n\n\nTab 2: Composite Power Data\nThis tab provides a simple, scrollable list of the entire composite Mean Maximal Power curve, showing the duration and the corresponding maximal power value for every second of the profile. Users can manually remove individual data points from this list, which will trigger a refit of the power-duration model.\n\n\nTab 3: Key Efforts\nThis tab, which appears after the first analysis, displays only the curated list of key efforts identified by the app’s algorithm. It provides the same functionality as the “Composite Power Data” tab, allowing users to inspect and manually remove points from this specific list before exporting. This is the primary interface for refining the profile that will be used in other modeling tools."
  },
  {
    "objectID": "Power_Profile.html#the-main-content-area-visualizations-outputs",
    "href": "Power_Profile.html#the-main-content-area-visualizations-outputs",
    "title": "Composite Power Profile Analyzer: A Detailed Feature Guide",
    "section": "The Main Content Area: Visualizations & Outputs",
    "text": "The Main Content Area: Visualizations & Outputs\nThis is where the results of the analysis are graphically and numerically presented.\n\nPower-Duration Profile Plot\nThis is the central visualization of the application.\n\nComposite Curve (Light Grey Line with Markers): The full Mean Maximal Power curve derived from all uploaded files. The markers on this line are color-coded based on their percentage deviation from the fitted model curve, providing an immediate visual assessment of the model’s fit. Colors typically range from cool (e.g., blue, for points far below the model) to hot (e.g., red, for points far above the model).\nFitted Model (Dark Grey Line): The selected mathematical model (e.g., OmPD) is overlaid on the data. It is drawn as a solid line within the user-defined fitting range and as a dashed line where it is extrapolated.\nKey Efforts (Star Markers): The identified “breakthrough” efforts are highlighted with large, distinct star markers, making them easy to identify. These markers are also color-coded by their deviation.\nAnnotations: A text box on the plot provides a detailed summary of the fitted model, including its name, the derived parameters (CP, W’, S, E, etc.), and the R² value indicating the goodness of fit.\n\n\n\nValues Container\nThis text area below the plot provides a concise numerical summary of the analysis.\n\nModel Parameters: It lists the key parameters derived from the fitted model, such as Critical Power (CP) and W’, providing both absolute (W, kJ) and relative (W/kg, kJ/kg) values.\nMMP Table: It displays a table of the maximal mean power values from the composite curve for standard, physiologically relevant durations (e.g., 1s, 15s, 1min, 5min, 20min, 60min), giving a quick performance overview."
  },
  {
    "objectID": "Etalon_Calculator.html",
    "href": "Etalon_Calculator.html",
    "title": "Advanced Etalon W/kg Performance Converter: A Feature Guide",
    "section": "",
    "text": "Fullscreen-Link: Etalon W/kg Performance Converter\nThe Advanced Etalon W/kg Performance Converter is a specialized, web-based physics simulation tool designed to deconstruct and analyze cycling performances with a high degree of precision. It moves beyond simple power-to-weight ratios by employing a robust mathematical model, grounded in the fundamental principles of physics detailed by researchers like Martin et al. (1998), to account for the multiple forces a cyclist must overcome. The application’s core purpose is to facilitate objective performance comparisons by translating real-world efforts into a standardized benchmark, known as “Etalon W/kg”, and vice-versa.\nThe app operates in two distinct, powerful modes:\nBy providing this bidirectional conversion, the application serves as a comprehensive bridge between standardized performance metrics and the complex reality of individual athletic performance."
  },
  {
    "objectID": "Etalon_Calculator.html#core-concepts-deconstructing-cycling-power",
    "href": "Etalon_Calculator.html#core-concepts-deconstructing-cycling-power",
    "title": "Advanced Etalon W/kg Performance Converter: A Feature Guide",
    "section": "Core Concepts: Deconstructing Cycling Power",
    "text": "Core Concepts: Deconstructing Cycling Power\nTo propel a bicycle, a rider must produce power to overcome a series of opposing physical forces. The application’s calculation engine is a sophisticated physics model that quantifies each of these forces to determine the total power required. This model is built upon the foundational work of researchers like Martin et al. (1998).\nThe primary forces modeled by the app are:\n\nGravitational Resistance (\\(P_{PE}\\)): The power required to lift the total mass of the rider and bike against gravity. This is a function of the system mass, the acceleration due to gravity (g), and the vertical speed, which is determined by the road gradient. It is the dominant force on steep climbs.\nAerodynamic Drag (\\(P_{AD}\\)): The power required to push through the air. This force is a function of air density (\\(\\rho\\)), the rider’s frontal area and shape (combined into the drag area coefficient, \\(C_d A\\)), and the relative air velocity. It is the dominant force on flat terrain and at high speeds.\nRolling Resistance (\\(P_{RR}\\)): The power lost due to the deformation of the tires against the road surface. This is a function of the total system mass, the road gradient (which affects the normal force), and the coefficient of rolling resistance (\\(C_{rr}\\)), which itself depends on tire type, pressure, and road surface.\nDrivetrain Frictional Losses (\\(P_{F}\\)): The power lost to friction within the chain, cogs, and bearings of the bicycle’s drivetrain. The app models this as a percentage of the total power transmitted.\n\nThe total power (\\(P_{Total}\\)) an athlete must produce at the pedals is the sum of these resistive powers, adjusted for drivetrain efficiency (\\(E_c\\)): \\[ P_{Total} = \\frac{P_{PE} + P_{AD} + P_{RR}}{E_c} \\] The application uses detailed equations, as described by Martin et al. (1998), to calculate each of these components precisely.\n\nWhy Etalon W/kg? - The Need for Standardization\nA simple watts-per-kilogram (W/kg) calculation, derived by dividing a rider’s power output by their body mass, is an incomplete metric for comparison and heavier riders have inherent advantages. For the same speed on a climb, a heavier rider requires a lower W/kg than a lighter rider. This is due to two main factors:\n\nBike Weight Ratio: The UCI-mandated minimum bike weight (6.8 kg) constitutes a smaller percentage of a heavier rider’s total system mass, reducing their “rider + bike” w/kg.\nAerodynamics: A heavier rider’s aerodynamic drag does not typically increase in direct proportion to their weight, often resulting in a superior power-to-drag-area ratio, which is beneficial at higher speeds and on shallower gradients.\n\nTo create a true “apples-to-apples” comparison, the application uses the Etalon standard. “Etalon” is French for “standard” or “benchmark.” The app standardizes all performances to a 60 kg rider on a 7.2 kg bike. The resulting “Etalon W/kg” is not the rider’s actual power output, but a standardized metric representing the performance level required of this benchmark rider to achieve the same speed. This allows for objective evaluation across athletes of all sizes."
  },
  {
    "objectID": "Etalon_Calculator.html#the-sidebar-the-control-center",
    "href": "Etalon_Calculator.html#the-sidebar-the-control-center",
    "title": "Advanced Etalon W/kg Performance Converter: A Feature Guide",
    "section": "The Sidebar: The Control Center",
    "text": "The Sidebar: The Control Center\nThe sidebar is the primary interface for setting all model parameters and managing performance data.\n\nCalculation Mode & Tabs\n\nMode Switcher: A prominent toggle at the top allows the user to switch between the two primary calculation modes: Etalon → Real Power and Real Power → Etalon. Switching modes reconfigures the input fields and the results table accordingly.\nTabs: The sidebar is organized into two tabs:\n\nModel Parameters: For setting all rider, equipment, and environmental variables.\nPerformance Data: For inputting and managing the list of performances to be analyzed.\n\n\n\n\nTab 1: Model Parameters\nThis tab is for defining the physical context of the simulation.\n\nLoad Example Profile\n\nA dropdown menu allows users to instantly load pre-configured profiles, such as “Pogi’s 2024 Performances”. This populates all rider, equipment, and performance data fields, providing a powerful demonstration and a starting point for analysis.\n\n\n\nRider & Equipment\nThese sliders define the physical characteristics of the actual rider being analyzed.\n\nRider Mass (kg): The body mass of the specific athlete whose performance is being calculated or compared.\nBike & Gear Mass (kg): The total mass of the bicycle, clothing, helmet, shoes, water bottles, etc. The UCI minimum is 6.8 kg, but a realistic race-ready weight is often closer to 7.2 kg or more.\n\n\n\nEnvironmental & Mechanical Factors\nThese sliders allow for fine-tuning of the physical model to match specific conditions. Each includes an info icon with a tooltip providing typical physiological or real-world values.\n\nRolling Resistance (Crr): The Coefficient of Rolling Resistance. This dimensionless value quantifies the friction from the tires. Typical values range from 0.0025 for a fast track to 0.0050 for average road tires.\nAerodynamic Drag (CdA): The drag area (in m²), which is the product of the drag coefficient (\\(C_d\\)) and the frontal area (A). This is a critical determinant of speed on flats and shallow gradients. Typical values range from 0.200 m² for an elite time-trial position to 0.400 m² for an relatively upright, non-aerodynamic position.\nAir Density (\\(\\rho\\)): The density of the air (in kg/m³). This is highly dependent on altitude and temperature. Typically around ~1.225 kg/m³ at sea level, while at 1500m it drops to ~1.058 kg/m³. A lower air density reduces aerodynamic drag.\nDrivetrain Loss (%): The percentage of power lost to friction in the chain, pulleys, and bearings. Typically ranges from 1.5% for a perfectly maintained, top-tier drivetrain system to 5.0% for a more worn or dirty drivetrain.\n\n\n\n\nTab 2: Performance Data\nThis tab is for managing the list of climbs or performances to be analyzed.\n\nAdd & Compare Performance: The main input section for adding new data. The fields displayed here dynamically change based on the selected calculation mode.\n\nMode 1 (Etalon → Real): The user inputs the climb’s Label, Length (km), Elevation (m), a benchmark Etalon W/kg, and the Actual Time taken by the real rider.\nMode 2 (Real → Etalon): The user inputs the climb’s Label, Length (km), Elevation (m), and the rider’s Actual Power (W). The time is then calculated by the model.\n\nPerformance List: Displays a list of all added performances. Each can be removed individually.\nProfile Management:\n\nSave/Load Profile: Allows the user to save the current set of parameters and performances to a .json file for later use, or to load a previously saved profile."
  },
  {
    "objectID": "Etalon_Calculator.html#the-main-content-area-results-explanations",
    "href": "Etalon_Calculator.html#the-main-content-area-results-explanations",
    "title": "Advanced Etalon W/kg Performance Converter: A Feature Guide",
    "section": "The Main Content Area: Results & Explanations",
    "text": "The Main Content Area: Results & Explanations\nThis area displays the detailed output of the calculations in a clear, tabular format and provides context for the results.\n\nResults Table\nThis is the primary output, presenting a detailed, sortable table with the results for each performance. The columns displayed change dynamically based on the selected calculation mode.\nMode: Etalon → Real Power This table is designed to answer: “Given a standard performance level (Etalon W/kg) and an actual time, what power did my rider really produce, and what factors influenced this?”\n\nLabel, Length, Elev., Gradient, Speed, VAM: Basic characteristics of the climb.\nAct. Time: The actual time the rider took.\nExp. Time: The expected time the Etalon rider would have taken to achieve the benchmark Etalon W/kg in windless conditions.\nTime Diff.: The difference between actual and expected time. A positive value (red) means the rider was slower than expected (indicating a headwind or other resistive force), while a negative value (green) means they were faster (indicating a tailwind).\nEff. Wind (m/s): The key output. This is the calculated constant headwind (positive value) or tailwind (negative value) that would be required in the physics model to account for the observed Time Difference.\nEtalon W/kg: The benchmark performance input.\nW/kg (rider mass): The calculated real-world, mass-relative power of the specific rider.\nPower (W): The calculated absolute power the rider had to produce to achieve their actual time, factoring in their mass, equipment, and the calculated effective wind.\n\nMode: Real Power → Etalon This table is designed to answer: “Given my rider’s actual power output, what is their standardized Etalon W/kg performance?”\n\nLabel, Real Power (W), Real W/kg: The input data for the actual rider.\nCalc. Duration, Calc. Speed, VAM, Gradient: The performance characteristics (time, speed) that are calculated to result from the given real power output in windless conditions.\nEtalon W/kg: The key output. The standardized performance benchmark calculated from the real power input.\nEtalon Power (W): The absolute power a 60 kg Etalon rider would need to produce to match the real rider’s speed.\n\n\n\nInterpreting the Results: Key Concepts and Model Limitations\nTo correctly interpret the outputs of the performance converter, it is essential to recognize the context provided by its underlying physics model and its inherent assumptions.\nAs detailed previously, the ‘Etalon W/kg’ metric is the cornerstone of this tool’s comparative power. By standardizing all performances to a 60 kg rider, it provides a unified benchmark for objective evaluation, removing the confounding variables of rider mass and equipment.\nIn the “Etalon → Real Power” mode, the ‘Effective Wind’ calculation quantifies the environmental conditions of a performance. It represents the constant headwind or tailwind required to explain the difference between the rider’s actual time and the time predicted by the model in ideal, windless conditions, offering a tangible measure of environmental assistance or resistance.\nIt is crucial to acknowledge the model’s limitations. The calculations are based on a simplified physics engine that assumes constant conditions throughout an effort. It does not account for real-world complexities such as:\n\nVariable wind speeds or gusts.\nThe significant aerodynamic benefit of drafting within a group.\nChanges in rider position (e.g., moving from the hoods to the drops), which alter aerodynamic drag.\n\nTherefore, while the results provide a powerful framework for standardized analysis, they may differ from on-bike power meter data recorded under dynamic conditions."
  },
  {
    "objectID": "CdA_App.html",
    "href": "CdA_App.html",
    "title": "‘Shit’ mywindsock - CdA Calculator",
    "section": "",
    "text": "Fullscreen-Link: CdA Calculator"
  },
  {
    "objectID": "CdA_App.html#introduction",
    "href": "CdA_App.html#introduction",
    "title": "‘Shit’ mywindsock - CdA Calculator",
    "section": "Introduction",
    "text": "Introduction\nThe CdA Calculator is designed to perform aerodynamic analysis on ride data. Its primary purpose is to calculate a rider’s coefficient of aerodynamic drag area (\\(C_d A\\)) using a GPX file containing power, GPS, and elevation data. The application enriches this data with meteorological information such as wind and temperature.\nThe tool operates in three distinct, sequential steps: 1. Parameter Input: The user provides a GPX file and sets key physical parameters like rider/bike mass and rolling resistance. 2. CdA Analysis: The application processes the entire ride, filters for segments with stable conditions, calculates the instantaneous \\(C_d A\\) for each, and presents the average value along with detailed charts and a map visualization. 3. Performance Simulation: Using the average \\(C_d A\\) derived from the analysis, the tool simulates the power required for the entire ride, providing a model-vs-actual comparison to validate the results.\nThis process allows an athlete to get a robust, data-driven estimate of their aerodynamic profile from a real-world ride, bypassing the need for expensive wind tunnel or velodrome testing."
  },
  {
    "objectID": "CdA_App.html#the-main-interface",
    "href": "CdA_App.html#the-main-interface",
    "title": "‘Shit’ mywindsock - CdA Calculator",
    "section": "The Main Interface",
    "text": "The Main Interface\nThe application is built with a two-column layout for a clear, guided user experience.\n\nInput Sidebar (Left): This is the control panel. It houses all user inputs, parameters, and action buttons. It remains visible (position: sticky) so users can tweak parameters and see the results update in real-time in the main content area.\nMain Content (Right): This area is dedicated to displaying the results of the analysis, including summary statistics, interactive charts, and a route map. It is initially populated with a welcome message and dynamically filled with content as the analysis progresses."
  },
  {
    "objectID": "CdA_App.html#part-1-the-sidebar-parameters-controls",
    "href": "CdA_App.html#part-1-the-sidebar-parameters-controls",
    "title": "‘Shit’ mywindsock - CdA Calculator",
    "section": "Part 1: The Sidebar (Parameters & Controls)",
    "text": "Part 1: The Sidebar (Parameters & Controls)\nThis section serves as the command center for the entire analysis.\n\nStep 1: Parameters\nThis is the initial data-gathering stage. All inputs here directly affect the physics calculations.\n\nUpload GPX File: The primary input for the application.\n\nFunctionality: The user clicks to select a .gpx file from their local system.\nRequirement: The GPX file must contain power data, typically found within &lt;extensions&gt; tags (e.g., &lt;power&gt; or &lt;gpxtpx:power&gt;). Files without power data will result in an error.\n\nRider Mass & Bike Mass (kg): These two values are summed to get the total system mass (\\(m_T\\)). This total mass is a critical input for calculating the power required to overcome gravity (\\(P_{PE}\\)) and changes in kinetic energy (\\(P_{KE}\\)).\nRolling Resistance (Crr): A dimensionless coefficient representing the friction between the tires and the road surface. This value is used to calculate the power lost to rolling resistance (\\(P_{RR}\\)). The default of 0.0040 is a reasonable estimate for good quality road tires on smooth asphalt.\nAir Density (ρ) (kg/m³): A critical parameter for calculating aerodynamic drag power (\\(P_{aero}\\)).\n\nAutomatic Calculation: Upon processing a GPX file, the application fetches historical weather data (temperature) and uses the elevation data from the GPX file to calculate a ride-averaged air density. This value automatically populates the slider.\nManual Override: The user can manually adjust this slider to override the calculated value or to perform “what-if” analyses for different conditions (e.g., sea level vs. altitude).\n\n\n\n\nAction Buttons\n\nAnalyze CdA: The primary action button. Kicking off the full analysis workflow: file parsing, weather fetching, data merging, and the initial \\(C_d A\\) calculation. A loader animation appears on the button during this process.\nRecalculate Analysis: This button replaces “Analyze CdA” after the first successful analysis. It allows the user to change the input parameters (e.g., Rider Mass, Crr) and re-run the \\(C_d A\\) calculation without re-fetching the GPX and weather data, providing a near-instant update to the results.\nStatus Area: A small panel below the buttons that provides real-time feedback on the analysis process (e.g., “1/3: Reading GPX file…”) or displays any errors that occur."
  },
  {
    "objectID": "CdA_App.html#part-2-the-analysis-workflow-the-physics-engine",
    "href": "CdA_App.html#part-2-the-analysis-workflow-the-physics-engine",
    "title": "‘Shit’ mywindsock - CdA Calculator",
    "section": "Part 2: The Analysis Workflow (The Physics Engine)",
    "text": "Part 2: The Analysis Workflow (The Physics Engine)\nWhen the “Analyze CdA” button is clicked, a multi-stage computational process begins.\n\nStep A: Data Ingestion & Enrichment\n\nGPX Parsing: The selected GPX file is read as text and parsed using the browser’s DOMParser. The code iterates through all &lt;trkpt&gt; (trackpoint) elements, extracting latitude, longitude, elevation, timestamp, and crucially, the power value from the extension data.\nWeather Data Fetching: The application determines the ride’s date and geographical midpoint. It then makes an API call to the archive-api.open-meteo.com service to retrieve historical hourly weather data, specifically temperature_2m, windspeed_10m, and winddirection_10m.\nData Merging & Interpolation: This is a key step for accuracy. The raw, second-by-second GPX data is merged with the coarse, hourly weather data. For each trackpoint, the application performs a linear interpolation between the two closest hourly weather data points to estimate the precise temperature, wind speed, and wind direction for that exact moment in time.\n\nWind Direction: To correctly interpolate wind direction (avoiding the 360° to 0° wrap-around issue), the directions are first converted into vector components (x, y), which are then interpolated. The resulting vector is converted back to an angle.\n\nPer-Segment Calculation: The code calculates additional metrics for each segment (the space between two trackpoints), including ground speed (\\(V_g\\)), gradient (\\(Gr\\)), and bearing. It also calculates the air density (\\(\\rho\\)) for each segment using its specific elevation and the interpolated temperature.\n\n\n\nStep B: The Physics of \\(C_d A\\) Calculation\nWith a complete, enriched dataset, the app iterates through each segment to find the rider’s \\(C_d A\\).\n\nThe Governing Equation: The total power a cyclist produces (\\(P_{GPX}\\)) is used to overcome several forces. The relationship, accounting for drivetrain efficiency (\\(\\eta_{drive}\\)), is: \\(P_{GPX} \\cdot \\eta_{drive} = P_{aero} + P_{gravity} + P_{rolling} + P_{kinetic}\\)\nIsolating Aerodynamic Power: The application rearranges this equation to solve for the power used exclusively to overcome air resistance: \\(P_{aero} = (P_{GPX} \\cdot \\eta_{drive}) - (P_{gravity} + P_{rolling} + P_{kinetic})\\)\nSolving for \\(C_d A\\): The definition of aerodynamic power is \\(P_{aero} = 0.5 \\cdot \\rho \\cdot C_d A \\cdot V_a^2 \\cdot V_g\\), where \\(V_a\\) is airspeed and \\(V_g\\) is groundspeed. The app solves for \\(C_d A\\): \\(C_d A = \\frac{2 \\cdot P_{aero}}{\\rho \\cdot V_a^2 \\cdot V_g}\\)\n\nAirspeed (\\(V_a\\)): This is calculated as ground speed (\\(V_g\\)) plus the effective component of the wind (\\(V_{w\\_eff}\\)), which is the wind speed projected onto the rider’s direction of travel.\n\nCritical Data Filtering: This is the core of the method’s robustness. To ensure the calculation is only performed on clean, stable data, a strict set of filters is applied. A data point is discarded if any of the following are true:\n\nSpeed is outside the 5.5 m/s to 20 m/s range (to avoid slow, unsteady efforts or extreme downhills).\nPower is below 80 Watts (to avoid coasting or very low-power sections).\nGradient is steeper than +/- 15%.\nAcceleration exceeds +/- 0.8 m/s² (to filter out hard braking or sharp attacks).\nAvailable aerodynamic power (\\(P_{aero}\\)) is less than 20W.\nThe calculated \\(C_d A\\) is outside the physically plausible range of 0.15 to 0.5.\n\nAveraging: Only the data points that pass all filters are considered “valid”. The final “Average CdA” reported by the app is the arithmetic mean of the \\(C_d A\\) values from these valid points."
  },
  {
    "objectID": "CdA_App.html#part-3-the-main-content-area-results-visualization",
    "href": "CdA_App.html#part-3-the-main-content-area-results-visualization",
    "title": "‘Shit’ mywindsock - CdA Calculator",
    "section": "Part 3: The Main Content Area (Results & Visualization)",
    "text": "Part 3: The Main Content Area (Results & Visualization)\nThis area presents the outcomes of the analysis in a comprehensive and interactive manner.\n\nStep 2: CdA Analysis (Measurement)\n\nSummary Cards: Four cards provide a high-level overview of the results from the filtered data:\n\nAverage CdA: The primary result of the analysis.\nAverage Power: The average power during the valid segments.\nAverage Speed: The average speed during the valid segments.\nValid Data Points: The number of data points that passed the filtering, shown as a fraction of the total ride data points.\n\nCdA Chart (cdaChart): An interactive time-series plot rendered with Chart.js, visualizing the valid segments of the ride.\n\nDatasets:\n\nCdA (m²): The calculated \\(C_d A\\) value for each valid point.\nAvg CdA: A dashed horizontal line showing the final average \\(C_d A\\).\nPower (W): The rider’s power output.\nSpeed (km/h): The rider’s speed.\n\nAxes: It uses a dual Y-axis configuration. The left axis is for \\(C_d A\\), and the right is for Power and Speed (speed is multiplied by 10 internally to be visible on the same scale).\nSmooth Chart Further Button: This button applies a moving average filter to the chart data, smoothing the lines to make trends easier to see. It can be clicked multiple times for increased smoothing.\n\nRoute with Wind Analysis (map): An interactive map rendered with Leaflet.js.\n\nRoute Polyline: The entire ride path is drawn on the map. The color of each segment is dynamically set based on the effective wind: green indicates a tailwind, yellow is a crosswind, and red indicates a headwind.\nWind Overlay: An animated layer of arrows flows across the map, indicating the average wind direction and speed for the ride. A static control in the top-right corner also displays the average wind speed and direction.\n\n\n\n\nStep 3: Performance Simulation (Model)\nThis section acts as a verification of the calculated \\(C_d A\\).\n\nFunctionality: After clicking the Simulate Full Ride with Avg. CdA button, the app uses the derived average \\(C_d A\\) to calculate the theoretical power required to match the rider’s actual speed at every point during the entire ride (not just the filtered segments).\nSimulation Chart (simulationChart): This chart compares the actual performance with the modeled performance.\n\nActual Power (GPX): The power data as recorded in the GPX file.\nModelled Power (calculated): The power predicted by the physics model using the calculated average \\(C_d A\\).\nInterpretation: A close match between the two lines suggests that the calculated \\(C_d A\\) is a reliable representation of the rider’s aerodynamic profile and that the rider maintained a consistent position throughout the ride. Significant deviations can indicate changes in position, drafting, or other factors not captured by the model. Both data series are smoothed for improved readability."
  },
  {
    "objectID": "CdA_App.html#technical-appendix",
    "href": "CdA_App.html#technical-appendix",
    "title": "‘Shit’ mywindsock - CdA Calculator",
    "section": "Technical Appendix",
    "text": "Technical Appendix\n\nKey Constants:\n\nGravitational Acceleration (g): 9.80665 m/s²\nDrivetrain Efficiency (Ec): 0.977 (97.7%)\nSpecific Gas Constant for Dry Air (R_specific): 287.058 J/(kg·K)\n\nFormulas:\n\n\\(P_{RR} = C_{rr} \\cdot m_T \\cdot g \\cdot \\cos(\\arctan(Gr)) \\cdot V_g\\)\n\\(P_{PE} = m_T \\cdot g \\cdot \\sin(\\arctan(Gr)) \\cdot V_g\\)\n\\(P_{KE} = m_T \\cdot V_g \\cdot a\\) (where \\(a\\) is acceleration)\n\\(V_a = V_g + (V_w \\cdot \\cos(\\theta_{wind} - \\theta_{bearing}))\\)\n\nExternal Libraries:\n\nChart.js: For all data visualizations and charts.\nchartjs-adapter-date-fns: To enable time-series axes in Chart.js.\nLeaflet.js: For the interactive route map.\n\nData Sources:\n\nUser GPX File: For ride data (GPS, elevation, time, power).\nOpen-Meteo Historical Weather API: For temperature and wind data."
  },
  {
    "objectID": "Cycling_Forces.html#introduction",
    "href": "Cycling_Forces.html#introduction",
    "title": "Cycling Power Calculator",
    "section": "1. Introduction",
    "text": "1. Introduction\nThe Cycling Power & Forces Calculator is an interactive, web-based educational and planning tool designed for cyclists, coaches, and sports scientists. It provides a real-time, physics-based simulation of the power required to cycle under a wide variety of conditions. The application’s core is a detailed physics model based on the well-established research paper by Martin et al. (1998), “Validation of a mathematical model for road cycling power.”\nThe primary functions of the application are:\n\nInteractive Exploration: Users can manipulate variables such as speed, gradient, mass, and aerodynamic profile to instantly see the effect on required power and its constituent components (aerodynamic drag, rolling resistance, gravity).\nData Visualization: The tool employs a suite of dynamic charts to visually represent how different resistive forces contribute to the total power requirement and how these relationships change with speed and gradient.\nCourse Simulation: The application includes two calculators that allow users to model performance over specific courses: one for simple, constant-gradient courses, and a more advanced one that can process a detailed course profile from a CSV file to determine the constant power needed to achieve a target time.\nIn-depth Education: The user interface is augmented with extensive explanatory text, detailing the physical meaning of key parameters like the Coefficient of Rolling Resistance (\\(C_{rr}\\)) and the Aerodynamic Drag Area (\\(C_d A\\)), complete with real-world data and examples.\n\nThis document provides a comprehensive technical breakdown of the application’s user interface, underlying physics model, and key computational algorithms.",
    "crumbs": [
      "Cycling Power Calculator"
    ]
  },
  {
    "objectID": "Cycling_Forces.html#uicomponent-breakdown",
    "href": "Cycling_Forces.html#uicomponent-breakdown",
    "title": "Cycling Power Calculator",
    "section": "2. UI/Component Breakdown",
    "text": "2. UI/Component Breakdown\nThe application is built with a two-pane layout: a sidebar for all user inputs and controls, and a main-content area for data visualization and output.\n\n2.1. The Sidebar: The Control Center\nThe sidebar contains all the interactive elements that define the simulation’s parameters. These are logically grouped into sections.\n\nRider & Bike Parameters\nThis group defines the mass of the system.\n\nRider Mass: A slider (#riderMass) to set the rider’s body mass in kilograms.\nBike Mass: A slider (#bikeMass) to set the bicycle’s mass in kilograms.\nTotal Mass (\\(m_T\\)): A read-only field (#totalMass) that automatically displays the sum of the rider and bike mass. This value is a critical input for calculating gravitational and rolling resistance forces.\n\n\n\nEnvironmental & Situational Parameters\nThis group defines the external conditions the cyclist is facing.\n\nSpeed: A slider (#velocity) that sets the cyclist’s ground speed (\\(V_g\\)) in km/h. This is a primary independent variable in most calculations.\nGradient: A slider (#gradient) to set the road gradient (\\(G_R\\)) as a percentage. It can be positive (uphill) or negative (downhill). This directly influences the power required to overcome (or be aided by) gravity.\nWind Speed: A slider (#windSpeed) to set the speed of the wind (\\(V_w\\)) in km/h. Positive values represent a tailwind (assisting the rider), while negative values represent a headwind (opposing the rider). This is used to calculate the effective air velocity (\\(V_a\\)) relative to the rider.\n\n\n\nTechnical & Aerodynamic Parameters\nThis group defines the key coefficients that govern resistive forces. The application provides detailed in-app explanations for these complex parameters.\n\nDrag Area (\\(C_d A\\)): A slider (#cdA) to set the product of the coefficient of drag (\\(C_d\\)) and the frontal area (\\(A\\)). This single value represents the overall aerodynamic profile of the rider and bike system. The in-app documentation provides typical value ranges for different riding positions and equipment levels, from an upright commuter to a fully optimized time-trialist.\nRolling Resistance (\\(C_{rr}\\)): A slider (#crr) to set the Coefficient of Rolling Resistance. This dimensionless value quantifies the friction between the tires and the road surface. The in-app documentation explains that this is a baseline value and provides typical ranges for different tire types (e.g., racing slicks vs. durable touring tires) and discusses influencing factors like temperature and road surface.\nAir Density (\\(\\rho\\)): A slider (#airDensity) to set the density of the air in kg/m³. This value is affected by temperature, altitude, and humidity. A default value for sea level standard conditions (1.225 kg/m³) is provided.\n\n\n\n\n2.2. The Main Content Area: Analysis & Visualization\nThis area displays the results of the calculations through numerical readouts and a series of charts.\n\nPower Overview\nA numerical summary box (.output-area) shows the calculated power values for the current sidebar settings:\n\nRequired Total Power (\\(P_{TOT}\\)): The total power the rider must produce at the pedals.\nPower per kg: The total power relative to the rider’s mass (W/kg).\nPower Components: A breakdown of the total power into its constituent parts: Aerodynamic Drag (\\(P_{AT}\\)), Rolling Resistance (\\(P_{RR}\\)), Potential Energy (\\(P_{PE}\\)), and Mechanical Losses (\\(P_{mech}\\)).\n\n\n\nPower Component Bar Chart\nA dynamic bar chart (#powerBarChart) that visually represents the breakdown of the power components from the Power Overview section. This provides an immediate understanding of which resistive force is dominant under the currently selected conditions.\n\n\nDynamic Power vs. Speed Plot\nA dynamic line chart (#plotCurrentGradient) that updates in real-time as the user changes the gradient or windSpeed sliders. It plots the different power components and the total power as a function of speed (from 0 to 50 km/h), clearly illustrating how each component scales with speed for the selected gradient.\n\n\nFixed Gradient Plots\nA set of three static line charts (.fixed-plots-container) that show the Power vs. Speed relationship for three fixed gradients: -5% (downhill), 0% (flat), and +5% (uphill). These serve as a stable reference for comparison, helping the user understand the profound impact of gradient on the power-speed relationship.\n\n\nCourse Calculators\nTwo distinct calculator modules allow for more advanced analysis:\n\nManual Course Calculator: A simple form where the user inputs a course length, target time, and average gradient. The app calculates the average speed and then uses the core physics model to determine the single, constant average power required to meet that target. This is a non-iterative, direct calculation.\nUploaded Profile Calculator: A more advanced tool that requires the user to upload a .csv file detailing a course profile (format: segment_length_in_meters,gradient_in_percent). The user also provides a target time. The application then uses a sophisticated iterative solver (detailed in Section 4) to find the constant power the rider would need to maintain throughout the entire variable-gradient course to finish in the specified time.",
    "crumbs": [
      "Cycling Power Calculator"
    ]
  },
  {
    "objectID": "Cycling_Forces.html#core-logic-physics-model",
    "href": "Cycling_Forces.html#core-logic-physics-model",
    "title": "Cycling Power Calculator",
    "section": "3. Core Logic & Physics Model",
    "text": "3. Core Logic & Physics Model\nThe application’s calculations are based on the model presented by Martin et al. (1998). The central function, calculatePowerComponents(), computes the various resistive forces and the power required to overcome them.\nThe total power required at the pedals (\\(P_{TOT}\\)) is the sum of the powers needed to overcome all resistive forces, divided by the efficiency of the drivetrain (\\(E_c\\)). \\[ P_{TOT} = \\frac{P_{NET}}{E_c} = \\frac{P_{AT} + P_{RR} + P_{PE} + P_{WB}}{E_c} \\] Where:\n\n\\(P_{NET}\\) is the net power required at the wheel-road interface.\n\\(E_c\\) is the drivetrain efficiency, modeled as a constant 0.97698.\nThe individual power components are: Aerodynamic (\\(P_{AT}\\)), Rolling Resistance (\\(P_{RR}\\)), Potential Energy / Gravity (\\(P_{PE}\\)), and Wheel Bearing friction (\\(P_{WB}\\)).\n\n\n3.1. Aerodynamic Power (\\(P_{AT}\\))\nThis is the power to overcome air resistance. It is highly dependent on the speed of the air relative to the cyclist (\\(V_a\\)).\n\nRelative Air Velocity: \\(V_a = V_g + V_w\\) (where \\(V_g\\) is ground speed and \\(V_w\\) is wind speed; a headwind is negative).\nAerodynamic Drag Force (\\(F_D\\)): \\(F_D = \\frac{1}{2} \\rho (C_d A + F_w) V_a^2 \\cdot \\text{sign}(V_a)\\)\n\n\\(\\rho\\) is air density.\n\\(C_d A\\) is the drag area from the slider.\n\\(F_w\\) is an additional drag factor for the wheels, modeled as a constant 0.0044.\n\nAerodynamic Power: \\(P_{AT} = F_D \\cdot V_g\\)\n\nNote that power is force multiplied by ground speed, not air speed. This correctly models the power needed to advance along the road against the drag force. In no-wind conditions (\\(V_a \\approx V_g\\)), this leads to the classic cubic relationship \\(P_{AT} \\propto V_g^3\\).\n\n\n\n\n3.2. Rolling Resistance Power (\\(P_{RR}\\))\nThis is the power to overcome friction between the tires and the road.\n\nRolling Resistance Force (\\(F_{RR}\\)): \\(F_{RR} = C_{rr} m_T g \\cos(\\alpha)\\)\n\n\\(C_{rr}\\) is the coefficient of rolling resistance from the slider.\n\\(m_T\\) is the total mass (rider + bike).\n\\(g\\) is the acceleration due to gravity (9.81 m/s²).\n\\(\\alpha = \\arctan(G_R)\\) is the road angle, where \\(G_R\\) is the gradient. The cosine term accounts for the slight reduction in normal force on a slope.\n\nRolling Resistance Power: \\(P_{RR} = F_{RR} \\cdot V_g\\). This is a linear relationship with speed.\n\n\n\n3.3. Potential Energy Power (\\(P_{PE}\\))\nThis is the power required to lift the system’s mass against gravity (or the power gained from gravity on a descent).\n\nGravitational Force (\\(F_G\\)): \\(F_G = m_T g \\sin(\\alpha)\\)\nPotential Energy Power: \\(P_{PE} = F_G \\cdot V_g\\). This power is positive on an incline and negative on a decline.\n\n\n\n3.4. Mechanical Losses Power (\\(P_{mech}\\))\nThis group includes losses in the drivetrain and wheel bearings.\n\nWheel Bearing Power (\\(P_{WB}\\)): The model uses an empirical formula from the paper: \\(P_{WB} = V_g \\cdot (91 + 8.7 \\cdot V_g) \\cdot 0.001\\).\nChain Friction Power (\\(P_C\\)): This is calculated as the difference between the power at the pedals and the net power at the wheel: \\(P_C = P_{TOT} - P_{NET}\\).\nTotal Mechanical Loss Displayed: \\(P_{mech} = P_{WB} + P_C\\).",
    "crumbs": [
      "Cycling Power Calculator"
    ]
  },
  {
    "objectID": "Cycling_Forces.html#algorithmic-processes-the-profile-power-solver",
    "href": "Cycling_Forces.html#algorithmic-processes-the-profile-power-solver",
    "title": "Cycling Power Calculator",
    "section": "4. Algorithmic Processes: The Profile Power Solver",
    "text": "4. Algorithmic Processes: The Profile Power Solver\nThe most computationally complex feature of the application is the Uploaded Profile Calculator. Its goal is to find the single, constant power output (\\(P_{const}\\)) that allows a rider to complete a course with a variable-gradient profile in a specified target_time. This requires solving the physics equations “in reverse” and involves a nested-loop solver.\n\n4.1. The Outer Loop: Bisection Search for Power\nThe top-level function solvePowerForTime() is responsible for finding the correct \\(P_{const}\\). Since there is no direct algebraic solution for power given a total time over a variable course, the algorithm employs a bisection search, an efficient root-finding algorithm.\n\nDefine the Function: The algorithm seeks the root of the function \\(f(P) = \\text{calculateTimeForProfile}(P) - \\text{target\\_time}\\). The goal is to find a power \\(P\\) where \\(f(P) = 0\\).\nEstablish a Bracket: It starts with a wide bracket of possible power values, low_power = 0 and high_power = 1500 W.\nIterate: For a fixed number of iterations (bisectionIterations = 20):\n\nCalculate the midpoint power: mid_power = (low_power + high_power) / 2.\nCalculate the total time it would take to complete the profile at mid_power by calling the inner-loop function, calculateTimeForProfile(mid_power, ...).\nCompare and Narrow:\n\nIf the calculated_time is greater than the target_time, it means mid_power was too low. The correct power must be in the upper half of the bracket, so it sets low_power = mid_power.\nIf the calculated_time is less than the target_time, it means mid_power was too high. It sets high_power = mid_power.\n\n\nResult: After 20 iterations, the [low_power, high_power] bracket is extremely narrow, and mid_power is a very close approximation of the required constant power.\n\n\n\n4.2. The Inner Loop: Iterative Solver for Speed\nThe bisection search relies on the calculateTimeForProfile() function. This function, in turn, must calculate the rider’s speed on each individual segment of the course, given the constant power output \\(P_{const}\\) and that segment’s specific gradient.\nThe function solveSpeedForPower() is used for this. The relationship between power and speed is a complex polynomial equation that cannot be solved algebraically for speed (\\(V_g\\)). Therefore, an iterative numerical solver is used.\n\nInitial Guess: Start with an initial guess for speed, Vg = 5.0 m/s.\nIterate: For a fixed number of iterations (solverIterations = 15):\n\nCalculate Power at Guess: Using the current speed guess Vg, calculate the resulting net power (calculated_pnet) using the forward calculatePowerComponents() function.\nCalculate Error: Find the difference between the target net power (target_pnet = P_const * Ec) and the calculated_pnet.\nAdjust Guess: Adjust the speed guess Vg based on the error. The adjustment is scaled by a factor related to the derivative of the power-speed curve to improve convergence (similar to a Newton-Raphson step): Vg += error * (Vg / (3 * calculated_pnet)).\nCheck for Convergence: If the absolute error is very small (&lt; 0.1 W), the loop terminates early as a solution has been found.\n\nReturn Speed: After the iterations, the final Vg is the calculated speed for that segment.\n\nThis nested solver structure allows the application to accurately and efficiently solve a complex, real-world physics problem that lacks a simple closed-form solution.",
    "crumbs": [
      "Cycling Power Calculator"
    ]
  },
  {
    "objectID": "index_Cycling_Apps.html",
    "href": "index_Cycling_Apps.html",
    "title": "Cycling Apps",
    "section": "",
    "text": "…."
  },
  {
    "objectID": "Metabolic_Model_Apps/Metabolic_Profile.html",
    "href": "Metabolic_Model_Apps/Metabolic_Profile.html",
    "title": "Metabolic Profile",
    "section": "",
    "text": "Fullscreen-Link: Metabolic Profile App\nDownload Derek Gee’s Full Giro 2025 Power Profile and upload it directly into the app for analysis",
    "crumbs": [
      "Metabolic Model Apps",
      "Metabolic Profile"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Metabolic_Profile.html#core-concepts-the-union-of-two-model-worlds",
    "href": "Metabolic_Model_Apps/Metabolic_Profile.html#core-concepts-the-union-of-two-model-worlds",
    "title": "Metabolic Profile",
    "section": "Core Concepts: The Union of Two Model Worlds",
    "text": "Core Concepts: The Union of Two Model Worlds\nThe application’s strength lies in its ability to bridge the gap between two complementary modeling approaches:\n\nThe Metabolic Model: This “bottom-up” model simulates an athlete’s physiological state based on fundamental parameters. It calculates steady-state oxygen uptake, lactate production and clearance rates, and substrate utilization to predict key metabolic thresholds like the Maximal Lactate Steady State (MLSS) and the point of maximal fat oxidation (FATmax). This model answers the question: “Given this athlete’s specific engine characteristics, what are their metabolic responses at various intensities?”\nThe Power-Duration (PD) Model: This “top-down” approach characterizes an athlete’s performance capabilities based on their actual maximal efforts. By fitting a mathematical curve to these data points, it can interpolate or extrapolate the maximal sustainable power for any duration and derive parameters like Critical Power (CP) and W’ (anaerobic work capacity). This model answers the question: “Based on their performances, what are this athlete’s functional threshold and anaerobic capacity?”\n\nThe app not only presents these models side-by-side but also provides tools to link them—for instance, by estimating \\(\\dot{V}O_{2,max}\\) from the PD model or by fitting a metabolic parameter (like \\(vLa_{max}\\)) to align the predicted MLSS with the PD-derived Critical Power.",
    "crumbs": [
      "Metabolic Model Apps",
      "Metabolic Profile"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Metabolic_Profile.html#the-sidebar-the-control-center",
    "href": "Metabolic_Model_Apps/Metabolic_Profile.html#the-sidebar-the-control-center",
    "title": "Metabolic Profile",
    "section": "The Sidebar: The Control Center",
    "text": "The Sidebar: The Control Center\nThe sidebar is the primary interface for controlling all model parameters and settings, logically organized into tabs.\n\nTab 1: Settings & Profile\nThis is the main tab for defining the athlete’s profile and configuring the underlying models.\n\nAthlete & Profile Management\nThis section allows for the creation, selection, and management of athlete profiles.\n\nAthlete Profile Dropdown: Select from a list of pre-defined example profiles (e.g., “T. Pogačar”, …) or custom profiles that have been added or imported. Selecting a profile loads all its associated physiological parameters and power data.\nImport/Export/Add Profile:\n\nImport Profile: Loads a complete athlete profile from a local .json file. The app intelligently handles missing data by applying sensible defaults or calculating parameters where possible (e.g., calculating \\(\\dot{V}O_{2,Base}\\) from anthropometrics if it’s not in the file).\nExport Profile: Saves the currently displayed custom profile to a .json file. This includes all settings, physiological parameters, and power data points. Note: Pre-defined athlete profiles are protected and cannot be exported.\nAdd Profile: Prompts the user for a name and creates a new, blank profile with default ‘Well-Trained’ settings, ready for customization.\n\nEnable Comparison Mode: This toggle switches the entire application into a multi-profile comparison view (see Tab 3).\nExperience Level Presets: These buttons (Pro, Well-Trained, Beginner) provide a quick way to apply typical metabolic settings. They primarily adjust the Cost of Exercise (CE) and the duration used for \\(\\dot{V}O_{2,max}\\) estimation, reflecting known differences in efficiency and fatigue resistance between athlete populations.\n\nPro: CE = 11.5 ml·min⁻¹·W⁻¹, \\(\\dot{V}O_{2,max}\\) Calc. Duration = 6:00 min\nWell-Trained: CE = 11.7 ml·min⁻¹·W⁻¹, \\(\\dot{V}O_{2,max}\\) Calc. Duration = 4:00 min\nBeginner: CE = 11.9 ml·min⁻¹·W⁻¹, \\(\\dot{V}O_{2,max}\\) Calc. Duration = 3:30 min\n\n\n\n\nPower-Duration Modeling\nThis crucial section configures how the athlete’s performance data is modeled.\n\nPower-Duration Model (Dropdown): Selects the mathematical model used to fit the power data points.\n\n2-Parameter CP (Hyperbolic): The classic model where power is the sum of a sustainable component (CP) and an unsustainable component (W’) that depletes over time (Monod & Scherrer, 1965). \\[ P(t) = CP + \\frac{W'}{t} \\]\n\nPros: Well-established; the parameters are physiologically interpretable (CP as a metabolic threshold, W’ as anaerobic work capacity).\nCons: Unrealistic for very short durations (predicts infinite power as t→0) and very long durations (predicts no fatigue below CP).\nData: Best suited for efforts in the “severe” intensity domain, typically from 2 to 20 minutes. Requires 3-5 reliable data points for a robust fit (Leo et al., 2022).\n\nOmni-Domain (OmPD): A 4-parameter extension of the 2P-CP model, designed for a more realistic fit across a wider range of durations, including prolonged endurance (Puchowicz et al., 2020). It adds a maximal power parameter (\\(P_{max}\\)) to anchor the short end of the curve and a fatigue parameter (A) to model the performance decline during very long efforts. \\[ P(t) =\n\\begin{cases}\n\\frac{W'_{\\text{eff}}(t)}{t} + CP & \\text{if } t \\le 1800s \\\\\n\\frac{W'_{\\text{eff}}(t)}{t} + CP - A \\cdot \\ln(\\frac{t}{1800}) & \\text{if } t &gt; 1800s\n\\end{cases}\n\\] Where \\(W'_{\\text{eff}}(t) = W' \\cdot (1 - e^{-t/\\tau})\\) and \\(\\tau = W' / (P_{max} - CP)\\).\n\nPros: Aims to model the entire power curve, from sprints to ultra-endurance.\nCons: More complex; requires more data points (≥4, including efforts &gt;30 min) for a stable fit.\nVirtual Points: To improve stability, the app automatically adds a virtual 20s data point (based on the “Best 20s Avg. Power” input) if no real data exists in the 1-35s range when this model is selected.\n\nPower-Law: A simple, robust 2-parameter model where power is a power function of time. \\[ P(t) = S \\cdot t^{E-1} \\]\n\nPros: Often provides an excellent mathematical fit across all durations with as few as two data points.\nCons: The parameters (S and E) are less directly interpretable as physiological thresholds compared to CP and W’.\n\n\nAdvanced Model Options (Toggle): Hides or shows more detailed controls for fine-tuning the model fitting process.\n\nW’max Constraint (Slider): (Affects 2P-CP and OmPD models) Sets a physiological upper limit on the calculated W’ value (in kJ·kg⁻¹), preventing unrealistically high W’ estimates, especially with sparse or noisy data. The tooltip provides typical ranges for different athlete types (e.g., Climbers ~0.20 kJ/kg, Sprinters &gt;0.40 kJ/kg).\nFitting Time Range (Dual-handle Slider): Allows the user to manually select the specific duration range of data points to be included in the model fitting process. This is useful for excluding outliers or focusing the fit on a specific physiological domain (e.g., the severe domain for a more accurate CP estimate).\nFitting Method (Dropdown): Determines the mathematical error minimization strategy for non-linear models.\n\nStandard (SSE): Minimizes the sum of squared errors. Good for balanced data but can be dominated by high-power sprint values.\nWeighted (by Duration): Gives more weight to longer-duration efforts, improving the stability and accuracy of the CP estimate.\nRelative Error (%): Minimizes percentage error, balancing the influence of high-power sprints and lower-power endurance efforts.\n\nAdd/Control 1s Virtual Pmax (Toggle & Slider): When enabled, this adds a virtual 1-second data point to the fitting process. The slider sets its power value. This is a powerful tool for anchoring the high end of the power curve for all models, improving the fit for very short durations.\n\n\n\n\nMetabolic Profile Setup (Mader Model)\nThis is the core of the metabolic modeling, where the athlete’s “engine” is defined.\n\nOxygen Demand Settings: Defines the Power-\\(\\dot{V}O_2\\) relationship.\n\nCurvilinear CE relationship (Toggle): Switches between a linear model and a more physiologically nuanced quadratic model for \\(\\dot{V}O_2\\) demand.\n\nLinear Model: \\(\\dot{V}O_{2,SS} = CE \\cdot P + \\dot{V}O_{2,Base}\\). A constant oxygen cost per Watt.\nCurvilinear Model: \\(\\dot{V}O_{2,SS} = a \\cdot P^2 + CE_{Start} \\cdot P + \\dot{V}O_{2,Base}\\). Models the decrease in efficiency at higher intensities. The curvature parameter ‘a’ is automatically calculated to ensure the slope at \\(\\dot{V}O_{2,max}\\) matches the user-defined \\(CE_{Target}\\).\n\nEfficiency Display (ηgross, ηnet, Δη): This area displays three key, dynamically calculated efficiency metrics.\n\nGross Efficiency (ηgross): Ratio of mechanical power output to total metabolic energy expenditure.\nNet Efficiency (ηnet): Ratio of mechanical power output to metabolic energy expenditure above resting levels.\nDelta Efficiency (Δη): Efficiency of performing additional mechanical work, calculated from the Cost of Exercise (CE).\n\n\nPhysiological Inputs: The sliders for setting the athlete’s core parameters.\n\n\\(\\dot{V}O_{2,max}\\) (Slider & Auto-Calculation): Maximal oxygen uptake. Can be set manually or automatically calculated from the power profile using one of three methods:\n\nSitko et al. (2022) formula: A regression equation based on 5-minute maximal power. \\[ \\dot{V}O_{2,max,rel} = 16.6 + (8.87 \\cdot P_{max,5min,rel}) \\]\nCE-based formula: Estimates \\(\\dot{V}O_{2,max}\\) from the oxygen demand of a maximal effort of a user-defined duration (set via the “Duration for \\(\\dot{V}O_{2,max}\\) Calc” slider). \\[ \\dot{V}O_{2,max,abs} = (P_{max,duration,abs} \\cdot CE) + \\dot{V}O_{2,Base} \\]\nAverage: Averages the results of the Sitko et al. (2022) and CE-based methods.\n\nvLamax (Slider & Auto-Calculation): This parameter represents the maximal rate of lactate production, a key indicator of an athlete’s maximal glycolytic capacity. It can be set manually via the slider or automatically estimated using the “Estimate vLamax from 20s Power” feature. This estimation tool leverages a 20-second maximal sprint power value, a practical field-based proxy for assessing glycolytically dominant power output. The app implements regression equations adapted from research by Clark and Macdermid to derive \\(vLa_{max}\\) from this power input (B. J. R. Clark, 2021; B. Clark & Macdermid, 2025). Users can choose from three estimation methods via a dropdown menu:\n\nMethod: Absolute (W only): This method uses the absolute 20-second average power (\\(P_{20s, abs}\\) in Watts) as the sole predictor. The formula implemented is: \\[ vLa_{max} = 0.062773 + (0.000483 \\cdot P_{20s, abs}) \\] This approach is useful when comparing athletes or tests where absolute power output is the primary metric of interest, independent of body mass.\n\n\n\nMethod: Relative (W/kg only): This method uses the mass-relative 20-second average power (\\(P_{20s, rel}\\) in W·kg⁻¹), normalizing for the athlete’s body mass. The formula is: \\[ vLa_{max} = -0.402955 + (0.071581 \\cdot P_{20s, rel}) \\] This approach is often preferred for comparing the glycolytic capacity of athletes of different sizes, as it accounts for the influence of body mass on power production.\nMethod: Average (W & W/kg) (Default): This method calculates \\(vLa_{max}\\) using both the absolute and relative power formulas and then takes the average of the two results. This hybrid approach aims to balance the perspectives of absolute power output and mass-relative capacity, potentially providing a more robust estimate across a wider range of athlete types. \\[ vLa_{max, final} = \\frac{vLa_{max, abs} + vLa_{max, rel}}{2} \\] The “Best 20s Avg. Power” slider allows the user to input the power value for these calculations, and pressing the “Estimate” button applies the selected formula, updates the main \\(vLa_{max}\\) slider, and triggers a full recalculation of the metabolic profile. This feature provides a valuable, non-invasive method for estimating a key anaerobic parameter from a simple, repeatable performance test.\n\n\nFit Parameter to Power Profile (Tool): A powerful integration feature. It algorithmically adjusts one metabolic parameter (\\(\\dot{V}O_{2,max}\\), \\(vLa_{max}\\), or CE) to make the Mader model’s predicted MLSS power match 95% of the Critical Power (CP) derived from the 2-Parameter PD model. This provides a physiologically plausible way to anchor the metabolic model to real-world performance data.\n\n\n\n\nSubstrate Utilization\n\nShow Substrate Utilization (Toggle): Enables the modeling and visualization of fuel use (carbohydrates vs. fats).\nModel Basis: The app calculates the percentage contribution of carbohydrates based on the ratio of lactate production to lactate oxidation (\\(vLa_{SS} / vLa_{ox}\\)). As intensity rises, this ratio increases, reflecting a shift towards CHO metabolism. Fat utilization is the remainder. This creates a self-consistent system where the predicted substrate mix determines the Respiratory Quotient (RQ), which in turn determines the precise caloric equivalent of oxygen used for all efficiency calculations.\n\n\n\n\nTab 2: Power Data Points\nA simple interface for managing the athlete’s performance data. Users can input a label, power (in W or W·kg⁻¹, depending on the global unit setting), and duration for their maximal efforts. These points form the basis for the power-duration model fitting.\n\n\nTab 3: Compare\nWhen “Enable Comparison Mode” is checked, this tab becomes active, transforming the app into a powerful multi-profile analysis tool.\n\nProfile Selection: Users can select multiple profiles to compare simultaneously.\nMirrored Settings: The tab contains an independent set of controls for the Power-Duration model, allowing users to apply a consistent fitting methodology (e.g., same model, same fitting range) to all selected profiles for a fair comparison.\nEtalon Profile Conversion: A unique feature that converts all athlete profiles to a standardized “Etalon” (60 kg rider, 7.2 kg bike) by using a physics model to calculate the power this standard rider would need to produce to match the actual athlete’s speed on a given gradient. This normalizes for differences in body mass and allows for a more direct comparison of climbing performance.",
    "crumbs": [
      "Metabolic Model Apps",
      "Metabolic Profile"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Metabolic_Profile.html#the-main-content-area-visualizations-outputs",
    "href": "Metabolic_Model_Apps/Metabolic_Profile.html#the-main-content-area-visualizations-outputs",
    "title": "Metabolic Profile",
    "section": "The Main Content Area: Visualizations & Outputs",
    "text": "The Main Content Area: Visualizations & Outputs\nThis is where the results of the models are displayed through a series of interconnected plots and tables.\n\nPower-Duration Profile (PDP) Plot\nThis plot visualizes the athlete’s performance data and the fitted PD model.\n\nData Points: Plotted as markers. Points used in the fit are solid, while unused points are marked with an ‘x’. Virtual points are shown as stars. Markers are color-coded based on their deviation from the fitted model line, providing an instant visual cue for how well the model represents each effort.\nModel Curve: The selected PD model (2P-CP, Power-Law, or OmPD) is drawn as a solid line through the range of the fitted data points and as a dashed line where it is extrapolated.\nAnnotations: Key parameters from the fitted model (e.g., CP, W’, S, E, R²) and the resulting V̇O₂max estimations are displayed directly on the plot.\n\n\n\nMetabolic Profile (Mader Model) Plot\nThis plot illustrates the steady-state metabolic responses based on the defined physiological profile.\n\nAxes: Power (X-axis), \\(\\dot{V}O_2\\) (left Y-axis), and Lactate/Metabolic Rates (right Y-axis). A third Y-axis for absolute substrate rates appears if enabled.\nTraces: Displays key curves like \\(\\dot{V}O_{2,SS}\\), lactate production (\\(vLa_{SS}\\)), lactate oxidation (\\(vLa_{ox}\\)), and the resulting Pyruvate Deficit (PD).\nAnnotations: Vertical lines and text mark the crucial metabolic thresholds of FATmax (power at maximal pyruvate deficit) and MLSS (power where PD is zero).\n\n\n\nSubstrate Utilization Plot\nThis plot, visible when enabled, shows the relative contribution of carbohydrates and fats to total energy expenditure across the power spectrum, clearly visualizing the “substrate crossover” point.\n\n\nKey Metrics & Radar Chart\nThis section in the bottom row provides a summary and a powerful comparative visualization.\n\nValues Container: A numerical summary of the key metabolic parameters (Power, \\(\\dot{V}O_2\\), Substrate Use, Efficiency) at the FATmax and MLSS intensities.\nRadar Chart: A heptagonal plot comparing the athlete’s modeled power at seven key durations (5s, 30s, 1m, 3m, 5m, 20m, 60m) against normative data. The outer ring (100%) represents the 90th percentile of professional cyclists (Mateo-March et al., 2022), while the center (0%) represents an untrained individual (Allen & Coggan, 2010). This provides an at-a-glance view of the athlete’s strengths and weaknesses relative to established benchmarks.\n\n\n\nTraining Zones Tables\nThe app generates two detailed tables to guide training prescription.\n\nTraining Zones (7 Zone Model): A classic 7-zone table where power zones are defined as percentages of the Mader-derived MLSS. For each zone, it provides the power range (in %MLSS and absolute Watts), the corresponding heart rate range (based on %HRmax), and the estimated carbohydrate and fat utilization rates (in g/h).\nSpecific Training Areas: This table provides more targeted training recommendations for key physiological adaptations. It defines specific interval and rest power targets for workouts aimed at improving FATmax, Lactate Clearance, and \\(\\dot{V}O_{2,max}\\) (via intermittent exercise).\n\n\n\nComparison Results (Visible in Compare Mode)\nWhen in comparison mode, the main content area is replaced by a detailed results table and a combined PDP plot.\n\nComparison Table: A comprehensive table listing key metabolic and performance metrics for each selected profile, allowing for direct quantitative comparison. Metrics include \\(\\dot{V}O_{2,max}\\), \\(vLa_{max}\\), Pmax at various durations, CP, MLSS, FATmax, and a calculated “Compound Score” (\\(P_{5min,abs} \\times P_{5min,wkg}\\)) for an integrated performance measure. The table is sortable by any column.\nModel Details: Below the table, a summary of the fitted model parameters and the mathematical formula is provided for each profile.\nCombined PDP Plot: All selected profiles’ data points and fitted model curves are plotted on a single graph, with each profile assigned a distinct color for clear visual comparison.",
    "crumbs": [
      "Metabolic Model Apps",
      "Metabolic Profile"
    ]
  },
  {
    "objectID": "Cycling_Apps/Cycling_Forces.html",
    "href": "Cycling_Apps/Cycling_Forces.html",
    "title": "Cycling Forces",
    "section": "",
    "text": "Fullscreen Link: Cycling Power Calculator",
    "crumbs": [
      "Cycling Apps",
      "Cycling Forces"
    ]
  },
  {
    "objectID": "Cycling_Apps/Cycling_Forces.html#introduction",
    "href": "Cycling_Apps/Cycling_Forces.html#introduction",
    "title": "Cycling Forces",
    "section": "1. Introduction",
    "text": "1. Introduction\nThe Cycling Power & Forces Calculator is an interactive, web-based educational and planning tool designed for cyclists, coaches, and sports scientists. It provides a real-time, physics-based simulation of the power required to cycle under a wide variety of conditions. The application’s core is a detailed physics model based on the well-established research paper by Martin et al. (1998), “Validation of a mathematical model for road cycling power.”\nThe primary functions of the application are:\n\nInteractive Exploration: Users can manipulate variables such as speed, gradient, mass, and aerodynamic profile to instantly see the effect on required power and its constituent components (aerodynamic drag, rolling resistance, gravity).\nData Visualization: The tool employs a suite of dynamic charts to visually represent how different resistive forces contribute to the total power requirement and how these relationships change with speed and gradient.\nCourse Simulation: The application includes two calculators that allow users to model performance over specific courses: one for simple, constant-gradient courses, and a more advanced one that can process a detailed course profile from a CSV file to determine the constant power needed to achieve a target time.\nIn-depth Education: The user interface is augmented with extensive explanatory text, detailing the physical meaning of key parameters like the Coefficient of Rolling Resistance (\\(C_{rr}\\)) and the Aerodynamic Drag Area (\\(C_d A\\)), complete with real-world data and examples.\n\nThis document provides a comprehensive technical breakdown of the application’s user interface, underlying physics model, and key computational algorithms.",
    "crumbs": [
      "Cycling Apps",
      "Cycling Forces"
    ]
  },
  {
    "objectID": "Cycling_Apps/Cycling_Forces.html#uicomponent-breakdown",
    "href": "Cycling_Apps/Cycling_Forces.html#uicomponent-breakdown",
    "title": "Cycling Forces",
    "section": "2. UI/Component Breakdown",
    "text": "2. UI/Component Breakdown\nThe application is built with a two-pane layout: a sidebar for all user inputs and controls, and a main-content area for data visualization and output.\n\n2.1. The Sidebar: The Control Center\nThe sidebar contains all the interactive elements that define the simulation’s parameters. These are logically grouped into sections.\n\nRider & Bike Parameters\nThis group defines the mass of the system.\n\nRider Mass: A slider (#riderMass) to set the rider’s body mass in kilograms.\nBike Mass: A slider (#bikeMass) to set the bicycle’s mass in kilograms.\nTotal Mass (\\(m_T\\)): A read-only field (#totalMass) that automatically displays the sum of the rider and bike mass. This value is a critical input for calculating gravitational and rolling resistance forces.\n\n\n\nEnvironmental & Situational Parameters\nThis group defines the external conditions the cyclist is facing.\n\nSpeed: A slider (#velocity) that sets the cyclist’s ground speed (\\(V_g\\)) in km/h. This is a primary independent variable in most calculations.\nGradient: A slider (#gradient) to set the road gradient (\\(G_R\\)) as a percentage. It can be positive (uphill) or negative (downhill). This directly influences the power required to overcome (or be aided by) gravity.\nWind Speed: A slider (#windSpeed) to set the speed of the wind (\\(V_w\\)) in km/h. Positive values represent a tailwind (assisting the rider), while negative values represent a headwind (opposing the rider). This is used to calculate the effective air velocity (\\(V_a\\)) relative to the rider.\n\n\n\nTechnical & Aerodynamic Parameters\nThis group defines the key coefficients that govern resistive forces. The application provides detailed in-app explanations for these complex parameters.\n\nDrag Area (\\(C_d A\\)): A slider (#cdA) to set the product of the coefficient of drag (\\(C_d\\)) and the frontal area (\\(A\\)). This single value represents the overall aerodynamic profile of the rider and bike system. The in-app documentation provides typical value ranges for different riding positions and equipment levels, from an upright commuter to a fully optimized time-trialist.\nRolling Resistance (\\(C_{rr}\\)): A slider (#crr) to set the Coefficient of Rolling Resistance. This dimensionless value quantifies the friction between the tires and the road surface. The in-app documentation explains that this is a baseline value and provides typical ranges for different tire types (e.g., racing slicks vs. durable touring tires) and discusses influencing factors like temperature and road surface.\nAir Density (\\(\\rho\\)): A slider (#airDensity) to set the density of the air in kg/m³. This value is affected by temperature, altitude, and humidity. A default value for sea level standard conditions (1.225 kg/m³) is provided.\n\n\n\n\n2.2. The Main Content Area: Analysis & Visualization\nThis area displays the results of the calculations through numerical readouts and a series of charts.\n\nPower Overview\nA numerical summary box (.output-area) shows the calculated power values for the current sidebar settings:\n\nRequired Total Power (\\(P_{TOT}\\)): The total power the rider must produce at the pedals.\nPower per kg: The total power relative to the rider’s mass (W/kg).\nPower Components: A breakdown of the total power into its constituent parts: Aerodynamic Drag (\\(P_{AT}\\)), Rolling Resistance (\\(P_{RR}\\)), Potential Energy (\\(P_{PE}\\)), and Mechanical Losses (\\(P_{mech}\\)).\n\n\n\nPower Component Bar Chart\nA dynamic bar chart (#powerBarChart) that visually represents the breakdown of the power components from the Power Overview section. This provides an immediate understanding of which resistive force is dominant under the currently selected conditions.\n\n\nDynamic Power vs. Speed Plot\nA dynamic line chart (#plotCurrentGradient) that updates in real-time as the user changes the gradient or windSpeed sliders. It plots the different power components and the total power as a function of speed (from 0 to 50 km/h), clearly illustrating how each component scales with speed for the selected gradient.\n\n\nFixed Gradient Plots\nA set of three static line charts (.fixed-plots-container) that show the Power vs. Speed relationship for three fixed gradients: -5% (downhill), 0% (flat), and +5% (uphill). These serve as a stable reference for comparison, helping the user understand the profound impact of gradient on the power-speed relationship.\n\n\nCourse Calculators\nTwo distinct calculator modules allow for more advanced analysis:\n\nManual Course Calculator: A simple form where the user inputs a course length, target time, and average gradient. The app calculates the average speed and then uses the core physics model to determine the single, constant average power required to meet that target. This is a non-iterative, direct calculation.\nUploaded Profile Calculator: A more advanced tool that requires the user to upload a .csv file detailing a course profile (format: segment_length_in_meters,gradient_in_percent). The user also provides a target time. The application then uses a sophisticated iterative solver (detailed in Section 4) to find the constant power the rider would need to maintain throughout the entire variable-gradient course to finish in the specified time.",
    "crumbs": [
      "Cycling Apps",
      "Cycling Forces"
    ]
  },
  {
    "objectID": "Cycling_Apps/Cycling_Forces.html#core-logic-physics-model",
    "href": "Cycling_Apps/Cycling_Forces.html#core-logic-physics-model",
    "title": "Cycling Forces",
    "section": "3. Core Logic & Physics Model",
    "text": "3. Core Logic & Physics Model\nThe application’s calculations are based on the model presented by Martin et al. (1998). The central function, calculatePowerComponents(), computes the various resistive forces and the power required to overcome them.\nThe total power required at the pedals (\\(P_{TOT}\\)) is the sum of the powers needed to overcome all resistive forces, divided by the efficiency of the drivetrain (\\(E_c\\)). \\[ P_{TOT} = \\frac{P_{NET}}{E_c} = \\frac{P_{AT} + P_{RR} + P_{PE} + P_{WB}}{E_c} \\] Where:\n\n\\(P_{NET}\\) is the net power required at the wheel-road interface.\n\\(E_c\\) is the drivetrain efficiency, modeled as a constant 0.97698.\nThe individual power components are: Aerodynamic (\\(P_{AT}\\)), Rolling Resistance (\\(P_{RR}\\)), Potential Energy / Gravity (\\(P_{PE}\\)), and Wheel Bearing friction (\\(P_{WB}\\)).\n\n\n3.1. Aerodynamic Power (\\(P_{AT}\\))\nThis is the power to overcome air resistance. It is highly dependent on the speed of the air relative to the cyclist (\\(V_a\\)).\n\nRelative Air Velocity: \\(V_a = V_g + V_w\\) (where \\(V_g\\) is ground speed and \\(V_w\\) is wind speed; a headwind is negative).\nAerodynamic Drag Force (\\(F_D\\)): \\(F_D = \\frac{1}{2} \\rho (C_d A + F_w) V_a^2 \\cdot \\text{sign}(V_a)\\)\n\n\\(\\rho\\) is air density.\n\\(C_d A\\) is the drag area from the slider.\n\\(F_w\\) is an additional drag factor for the wheels, modeled as a constant 0.0044.\n\nAerodynamic Power: \\(P_{AT} = F_D \\cdot V_g\\)\n\nNote that power is force multiplied by ground speed, not air speed. This correctly models the power needed to advance along the road against the drag force. In no-wind conditions (\\(V_a \\approx V_g\\)), this leads to the classic cubic relationship \\(P_{AT} \\propto V_g^3\\).\n\n\n\n\n3.2. Rolling Resistance Power (\\(P_{RR}\\))\nThis is the power to overcome friction between the tires and the road.\n\nRolling Resistance Force (\\(F_{RR}\\)): \\(F_{RR} = C_{rr} m_T g \\cos(\\alpha)\\)\n\n\\(C_{rr}\\) is the coefficient of rolling resistance from the slider.\n\\(m_T\\) is the total mass (rider + bike).\n\\(g\\) is the acceleration due to gravity (9.81 m/s²).\n\\(\\alpha = \\arctan(G_R)\\) is the road angle, where \\(G_R\\) is the gradient. The cosine term accounts for the slight reduction in normal force on a slope.\n\nRolling Resistance Power: \\(P_{RR} = F_{RR} \\cdot V_g\\). This is a linear relationship with speed.\n\n\n\n3.3. Potential Energy Power (\\(P_{PE}\\))\nThis is the power required to lift the system’s mass against gravity (or the power gained from gravity on a descent).\n\nGravitational Force (\\(F_G\\)): \\(F_G = m_T g \\sin(\\alpha)\\)\nPotential Energy Power: \\(P_{PE} = F_G \\cdot V_g\\). This power is positive on an incline and negative on a decline.\n\n\n\n3.4. Mechanical Losses Power (\\(P_{mech}\\))\nThis group includes losses in the drivetrain and wheel bearings.\n\nWheel Bearing Power (\\(P_{WB}\\)): The model uses an empirical formula from the paper: \\(P_{WB} = V_g \\cdot (91 + 8.7 \\cdot V_g) \\cdot 0.001\\).\nChain Friction Power (\\(P_C\\)): This is calculated as the difference between the power at the pedals and the net power at the wheel: \\(P_C = P_{TOT} - P_{NET}\\).\nTotal Mechanical Loss Displayed: \\(P_{mech} = P_{WB} + P_C\\).",
    "crumbs": [
      "Cycling Apps",
      "Cycling Forces"
    ]
  },
  {
    "objectID": "Cycling_Apps/Cycling_Forces.html#algorithmic-processes-the-profile-power-solver",
    "href": "Cycling_Apps/Cycling_Forces.html#algorithmic-processes-the-profile-power-solver",
    "title": "Cycling Forces",
    "section": "4. Algorithmic Processes: The Profile Power Solver",
    "text": "4. Algorithmic Processes: The Profile Power Solver\nThe most computationally complex feature of the application is the Uploaded Profile Calculator. Its goal is to find the single, constant power output (\\(P_{const}\\)) that allows a rider to complete a course with a variable-gradient profile in a specified target_time. This requires solving the physics equations “in reverse” and involves a nested-loop solver.\n\n4.1. The Outer Loop: Bisection Search for Power\nThe top-level function solvePowerForTime() is responsible for finding the correct \\(P_{const}\\). Since there is no direct algebraic solution for power given a total time over a variable course, the algorithm employs a bisection search, an efficient root-finding algorithm.\n\nDefine the Function: The algorithm seeks the root of the function \\(f(P) = \\text{calculateTimeForProfile}(P) - \\text{target\\_time}\\). The goal is to find a power \\(P\\) where \\(f(P) = 0\\).\nEstablish a Bracket: It starts with a wide bracket of possible power values, low_power = 0 and high_power = 1500 W.\nIterate: For a fixed number of iterations (bisectionIterations = 20):\n\nCalculate the midpoint power: mid_power = (low_power + high_power) / 2.\nCalculate the total time it would take to complete the profile at mid_power by calling the inner-loop function, calculateTimeForProfile(mid_power, ...).\nCompare and Narrow:\n\nIf the calculated_time is greater than the target_time, it means mid_power was too low. The correct power must be in the upper half of the bracket, so it sets low_power = mid_power.\nIf the calculated_time is less than the target_time, it means mid_power was too high. It sets high_power = mid_power.\n\n\nResult: After 20 iterations, the [low_power, high_power] bracket is extremely narrow, and mid_power is a very close approximation of the required constant power.\n\n\n\n4.2. The Inner Loop: Iterative Solver for Speed\nThe bisection search relies on the calculateTimeForProfile() function. This function, in turn, must calculate the rider’s speed on each individual segment of the course, given the constant power output \\(P_{const}\\) and that segment’s specific gradient.\nThe function solveSpeedForPower() is used for this. The relationship between power and speed is a complex polynomial equation that cannot be solved algebraically for speed (\\(V_g\\)). Therefore, an iterative numerical solver is used.\n\nInitial Guess: Start with an initial guess for speed, Vg = 5.0 m/s.\nIterate: For a fixed number of iterations (solverIterations = 15):\n\nCalculate Power at Guess: Using the current speed guess Vg, calculate the resulting net power (calculated_pnet) using the forward calculatePowerComponents() function.\nCalculate Error: Find the difference between the target net power (target_pnet = P_const * Ec) and the calculated_pnet.\nAdjust Guess: Adjust the speed guess Vg based on the error. The adjustment is scaled by a factor related to the derivative of the power-speed curve to improve convergence (similar to a Newton-Raphson step): Vg += error * (Vg / (3 * calculated_pnet)).\nCheck for Convergence: If the absolute error is very small (&lt; 0.1 W), the loop terminates early as a solution has been found.\n\nReturn Speed: After the iterations, the final Vg is the calculated speed for that segment.\n\nThis nested solver structure allows the application to accurately and efficiently solve a complex, real-world physics problem that lacks a simple closed-form solution.",
    "crumbs": [
      "Cycling Apps",
      "Cycling Forces"
    ]
  },
  {
    "objectID": "Cycling_Apps/CdA_App.html",
    "href": "Cycling_Apps/CdA_App.html",
    "title": "CdA Calculator",
    "section": "",
    "text": "Fullscreen-Link: CdA Calculator",
    "crumbs": [
      "Cycling Apps",
      "CdA Calculator"
    ]
  },
  {
    "objectID": "Cycling_Apps/CdA_App.html#introduction",
    "href": "Cycling_Apps/CdA_App.html#introduction",
    "title": "CdA Calculator",
    "section": "Introduction",
    "text": "Introduction\nThe CdA Calculator is designed to perform aerodynamic analysis on ride data. Its primary purpose is to calculate a rider’s coefficient of aerodynamic drag area (\\(C_d A\\)) using a GPX file containing power, GPS, and elevation data. The application enriches this data with meteorological information such as wind and temperature. Most calculations are based on the established physics model described by Martin et al. (1998).\nThe tool operates in three distinct, sequential steps:\n\nParameter Input: The user provides a GPX file and sets key physical parameters like rider/bike mass and rolling resistance.\nCdA Analysis: The application processes the entire ride, filters for segments with stable conditions, calculates the instantaneous \\(C_d A\\) for each, and presents the average value along with detailed charts and a map visualization.\nPerformance Simulation: Using the average \\(C_d A\\) derived from the analysis, the tool simulates the power required for the entire ride, providing a model-vs-actual comparison to validate the results.\n\nThis process allows an athlete to get a robust, data-driven estimate of their aerodynamic profile from a real-world ride, bypassing the need for expensive wind tunnel or velodrome testing.\n\n\n\n\n\n\nDisclaimer\n\n\n\nThis application was developed primarily as an educational exercise to understand the methodology behind aerodynamic field testing. Given its quick and simple development in an attempt to mimic the functionality of its far more sophisticated namesake, it was therefore named ‘Shit’-myWindsock. It is a simplified implementation and is not a validated analysis tool. The results are highly sensitive to data quality and environmental conditions and should not be considered a substitute for, or directly comparable to, results from “myWindsock” or from wind tunnel testing.",
    "crumbs": [
      "Cycling Apps",
      "CdA Calculator"
    ]
  },
  {
    "objectID": "Cycling_Apps/CdA_App.html#the-main-interface",
    "href": "Cycling_Apps/CdA_App.html#the-main-interface",
    "title": "CdA Calculator",
    "section": "The Main Interface",
    "text": "The Main Interface\nThe application is built with a two-column layout for a clear, guided user experience.\n\nInput Sidebar (Left): This is the control panel. It houses all user inputs, parameters, and action buttons. It remains visible (position: sticky) so users can tweak parameters and see the results update in real-time in the main content area.\nMain Content (Right): This area is dedicated to displaying the results of the analysis, including summary statistics, interactive charts, and a route map. It is initially populated with a welcome message and dynamically filled with content as the analysis progresses.",
    "crumbs": [
      "Cycling Apps",
      "CdA Calculator"
    ]
  },
  {
    "objectID": "Cycling_Apps/CdA_App.html#part-1-the-sidebar-parameters-controls",
    "href": "Cycling_Apps/CdA_App.html#part-1-the-sidebar-parameters-controls",
    "title": "CdA Calculator",
    "section": "Part 1: The Sidebar (Parameters & Controls)",
    "text": "Part 1: The Sidebar (Parameters & Controls)\nThis section serves as the command center for the entire analysis.\n\nStep 1: Parameters\nThis is the initial data-gathering stage. All inputs here directly affect the physics calculations.\n\nUpload GPX File: The primary input for the application.\n\nFunctionality: The user clicks to select a .gpx file from their local system.\nRequirement: The GPX file must contain power data, typically found within &lt;extensions&gt; tags (e.g., &lt;power&gt; or &lt;gpxtpx:power&gt;). Files without power data will result in an error.\n\nRider Mass & Bike Mass (kg): These two values are summed to get the total system mass (\\(m_T\\)). This total mass is a critical input for calculating the power required to overcome gravity (\\(P_{PE}\\)) and changes in kinetic energy (\\(P_{KE}\\)).\nRolling Resistance (Crr): A dimensionless coefficient representing the friction between the tires and the road surface. This value is used to calculate the power lost to rolling resistance (\\(P_{RR}\\)). The default of 0.0040 is a reasonable estimate for good quality road tires on smooth asphalt.\nAir Density (ρ) (kg/m³): A critical parameter for calculating aerodynamic drag power (\\(P_{aero}\\)).\n\nAutomatic Calculation: Upon processing a GPX file, the application fetches historical weather data (temperature) and uses the elevation data from the GPX file to calculate a ride-averaged air density. This value automatically populates the slider.\nManual Override: The user can manually adjust this slider to override the calculated value or to perform “what-if” analyses for different conditions (e.g., sea level vs. altitude).\n\n\n\n\nAction Buttons\n\nAnalyze CdA: The primary action button. Kicking off the full analysis workflow: file parsing, weather fetching, data merging, and the initial \\(C_d A\\) calculation. A loader animation appears on the button during this process.\nRecalculate Analysis: This button replaces “Analyze CdA” after the first successful analysis. It allows the user to change the input parameters (e.g., Rider Mass, Crr) and re-run the \\(C_d A\\) calculation without re-fetching the GPX and weather data, providing a near-instant update to the results.\nStatus Area: A small panel below the buttons that provides real-time feedback on the analysis process (e.g., “1/3: Reading GPX file…”) or displays any errors that occur.",
    "crumbs": [
      "Cycling Apps",
      "CdA Calculator"
    ]
  },
  {
    "objectID": "Cycling_Apps/CdA_App.html#part-2-the-analysis-workflow-the-physics-engine",
    "href": "Cycling_Apps/CdA_App.html#part-2-the-analysis-workflow-the-physics-engine",
    "title": "CdA Calculator",
    "section": "Part 2: The Analysis Workflow (The Physics Engine)",
    "text": "Part 2: The Analysis Workflow (The Physics Engine)\nWhen the “Analyze CdA” button is clicked, a multi-stage computational process begins.\n\nStep A: Data Ingestion & Enrichment\n\nGPX Parsing: The selected GPX file is read as text and parsed using the browser’s DOMParser. The code iterates through all &lt;trkpt&gt; (trackpoint) elements, extracting latitude, longitude, elevation, timestamp, and crucially, the power value from the extension data.\nWeather Data Fetching: The application determines the ride’s date and geographical midpoint. It then makes an API call to the archive-api.open-meteo.com service to retrieve historical hourly weather data, specifically temperature_2m, windspeed_10m, and winddirection_10m.\nData Merging & Interpolation: This is a key step for accuracy. The raw, second-by-second GPX data is merged with the coarse, hourly weather data. For each trackpoint, the application performs a linear interpolation between the two closest hourly weather data points to estimate the precise temperature, wind speed, and wind direction for that exact moment in time.\n\nWind Direction: To correctly interpolate wind direction (avoiding the 360° to 0° wrap-around issue), the directions are first converted into vector components (x, y), which are then interpolated. The resulting vector is converted back to an angle.\n\nPer-Segment Calculation: The code calculates additional metrics for each segment (the space between two trackpoints), including ground speed (\\(V_g\\)), gradient (\\(Gr\\)), and bearing. It also calculates the air density (\\(\\rho\\)) for each segment using its specific elevation and the interpolated temperature.\n\n\n\nStep B: The Physics of \\(C_d A\\) Calculation\nWith a complete, enriched dataset, the app iterates through each segment to find the rider’s \\(C_d A\\).\n\nThe Governing Equation: The total power a cyclist produces (\\(P_{GPX}\\)) is used to overcome several forces. The relationship, accounting for drivetrain efficiency (\\(\\eta_{drive}\\)), is: \\(P_{GPX} \\cdot \\eta_{drive} = P_{aero} + P_{gravity} + P_{rolling} + P_{kinetic}\\)\nIsolating Aerodynamic Power: The application rearranges this equation to solve for the power used exclusively to overcome air resistance: \\(P_{aero} = (P_{GPX} \\cdot \\eta_{drive}) - (P_{gravity} + P_{rolling} + P_{kinetic})\\)\nSolving for \\(C_d A\\): The definition of aerodynamic power is \\(P_{aero} = 0.5 \\cdot \\rho \\cdot C_d A \\cdot V_a^2 \\cdot V_g\\), where \\(V_a\\) is airspeed and \\(V_g\\) is groundspeed. The app solves for \\(C_d A\\): \\(C_d A = \\frac{2 \\cdot P_{aero}}{\\rho \\cdot V_a^2 \\cdot V_g}\\)\n\nAirspeed (\\(V_a\\)): This is calculated as ground speed (\\(V_g\\)) plus the effective component of the wind (\\(V_{w\\_eff}\\)), which is the wind speed projected onto the rider’s direction of travel.\n\nCritical Data Filtering: This is the core of the method’s robustness. To ensure the calculation is only performed on clean, stable data, a strict set of filters is applied. A data point is discarded if any of the following are true:\n\nSpeed is outside the 5.5 m/s to 20 m/s range (to avoid slow, unsteady efforts or extreme downhills).\nPower is below 80 Watts (to avoid coasting or very low-power sections).\nGradient is steeper than +/- 15%.\nAcceleration exceeds +/- 0.8 m/s² (to filter out hard braking or sharp attacks).\nAvailable aerodynamic power (\\(P_{aero}\\)) is less than 20W.\nThe calculated \\(C_d A\\) is outside the physically plausible range of 0.15 to 0.5.\n\nAveraging: Only the data points that pass all filters are considered “valid”. The final “Average CdA” reported by the app is the arithmetic mean of the \\(C_d A\\) values from these valid points.",
    "crumbs": [
      "Cycling Apps",
      "CdA Calculator"
    ]
  },
  {
    "objectID": "Cycling_Apps/CdA_App.html#part-3-the-main-content-area-results-visualization",
    "href": "Cycling_Apps/CdA_App.html#part-3-the-main-content-area-results-visualization",
    "title": "CdA Calculator",
    "section": "Part 3: The Main Content Area (Results & Visualization)",
    "text": "Part 3: The Main Content Area (Results & Visualization)\nThis area presents the outcomes of the analysis in a comprehensive and interactive manner.\n\nStep 2: CdA Analysis (Measurement)\n\nSummary Cards: Four cards provide a high-level overview of the results from the filtered data:\n\nAverage CdA: The primary result of the analysis.\nAverage Power: The average power during the valid segments.\nAverage Speed: The average speed during the valid segments.\nValid Data Points: The number of data points that passed the filtering, shown as a fraction of the total ride data points.\n\nCdA Chart (cdaChart): An interactive time-series plot rendered with Chart.js, visualizing the valid segments of the ride.\n\nDatasets:\n\nCdA (m²): The calculated \\(C_d A\\) value for each valid point.\nAvg CdA: A dashed horizontal line showing the final average \\(C_d A\\).\nPower (W): The rider’s power output.\nSpeed (km/h): The rider’s speed.\n\nAxes: It uses a dual Y-axis configuration. The left axis is for \\(C_d A\\), and the right is for Power and Speed (speed is multiplied by 10 internally to be visible on the same scale).\nSmooth Chart Further Button: This button applies a moving average filter to the chart data, smoothing the lines to make trends easier to see. It can be clicked multiple times for increased smoothing.\n\nRoute with Wind Analysis (map): An interactive map rendered with Leaflet.js.\n\nRoute Polyline: The entire ride path is drawn on the map. The color of each segment is dynamically set based on the effective wind: green indicates a tailwind, yellow is a crosswind, and red indicates a headwind.\nWind Overlay: An animated layer of arrows flows across the map, indicating the average wind direction and speed for the ride. A static control in the top-right corner also displays the average wind speed and direction.\n\n\n\n\nStep 3: Performance Simulation (Model)\nThis section acts as a verification of the calculated \\(C_d A\\).\n\nFunctionality: After clicking the Simulate Full Ride with Avg. CdA button, the app uses the derived average \\(C_d A\\) to calculate the theoretical power required to match the rider’s actual speed at every point during the entire ride (not just the filtered segments).\nSimulation Chart (simulationChart): This chart compares the actual performance with the modeled performance.\n\nActual Power (GPX): The power data as recorded in the GPX file.\nModelled Power (calculated): The power predicted by the physics model using the calculated average \\(C_d A\\).\nInterpretation: A close match between the two lines suggests that the calculated \\(C_d A\\) is a reliable representation of the rider’s aerodynamic profile and that the rider maintained a consistent position throughout the ride. Significant deviations can indicate changes in position, drafting, or other factors not captured by the model. Both data series are smoothed for improved readability.",
    "crumbs": [
      "Cycling Apps",
      "CdA Calculator"
    ]
  },
  {
    "objectID": "Cycling_Apps/CdA_App.html#technical-appendix",
    "href": "Cycling_Apps/CdA_App.html#technical-appendix",
    "title": "CdA Calculator",
    "section": "Technical Appendix",
    "text": "Technical Appendix\n\nKey Constants:\n\nGravitational Acceleration (g): 9.80665 m/s²\nDrivetrain Efficiency (Ec): 0.977 (97.7%)\nSpecific Gas Constant for Dry Air (R_specific): 287.058 J/(kg·K)\n\nFormulas:\n\n\\(P_{RR} = C_{rr} \\cdot m_T \\cdot g \\cdot \\cos(\\arctan(Gr)) \\cdot V_g\\)\n\\(P_{PE} = m_T \\cdot g \\cdot \\sin(\\arctan(Gr)) \\cdot V_g\\)\n\\(P_{KE} = m_T \\cdot V_g \\cdot a\\) (where \\(a\\) is acceleration)\n\\(V_a = V_g + (V_w \\cdot \\cos(\\theta_{wind} - \\theta_{bearing}))\\)\n\nExternal Libraries:\n\nChart.js: For all data visualizations and charts.\nchartjs-adapter-date-fns: To enable time-series axes in Chart.js.\nLeaflet.js: For the interactive route map.\n\nData Sources:\n\nUser GPX File: For ride data (GPS, elevation, time, power).\nOpen-Meteo Historical Weather API: For temperature and wind data.",
    "crumbs": [
      "Cycling Apps",
      "CdA Calculator"
    ]
  },
  {
    "objectID": "index_Metabolic_Model_Apps.html",
    "href": "index_Metabolic_Model_Apps.html",
    "title": "Metabolic Model Apps",
    "section": "",
    "text": "…."
  },
  {
    "objectID": "Cycling_Apps/index_Cycling_Apps.html",
    "href": "Cycling_Apps/index_Cycling_Apps.html",
    "title": "Cycling Apps",
    "section": "",
    "text": "This section contains a pair of standalone applications focused on the fundamental physics of cycling. Unlike the interconnected metabolic modeling suite, these tools are designed for specific, isolated analyses of the forces a cyclist must overcome. Both apps are based on the established physics model described by Martin et al. (1998) but are applied to answer different questions.\n\nThe Cycling Forces Calculator\nThe Cycling Forces Calculator is an interactive educational tool designed to visualize and quantify the primary resistive forces in cycling. It allows users to manipulate key variables—such as speed, gradient, rider mass, and aerodynamic drag—and immediately see the impact on the required power output. The app provides a clear breakdown of how total power is distributed to overcome aerodynamic drag (PAT), rolling resistance (PRR), and changes in potential energy due to gravity (PPE), making it an excellent tool for exploring “what-if” scenarios.\n\n\nThe CdA Calculator\n\n\n\n\n\n\nDisclaimer for the CdA Calculator\n\n\n\nThis application was developed primarily as an educational exercise to understand the methodology behind aerodynamic field testing. Given its quick and simple development in an attempt to mimic the functionality of its far more sophisticated namesake, it was therefore named ‘Shit’-myWindsock. It is a simplified implementation and is not a validated analysis tool. The results are highly sensitive to data quality and environmental conditions and should not be considered a substitute for, or directly comparable to, results from “myWindsock” or from wind tunnel testing.\n\n\nThis application is an experimental tool that attempts to estimate a cyclist’s aerodynamic drag area (CdA) from a GPS activity file. By uploading a .gpx file containing power data, the app analyzes segments of the ride where conditions are relatively stable. It uses the ride data along with fetched historical weather data (wind and temperature) to reverse-engineer the CdA value that would best explain the recorded power output. The results provide an estimate of the user’s aerodynamic profile under real-world conditions.\n\n\n\n\n\n\n\n\nReferences\n\nMartin, J. C., Milliken, D. L., Cobb, J. E., McFadden, K. L., & Coggan, A. R. (1998). Validation of a Mathematical Model for Road Cycling Power. Journal of Applied Biomechanics, 14(3), 276–291. https://doi.org/10.1123/jab.14.3.276",
    "crumbs": [
      "Cycling Apps"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/index_Metabolic_Model_Apps.html",
    "href": "Metabolic_Model_Apps/index_Metabolic_Model_Apps.html",
    "title": "Metabolic Model Apps",
    "section": "",
    "text": "….",
    "crumbs": [
      "Metabolic Model Apps"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Power_Profile/Etalon_Calculator.html#core-concepts-deconstructing-cycling-power",
    "href": "Metabolic_Model_Apps/Power_Profile/Etalon_Calculator.html#core-concepts-deconstructing-cycling-power",
    "title": "Etalon Converter",
    "section": "Core Concepts: Deconstructing Cycling Power",
    "text": "Core Concepts: Deconstructing Cycling Power\nTo propel a bicycle, a rider must produce power to overcome a series of opposing physical forces. The application’s calculation engine is a sophisticated physics model that quantifies each of these forces to determine the total power required. This model is built upon the foundational work of researchers like Martin et al. (1998).\nThe primary forces modeled by the app are:\n\nGravitational Resistance (\\(P_{PE}\\)): The power required to lift the total mass of the rider and bike against gravity. This is a function of the system mass, the acceleration due to gravity (g), and the vertical speed, which is determined by the road gradient. It is the dominant force on steep climbs.\nAerodynamic Drag (\\(P_{AD}\\)): The power required to push through the air. This force is a function of air density (\\(\\rho\\)), the rider’s frontal area and shape (combined into the drag area coefficient, \\(C_d A\\)), and the relative air velocity. It is the dominant force on flat terrain and at high speeds.\nRolling Resistance (\\(P_{RR}\\)): The power lost due to the deformation of the tires against the road surface. This is a function of the total system mass, the road gradient (which affects the normal force), and the coefficient of rolling resistance (\\(C_{rr}\\)), which itself depends on tire type, pressure, and road surface.\nDrivetrain Frictional Losses (\\(P_{F}\\)): The power lost to friction within the chain, cogs, and bearings of the bicycle’s drivetrain. The app models this as a percentage of the total power transmitted.\n\nThe total power (\\(P_{Total}\\)) an athlete must produce at the pedals is the sum of these resistive powers, adjusted for drivetrain efficiency (\\(E_c\\)): \\[ P_{Total} = \\frac{P_{PE} + P_{AD} + P_{RR}}{E_c} \\] The application uses detailed equations, as described by Martin et al. (1998), to calculate each of these components precisely.\n\nWhy Etalon W/kg? - The Need for Standardization\nA simple watts-per-kilogram (W/kg) calculation, derived by dividing a rider’s power output by their body mass, is an incomplete metric for comparison and heavier riders have inherent advantages. For the same speed on a climb, a heavier rider requires a lower W/kg than a lighter rider. This is due to two main factors:\n\nBike Weight Ratio: The UCI-mandated minimum bike weight (6.8 kg) constitutes a smaller percentage of a heavier rider’s total system mass, reducing their “rider + bike” w/kg.\nAerodynamics: A heavier rider’s aerodynamic drag does not typically increase in direct proportion to their weight, often resulting in a superior power-to-drag-area ratio, which is beneficial at higher speeds and on shallower gradients.\n\nTo create a true “apples-to-apples” comparison, the application uses the Etalon standard. “Etalon” is French for “standard” or “benchmark.” The app standardizes all performances to a 60 kg rider on a 7.2 kg bike. The resulting “Etalon W/kg” is not the rider’s actual power output, but a standardized metric representing the performance level required of this benchmark rider to achieve the same speed. This allows for objective evaluation across athletes of all sizes.",
    "crumbs": [
      "Metabolic Model Apps",
      "Power Profile",
      "Etalon Converter"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Power_Profile/Etalon_Calculator.html#the-sidebar-the-control-center",
    "href": "Metabolic_Model_Apps/Power_Profile/Etalon_Calculator.html#the-sidebar-the-control-center",
    "title": "Etalon Converter",
    "section": "The Sidebar: The Control Center",
    "text": "The Sidebar: The Control Center\nThe sidebar is the primary interface for setting all model parameters and managing performance data.\n\nCalculation Mode & Tabs\n\nMode Switcher: A prominent toggle at the top allows the user to switch between the two primary calculation modes: Etalon → Real Power and Real Power → Etalon. Switching modes reconfigures the input fields and the results table accordingly.\nTabs: The sidebar is organized into two tabs:\n\nModel Parameters: For setting all rider, equipment, and environmental variables.\nPerformance Data: For inputting and managing the list of performances to be analyzed.\n\n\n\n\nTab 1: Model Parameters\nThis tab is for defining the physical context of the simulation.\n\nLoad Example Profile\n\nA dropdown menu allows users to instantly load pre-configured profiles, such as “Pogi’s 2024 Performances”. This populates all rider, equipment, and performance data fields, providing a powerful demonstration and a starting point for analysis.\n\n\n\nRider & Equipment\nThese sliders define the physical characteristics of the actual rider being analyzed.\n\nRider Mass (kg): The body mass of the specific athlete whose performance is being calculated or compared.\nBike & Gear Mass (kg): The total mass of the bicycle, clothing, helmet, shoes, water bottles, etc. The UCI minimum is 6.8 kg, but a realistic race-ready weight is often closer to 7.2 kg or more.\n\n\n\nEnvironmental & Mechanical Factors\nThese sliders allow for fine-tuning of the physical model to match specific conditions. Each includes an info icon with a tooltip providing typical physiological or real-world values.\n\nRolling Resistance (Crr): The Coefficient of Rolling Resistance. This dimensionless value quantifies the friction from the tires. Typical values range from 0.0025 for a fast track to 0.0050 for average road tires.\nAerodynamic Drag (CdA): The drag area (in m²), which is the product of the drag coefficient (\\(C_d\\)) and the frontal area (A). This is a critical determinant of speed on flats and shallow gradients. Typical values range from 0.200 m² for an elite time-trial position to 0.400 m² for an relatively upright, non-aerodynamic position.\nAir Density (\\(\\rho\\)): The density of the air (in kg/m³). This is highly dependent on altitude and temperature. Typically around ~1.225 kg/m³ at sea level, while at 1500m it drops to ~1.058 kg/m³. A lower air density reduces aerodynamic drag.\nDrivetrain Loss (%): The percentage of power lost to friction in the chain, pulleys, and bearings. Typically ranges from 1.5% for a perfectly maintained, top-tier drivetrain system to 5.0% for a more worn or dirty drivetrain.\n\n\n\n\nTab 2: Performance Data\nThis tab is for managing the list of climbs or performances to be analyzed.\n\nAdd & Compare Performance: The main input section for adding new data. The fields displayed here dynamically change based on the selected calculation mode.\n\nMode 1 (Etalon → Real): The user inputs the climb’s Label, Length (km), Elevation (m), a benchmark Etalon W/kg, and the Actual Time taken by the real rider.\nMode 2 (Real → Etalon): The user inputs the climb’s Label, Length (km), Elevation (m), and the rider’s Actual Power (W). The time is then calculated by the model.\n\nPerformance List: Displays a list of all added performances. Each can be removed individually.\nProfile Management:\n\nSave/Load Profile: Allows the user to save the current set of parameters and performances to a .json file for later use, or to load a previously saved profile.",
    "crumbs": [
      "Metabolic Model Apps",
      "Power Profile",
      "Etalon Converter"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Power_Profile/Etalon_Calculator.html#the-main-content-area-results-explanations",
    "href": "Metabolic_Model_Apps/Power_Profile/Etalon_Calculator.html#the-main-content-area-results-explanations",
    "title": "Etalon Converter",
    "section": "The Main Content Area: Results & Explanations",
    "text": "The Main Content Area: Results & Explanations\nThis area displays the detailed output of the calculations in a clear, tabular format and provides context for the results.\n\nResults Table\nThis is the primary output, presenting a detailed, sortable table with the results for each performance. The columns displayed change dynamically based on the selected calculation mode.\nMode: Etalon → Real Power This table is designed to answer: “Given a standard performance level (Etalon W/kg) and an actual time, what power did my rider really produce, and what factors influenced this?”\n\nLabel, Length, Elev., Gradient, Speed, VAM: Basic characteristics of the climb.\nAct. Time: The actual time the rider took.\nExp. Time: The expected time the Etalon rider would have taken to achieve the benchmark Etalon W/kg in windless conditions.\nTime Diff.: The difference between actual and expected time. A positive value (red) means the rider was slower than expected (indicating a headwind or other resistive force), while a negative value (green) means they were faster (indicating a tailwind).\nEff. Wind (m/s): This is the calculated constant headwind (positive value) or tailwind (negative value) that would be required in the physics model to account for the observed Time Difference.\nEtalon W/kg: The benchmark performance input.\nW/kg (rider mass): The calculated real-world, mass-relative power of the specific rider.\nPower (W): The calculated absolute power the rider had to produce to achieve their actual time, factoring in their mass, equipment, and the calculated effective wind.\n\nMode: Real Power → Etalon This table is designed to answer: “Given my rider’s actual power output, what is their standardized Etalon W/kg performance?”\n\nLabel, Real Power (W), Real W/kg: The input data for the actual rider.\nCalc. Duration, Calc. Speed, VAM, Gradient: The performance characteristics (time, speed) that are calculated to result from the given real power output in windless conditions.\nEtalon W/kg: The key output. The standardized performance benchmark calculated from the real power input.\nEtalon Power (W): The absolute power a 60 kg Etalon rider would need to produce to match the real rider’s speed.\n\n\n\nInterpreting the Results: Key Concepts and Model Limitations\nTo correctly interpret the outputs of the performance converter, it is essential to recognize the context provided by its underlying physics model and its inherent assumptions.\nAs detailed previously, the ‘Etalon W/kg’ metric is the cornerstone of this tool’s comparative power. By standardizing all performances to a 60 kg rider, it provides a unified benchmark for objective evaluation, removing the confounding variables of rider mass and equipment.\nIn the “Etalon → Real Power” mode, the ‘Effective Wind’ calculation quantifies the environmental conditions of a performance. It represents the constant headwind or tailwind required to explain the difference between the rider’s actual time and the time predicted by the model in ideal, windless conditions, offering a tangible measure of environmental assistance or resistance.\nIt is crucial to acknowledge the model’s limitations. The calculations are based on a simplified physics engine that assumes constant conditions throughout an effort. It does not account for real-world complexities such as:\n\nVariable wind speeds or gusts.\nThe significant aerodynamic benefit of drafting within a group.\nChanges in rider position (e.g., moving from the hoods to the drops), which alter aerodynamic drag.\n\nTherefore, while the results provide a powerful framework for standardized analysis, they may differ from on-bike power meter data recorded under dynamic conditions.",
    "crumbs": [
      "Metabolic Model Apps",
      "Power Profile",
      "Etalon Converter"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Power_Profile/Power_Profile.html#the-sidebar-the-control-center",
    "href": "Metabolic_Model_Apps/Power_Profile/Power_Profile.html#the-sidebar-the-control-center",
    "title": "Power Profile",
    "section": "The Sidebar: The Control Center",
    "text": "The Sidebar: The Control Center\nThe sidebar is the primary interface for controlling the entire analysis workflow, organized into logical tabs that guide the user from file upload to final export.\n\nTab 1: Analysis & Settings\nThis is the main control panel for data input, athlete configuration, and model selection.\n\n1. Upload Activity Files\nThis section handles the initial data ingestion.\n\nFile Drop Area: Users can drag and drop multiple activity files or click to open a file selection dialog. The app supports two common formats:\n\n.tcx (Training Center XML): An XML-based format that also contains detailed workout data, including power.\n.gpx (GPS Exchange Format): An XML-based format primarily for GPS tracks, but it can contain power data within its &lt;extensions&gt; tags, which the app is equipped to parse.\n\nAnalysis Process: Once files are uploaded, the app performs a multi-step analysis “under the hood”:\n\nParsing: Each file is read and the raw, time-stamped power data points are extracted.\nInterpolation: The raw data, which may have variable recording intervals, is interpolated to a consistent 1-second resolution. This ensures that the subsequent MMP calculation is accurate and standardized.\nMMP Calculation: For each individual activity file, the app calculates the Mean Maximal Power (MMP) curve. This is achieved using a sliding window algorithm: for every duration d (from 1 second up to the total activity duration), the algorithm slides a window of size d across the 1-second power data array, calculating the average power for each window position. The highest average found for that duration d becomes the MMP value for that duration.\nComposite Curve Synthesis: After calculating the MMP curve for every uploaded file, the app creates the final composite power curve. For each second of duration (e.g., 1s, 2s, …, 3600s, etc.), it compares the MMP value from all the individual files and retains only the single highest value. The result is a single curve representing the athlete’s absolute best performance across all provided activities.\n\nShow Key Efforts (Checkbox): This toggle controls the visibility of “Key Effort” markers on the main plot. These markers highlight significant “breakthrough” performances. The logic for their selection is based on a comparison between the athlete’s actual composite curve and the power predicted by the fitted mathematical model:\n\nSelection Logic: The app divides the power curve into time “buckets” (e.g., 1-3 min, 5-10 min, etc.). Within each bucket, it identifies the data point that has the highest positive percentage deviation from the fitted model line.\nSpecial Rule: For critical endurance ranges (e.g., around the 5 to 60-minute mark), if no data point lies above the model’s prediction, the algorithm pragmatically selects the point with the smallest negative deviation. This ensures that even in a well-modeled profile, a representative point is chosen for these important durations.\nProtected Efforts: The maximal power for 1 second and 20 seconds are always identified and protected as key efforts, given their physiological significance for neuromuscular and glycolytic power.\n\n\n\n\n2. Athlete & Unit Settings\nThis section allows for personalization and sets the units for display.\n\nGender, Age, Height: These anthropometric details are primarily collected for compatibility when exporting the profile for use in other applications that may require them for metabolic calculations (like the Integrated Metabolic & Power Profile app).\nBody Mass (kg): A critical input. This value is used to calculate and display mass-relative power (in W/kg) if the user chooses.\nGlobal Power Unit (Toggle): This switch (Use Absolute Units (W)) determines how power data is displayed throughout the application—on the plot’s Y-axis, in the summary tables, and in the data lists. When checked, all values are in absolute Watts (W). When unchecked, values are in Watts per kilogram (W·kg⁻¹). This setting only affects visualization; the underlying model fitting is handled internally to ensure consistency.\n\n\n\n3. Power-Duration Model & Plot\nThis section configures the mathematical modeling and visualization of the composite power curve.\n\nPower-Duration Model (Dropdown): Selects the model to be fitted to the composite power data. The options are the same as in the metabolic app:\n\n2-Parameter CP (Hyperbolic): The classic model where power is the sum of a sustainable component (CP) and an unsustainable component (W’) that depletes over time (Monod & Scherrer, 1965). \\[ P(t) = CP + \\frac{W'}{t} \\]\n\nPros: Well-established; the parameters are physiologically interpretable (CP as a metabolic threshold, W’ as anaerobic work capacity).\nCons: Unrealistic for very short durations (predicts infinite power as t→0) and very long durations (predicts no fatigue below CP).\nData: Best suited for efforts in the “severe” intensity domain, typically from 2 to 20 minutes. Requires 3-5 reliable data points for a robust fit (Leo et al., 2022).\n\nOmni-Domain (OmPD): A 4-parameter extension of the 2P-CP model, designed for a more realistic fit across a wider range of durations, including prolonged endurance (Puchowicz et al., 2020). It adds a maximal power parameter (\\(P_{max}\\)) to anchor the short end of the curve and a fatigue parameter (A) to model the performance decline during very long efforts. \\[ P(t) =\n\\begin{cases}\n\\frac{W'_{\\text{eff}}(t)}{t} + CP & \\text{if } t \\le 1800s \\\\\n\\frac{W'_{\\text{eff}}(t)}{t} + CP - A \\cdot \\ln(\\frac{t}{1800}) & \\text{if } t &gt; 1800s\n\\end{cases}\n\\] Where \\(W'_{\\text{eff}}(t) = W' \\cdot (1 - e^{-t/\\tau})\\) and \\(\\tau = W' / (P_{max} - CP)\\).\n\nPros: Aims to model the entire power curve, from sprints to ultra-endurance.\nCons: More complex; requires more data points (≥4, including efforts &gt;30 min) for a stable fit.\nVirtual Points: To improve stability, the app automatically adds a virtual 20s data point (based on the “Best 20s Avg. Power” input) if no real data exists in the 1-35s range when this model is selected.\n\nPower-Law: A simple, robust 2-parameter model where power is a power function of time. \\[ P(t) = S \\cdot t^{E-1} \\]\n\nPros: Often provides an excellent mathematical fit across all durations with as few as two data points.\nCons: The parameters (S and E) are less directly interpretable as physiological thresholds compared to CP and W’.\n\n\nCustomize Fitting Range (Toggle & Sliders): This allows the user to precisely control which portion of the composite power curve is used for the model fitting. By adjusting the “Fitting Start (s)” and “Fitting End (s)” sliders, a user can, for example, focus the fit of a 2P-CP model on the 2-20 minute range to get a more robust CP value, or use the entire curve for a Power-Law model.\nCustomize Plot X-Axis (Toggle & Sliders): These controls adjust the visible time range of the main plot’s X-axis without affecting the data or the model fit. It is purely a visualization tool for zooming in on specific sections of the power curve (e.g., focusing on sprint performance from 0-60 seconds).\n\n\n\n4. Export Profile\nThis is the final output stage of the application.\n\nProfile Name: A text input field allowing the user to assign a descriptive name to the exported profile (e.g., “Pogi - Stage 1”).\nClean Up Key Efforts (Button): This triggers a sophisticated algorithm designed to refine the list of automatically-identified key efforts, removing redundant points to create a more balanced and representative set for export. The algorithm works as follows:\n\nProtect: The 1s and 20s efforts are always kept.\nFilter: Efforts that fall significantly below the model’s prediction (e.g., deviation &lt; -3%) are removed.\nWinner-Takes-All: The remaining efforts are sorted by their “quality” (i.e., their positive deviation from the model). The algorithm iterates through this sorted list. The highest-quality effort is selected and “claims” a surrounding time window. The size of this window is dynamic: it’s wider for longer-duration efforts (e.g., +/- 20% for efforts &gt;30 min) and narrower for shorter ones (e.g., +/- 50% for efforts &lt;1 min). Any other efforts falling within the winner’s claimed window are discarded. This process repeats until all efforts have either been selected as a winner or discarded, ensuring the final list is well-distributed across the time spectrum.\n\nExport Key Efforts Profile (Button): Exports a .json file containing only the curated list of key efforts. This is the recommended export format for use in metabolic modeling, as it provides a set of high-quality, non-redundant maximal efforts.\nExport Full Profile (Button): Exports a .json file containing the entire composite power curve (MMP data for every second).\n\n\n\n\nTab 2: Composite Power Data\nThis tab provides a simple, scrollable list of the entire composite Mean Maximal Power curve, showing the duration and the corresponding maximal power value for every second of the profile. Users can manually remove individual data points from this list, which will trigger a refit of the power-duration model.\n\n\nTab 3: Key Efforts\nThis tab, which appears after the first analysis, displays only the curated list of key efforts identified by the app’s algorithm. It provides the same functionality as the “Composite Power Data” tab, allowing users to inspect and manually remove points from this specific list before exporting. This is the primary interface for refining the profile that will be used in other modeling tools.",
    "crumbs": [
      "Metabolic Model Apps",
      "Power Profile"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Power_Profile/Power_Profile.html#the-main-content-area-visualizations-outputs",
    "href": "Metabolic_Model_Apps/Power_Profile/Power_Profile.html#the-main-content-area-visualizations-outputs",
    "title": "Power Profile",
    "section": "The Main Content Area: Visualizations & Outputs",
    "text": "The Main Content Area: Visualizations & Outputs\nThis is where the results of the analysis are graphically and numerically presented.\n\nPower-Duration Profile Plot\nThis is the central visualization of the application.\n\nComposite Curve (Light Grey Line with Markers): The full Mean Maximal Power curve derived from all uploaded files. The markers on this line are color-coded based on their percentage deviation from the fitted model curve, providing an immediate visual assessment of the model’s fit. Colors typically range from cool (e.g., blue, for points far below the model) to hot (e.g., red, for points far above the model).\nFitted Model (Dark Grey Line): The selected mathematical model (e.g., OmPD) is overlaid on the data. It is drawn as a solid line within the user-defined fitting range and as a dashed line where it is extrapolated.\nKey Efforts (Star Markers): The identified “breakthrough” efforts are highlighted with large, distinct star markers, making them easy to identify. These markers are also color-coded by their deviation.\nAnnotations: A text box on the plot provides a detailed summary of the fitted model, including its name, the derived parameters (CP, W’, S, E, etc.), and the R² value indicating the goodness of fit.\n\n\n\nValues Container\nThis text area below the plot provides a concise numerical summary of the analysis.\n\nModel Parameters: It lists the key parameters derived from the fitted model, such as Critical Power (CP) and W’, providing both absolute (W, kJ) and relative (W/kg, kJ/kg) values.\nMMP Table: It displays a table of the maximal mean power values from the composite curve for standard, physiologically relevant durations (e.g., 1s, 15s, 1min, 5min, 20min, 60min), giving a quick performance overview.",
    "crumbs": [
      "Metabolic Model Apps",
      "Power Profile"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html",
    "title": "Mader’s metabolic model",
    "section": "",
    "text": "Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. The content will continue to expand over time.\nDownload Example_Race_Data.csv\nLink: Mader App"
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#introduction-to-maders-metabolic-models",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#introduction-to-maders-metabolic-models",
    "title": "Mader’s metabolic model",
    "section": "Introduction to Mader’s Metabolic Models",
    "text": "Introduction to Mader’s Metabolic Models\nMader’s metabolic simulation model represents a landmark advancement in exercise physiology, providing a mathematical framework for understanding and predicting endurance performance. Developed by Alois Mader in the early 1980s and refined through collaboration with Hans-Hermann Heck, this model has evolved into a sophisticated tool used by researchers and elite coaches alike. The model uniquely incorporates both maximal aerobic capacity (\\(\\dot{V}O_{2max}\\)) and maximal glycolytic rate (\\(vLa_{max}\\)) to simulate the dynamic interplay between oxidative and glycolytic energy systems during exercise.\nThe fundamental strength of Mader’s approach lies in its physiological basis, describing metabolic processes through Michaelis-Menten enzyme kinetics that reflect the activation of energy systems as functions of the cytosolic phosphorylation state. This allows for a mechanistically sound prediction of key performance indicators like Maximal Lactate Steady State (MLSS) and peak fat oxidation (FAT\\(_{max}\\)), offering insights that go beyond empirical threshold concepts.\nIn recent years, researchers have extended the application of this model from cycling to running, validating its transferability across exercise modalities. While the core mathematical principles remain consistent across applications, several sport-specific adaptations have been implemented to account for the fundamental differences between these activities."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#sport-specific-adaptations-cycling-vs.-running",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#sport-specific-adaptations-cycling-vs.-running",
    "title": "Mader’s metabolic model",
    "section": "Sport-Specific Adaptations: Cycling vs. Running",
    "text": "Sport-Specific Adaptations: Cycling vs. Running\nWhile Mader’s model maintains its fundamental structure across different exercise modalities, several important adaptations are necessary when transferring between cycling and running applications:\n\nIntensity Measurement: In cycling, power output (Watts) serves as the primary intensity metric, offering a direct measure of mechanical work. In contrast, running utilizes velocity (m·s\\(^{-1}\\)) as the intensity parameter, which introduces additional complexities related to terrain, body mass, and running economy.\nOxygen Demand Relationship: For cycling, oxygen demand is typically expressed relative to power output using the constant \\(CE_{V\\dot{O}_2}\\) (ml·min\\(^{-1}\\)·W\\(^{-1}\\)). In running models, this relationship is captured by the parameter Ks4, representing oxygen demand per unit of running velocity (ml·kg\\(^{-1}\\)·min\\(^{-1}\\) per m·s\\(^{-1}\\)).\nEconomy Considerations: Running economy demonstrates greater inter-individual variation than cycling economy due to its weight-bearing nature and the influence of biomechanical factors. Consequently, running models require individual determination of Ks4 through empirical testing, whereas cycling models traditionally used a standardized \\(CE_{V\\dot{O}_2}\\) value across subjects.\nMass-Specific Values: Running calculations typically employ mass-specific values (ml·kg\\(^{-1}\\)·min\\(^{-1}\\)) for oxygen uptake, while cycling calculations often use absolute values (ml·min\\(^{-1}\\)), though weight-normalized values (W·kg\\(^{-1}\\)) are increasingly common for power measurements in cycling.\nModel Validation: The validity of Mader’s model appears to vary between cycling and running. Nolte et al. (2022) found that for both modalities, experimental data showed significant deviations from model predictions, with running data requiring a significantly higher lactate removal constant (\\(k_{re}\\) of 0.1347 vs. 0.0533 mmol·kg·l⁻¹·ml⁻¹ for cycling) to achieve reasonable fit. These findings suggest that fundamental differences in muscle recruitment patterns, blood flow dynamics, and lactate kinetics between running and cycling may not be fully captured by the current model.\nMeasurement Protocols: The procedures for determining vLamax differ between cycling (typically short isokinetic sprints) and running (fixed-distance sprints), potentially introducing methodological biases. Ji et al. (2021) highlighted the need for developing running-specific vLamax assessment protocols to improve the accuracy of the model in running applications.\n\nRecent research by Dunst et al. (2025) has further highlighted the importance of considering movement velocity (cadence in cycling) when applying these models, demonstrating that neglecting this factor can lead to significant errors in threshold power estimates."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#mathematical-formulations-and-critical-analysis",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#mathematical-formulations-and-critical-analysis",
    "title": "Mader’s metabolic model",
    "section": "Mathematical Formulations and Critical Analysis",
    "text": "Mathematical Formulations and Critical Analysis\nRecent research by Nolte et al. (2022) provides an important mathematical reformulation of Mader’s model that offers new insights into its predictions. By normalizing the key metabolic rates and expressing them in dimensionless form, Nolte’s approach reveals a core prediction of the model: athletes with identical ratios of \\(\\dot{V}O_{2max}\\) to \\(vLa_{max}\\) should demonstrate the same fractional utilization of \\(\\dot{V}O_{2max}\\) at MLSS, regardless of their absolute values for these parameters.\nThis can be expressed mathematically as:\n\\[\n\\%\\dot{V}O_2(MLSS) = f\\left(\\frac{\\dot{V}O_{2max}}{vLa_{max}}, k_{re}\\right)\n\\tag{1}\\]\nWhere \\(k_{re}\\) is the lactate removal constant. This relationship suggests that the model predictions should fall along a single curve when plotting \\(\\%\\dot{V}O_2(MLSS)\\) against \\(\\dot{V}O_{2max}/vLa_{max}\\).\nHowever, when testing this prediction against experimental data from 160 participants across five studies, Nolte found substantial deviations from the predicted relationship. This finding raises important questions about either the model’s assumptions or the accuracy of current measurement protocols, particularly for \\(vLa_{max}\\)."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#steady-state-oxygen-uptake-dotvo_2ss",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#steady-state-oxygen-uptake-dotvo_2ss",
    "title": "Mader’s metabolic model",
    "section": "Steady-State Oxygen Uptake (\\(\\dot{V}O_{2ss}\\))",
    "text": "Steady-State Oxygen Uptake (\\(\\dot{V}O_{2ss}\\))\nThe steady-state oxygen uptake represents the oxygen consumption at a given exercise intensity when metabolic equilibrium is achieved. In its standard form, \\(\\dot{V}O_{2ss}\\) is calculated using a linear relationship between power output and oxygen demand:\n\\[\n\\dot{V}O_{2ss}(P) = CE_{V\\dot{O}_2} \\cdot P + \\dot{V}O_{2Base}\n\\tag{2}\\]\n\n\\(CE_{V\\dot{O}_2}\\) is the oxygen cost per unit of power output (ml/min/W)\n\\(P\\) is the mechanical power output (W)\n\\(\\dot{V}O_{2Base}\\) is the resting oxygen uptake (ml/min)\n\nHowever, as demonstrated by Dunst et al. (2025), this relationship may be influenced by movement velocity (e.g., cycling cadence), with both \\(CE_{V\\dot{O}_2}\\) and \\(\\dot{V}O_{2Base}\\) showing U-shaped relationships with pedaling rate.\nIn the application, the resting oxygen uptake (\\(\\dot{V}O_{2Base}\\)) can be calculated using the Harris-Benedict equations adapted for oxygen consumption:\nFor males:\n\\[\nh_m = 66.5 + (13.75 \\cdot m) + (5.003 \\cdot l) - (6.775 \\cdot a)\n\\tag{3}\\]\nFor females:\n\\[\nh_f = 655.1 + (9.563 \\cdot m) + (1.850 \\cdot l) - (4.676 \\cdot a)\n\\tag{4}\\]\n\n\\(m\\) is body mass (kg)\n\\(l\\) is height (cm)\n\\(a\\) is age (years)\n\nConverting to oxygen consumption: \\[\n\\dot{V}O_{2Base} = \\frac{h_{f,m}}{24 \\cdot 60 \\cdot k\\ddot{A}} \\cdot 4.1868 \\cdot f \\cdot 1000\n\\tag{5}\\]\n\n\\(k\\ddot{A} = 19.946\\) (kJ·L\\(^{-1}\\))\n\\(f = 1.287\\) for males, \\(f = 1.278\\) for females\n\nIn the application, this calculation is performed when the user clicks “VO2Base berechnen” (Calculate VO2Base), retrieving the values for gender, body mass, age, and height from the input controls. The calculated value is then automatically updated in the VO2Base slider.\nThe Shiny application also provides an option for a curvilinear oxygen uptake-power relationship:\n\\[\n\\dot{V}O_{2ss}(P) = a \\cdot P^2 + CE_{start} \\cdot P + \\dot{V}O_{2Base}\n\\tag{6}\\]\nWhere \\(a\\) is an optimized coefficient that ensures the slope at the intersection with \\(\\dot{V}O_{2max}\\) equals the target oxygen cost (\\(CE_{target}\\)). This curvilinear relationship may better represent the oxygen cost at higher intensities for some athletes.\nWhen the user selects the “Curvilineare CE-Beziehung” checkbox, the application switches from a single CE value to a range slider allowing the specification of both start and target CE values. The coefficient \\(a\\) is then automatically determined through an optimization process to ensure a smooth transition between these values as power increases.\nFor simulation purposes, \\(\\dot{V}O_{2ss}\\) is capped at \\(\\dot{V}O_{2max}\\), as oxygen uptake cannot exceed this physiological maximum:\n\\[\n\\dot{V}O_{2ss} = \\min(\\dot{V}O_{2ss\\text{-unlimited}}, \\dot{V}O_{2max})\n\\tag{7}\\]"
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#maximal-lactate-accumulation-rate-vla_ss",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#maximal-lactate-accumulation-rate-vla_ss",
    "title": "Mader’s metabolic model",
    "section": "Maximal Lactate Accumulation Rate (\\(vLa_{ss}\\))",
    "text": "Maximal Lactate Accumulation Rate (\\(vLa_{ss}\\))\nThe intensity-specific glycolytic activity, represented by \\(vLa_{ss}\\), is calculated using Michaelis-Menten enzyme kinetics that account for the activation state of glycolysis based on the cytosolic phosphorylation state:\n\\[\nvLa_{ss} = \\frac{vLa_{max}}{1 + ks_2 \\cdot \\left(\\frac{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}{ks_1 \\cdot \\dot{V}O_{2ss}}\\right)^{3/2}}\n\\tag{8}\\]\n\n\\(vLa_{max}\\) is the maximal lactate accumulation rate (mmol·l\\(^{-1}\\)·s\\(^{-1}\\))\n\\(ks_1 = 0.0635\\) (mmol·kg\\(_m^{-1}\\))\\(^2\\) is the 50% activation constant of oxidative phosphorylation\n\\(ks_2 = (1.1\\) mmol·kg\\(_m^{-1}\\))\\(^3\\) is the 50% activation constant of glycolysis\n\nThe derivation of this equation is a critical advancement in Mader’s model that warrants detailed explanation. The original formulation by Mader and Heck (1986) expressed glycolytic activity as a function of ADP concentration:\n\\[\nvLa_{ss} = \\frac{vLa_{max}}{1 + \\frac{ks_2}{[ADP]^3}}\n\\tag{9}\\]\nWhere [ADP] represents the concentration of adenosine diphosphate, which reflects the energy state of the muscle cell. However, measuring [ADP] directly is impractical in applied settings. The ingenious solution was to express [ADP] in terms of measurable parameters related to oxygen uptake.\nThe relationship between oxidative phosphorylation and [ADP] follows a similar Michaelis-Menten pattern:\n\\[\n\\dot{V}O_{2ss} = \\frac{\\dot{V}O_{2max}}{1 + \\frac{ks_1}{[ADP]^2}}\n\\tag{10}\\]\nThrough algebraic manipulation, this equation can be rearranged to express [ADP] in terms of oxygen uptake:\n\\[\n[ADP]^2 = \\frac{ks_1 \\cdot \\dot{V}O_{2ss}}{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}\n\\tag{11}\\]\nTherefore:\n\\[\n[ADP] = \\left(\\frac{ks_1 \\cdot \\dot{V}O_{2ss}}{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}\\right)^{1/2}\n\\tag{12}\\]\nSubstituting this expression into the original equation for \\(vLa_{ss}\\) and raising both sides to appropriate powers:\n\\[\n[ADP]^3 = \\left(\\frac{ks_1 \\cdot \\dot{V}O_{2ss}}{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}\\right)^{3/2}\n\\tag{13}\\]\nThis leads to the final formulation:\n\\[\nvLa_{ss} = \\frac{vLa_{max}}{1 + ks_2 \\cdot \\left(\\frac{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}{ks_1 \\cdot \\dot{V}O_{2ss}}\\right)^{3/2}}\n\\tag{14}\\]\nThis equation elegantly connects glycolytic activity to oxygen uptake parameters, enabling practical application of the model using standard physiological measurements. The exponent 3/2 arises directly from the combination of the squared relationship between oxygen uptake and [ADP] (exponent 1/2) and the cubed relationship between glycolysis and [ADP] (exponent 3).\nInterestingly, in some literature, particularly in running applications Ji et al. (2021), the equation appears with an exponent of 3 rather than 3/2 due to a different algebraic arrangement of the terms. However, both formulations are mathematically equivalent and describe the same physiological relationship.\nThe term \\(\\left(\\frac{\\dot{V}O_{2max} - \\dot{V}O_{2ss}}{ks_1 \\cdot \\dot{V}O_{2ss}}\\right)^{3/2}\\) represents the phosphorylation state of the muscle cell, which regulates glycolytic flux. As exercise intensity increases and \\(\\dot{V}O_{2ss}\\) approaches \\(\\dot{V}O_{2max}\\), this term decreases, resulting in increased glycolytic activity.\nIn the application, this calculation is performed for each power value in the range from 0 W up to approximately 125% of the estimated maximum aerobic power. The constants ks1 and ks2 are hard-coded, while vLamax is adjustable through a slider control, allowing users to simulate different glycolytic capacities.\nDunst et al. (2025) found that while \\(vLa_{max}\\) appeared to increase with cycling cadence in a polynomial relationship, this may be an artifact of measurement methodology rather than representing true changes in maximal glycolytic flux. Their findings suggest that \\(vLa_{max}\\) should be treated as cadence-independent for modeling purposes.\nIn the application, \\(vLa_{ss}\\) is converted to mmol·l\\(^{-1}\\)·min\\(^{-1}\\) for visualization purposes:\n\\[\nvLa_{ss} \\text{ [mmol·l}^{-1}\\text{·min}^{-1}\\text{]} = vLa_{ss} \\text{ [mmol·l}^{-1}\\text{·s}^{-1}\\text{]} \\cdot 60\n\\tag{15}\\]"
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#lactate-oxidation-rate-vla_ox",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#lactate-oxidation-rate-vla_ox",
    "title": "Mader’s metabolic model",
    "section": "Lactate Oxidation Rate (\\(vLa_{ox}\\))",
    "text": "Lactate Oxidation Rate (\\(vLa_{ox}\\))\nThe rate at which lactate is eliminated from the blood through oxidation is calculated as a function of oxygen uptake:\n\\[\nvLa_{ox} = \\frac{CE_{La\\dot{O}_2} \\cdot \\dot{V}O_{2ss}}{VolLa \\cdot 60}\n\\tag{16}\\]\n\n\\(CE_{La\\dot{O}_2} = 0.02049\\) mmol·l\\(^{-1}\\)·ml\\(^{-1}\\) is the lactate equivalent per oxygen uptake\n\\(VolLa = 0.4\\) is the lactate distribution volume\nThe factor 60 converts from per second to per minute\n\nIn the application, \\(CE_{La\\dot{O}_2}\\) is further adjusted by dividing by the user’s body mass. This modification accounts for the fact that lactate kinetics are influenced by the relative distribution of lactate throughout the body. The calculation is performed for each power output in the simulation range.\nAs with \\(vLa_{ss}\\), this value is converted to mmol·l\\(^{-1}\\)·min\\(^{-1}\\) for visualization:\n\\[\nvLa_{ox} \\text{ [mmol·l}^{-1}\\text{·min}^{-1}\\text{]} = vLa_{ox} \\text{ [mmol·l}^{-1}\\text{·s}^{-1}\\text{]} \\cdot 60\n\\tag{17}\\]\nThe lactate equivalent (\\(CE_{La\\dot{O}_2}\\)) is divided by body mass in the application to account for individual differences, which affects lactate kinetics."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#pyruvate-deficit-pd",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#pyruvate-deficit-pd",
    "title": "Mader’s metabolic model",
    "section": "Pyruvate Deficit (PD)",
    "text": "Pyruvate Deficit (PD)\nThe pyruvate deficit represents the difference between the capacity to metabolize pyruvate via oxidative phosphorylation and the pyruvate produced by glycolysis:\n\\[\nPD = vLa_{ox} - vLa_{ss}\n\\tag{18}\\]\nA positive PD indicates that the oxidative system can process more pyruvate than is being produced, allowing for fat oxidation. A negative PD indicates lactate accumulation as glycolysis exceeds oxidative capacity.\nIn the application, this calculation is performed for each power output value, creating a PD curve across the entire power spectrum. This allows users to visually identify the power range where fat oxidation is possible and where lactate accumulation begins.\nThe maximum pyruvate deficit (PD\\(_{max}\\)) corresponds to the intensity with the highest fat oxidation rate, often referred to as FAT\\(_{max}\\):\n\\[\n\\text{FAT}_{max} = \\max(PD)\n\\tag{19}\\]\nThe application identifies this point by finding the exact power output where the PD curve reaches its maximum. This value is highlighted in the visualization and reported in the text output below the graph.\nThe maximal lactate steady state (MLSS) occurs where PD equals zero, indicating a balance between lactate production and elimination:\n\\[\n\\text{MLSS} = \\{P | PD(P) = 0\\}\n\\tag{20}\\]\nIn the Shiny application, these thresholds are identified by finding the power values corresponding to the maximum of the PD curve and the point where PD crosses zero, respectively. Both thresholds are marked with vertical lines on the graph and their precise values are displayed in text annotations."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#lactate-accumulation",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#lactate-accumulation",
    "title": "Mader’s metabolic model",
    "section": "Lactate Accumulation",
    "text": "Lactate Accumulation\nThe lactate accumulation in blood is calculated as the cumulative effect of the imbalance between lactate production and elimination:\n\\[\nLa_{accum}(i) =\n\\begin{cases}\n\\max(0, vLa_{ss}(i) - vLa_{ox}(i)), & \\text{if } i=1 \\\\\nLa_{accum}(i-1) + \\max(0, vLa_{ss}(i) - vLa_{ox}(i)), & \\text{otherwise}\n\\end{cases}\n\\tag{21}\\]\nThis accumulation only begins when \\(vLa_{ss}\\) exceeds \\(vLa_{ox}\\), which typically occurs beyond the MLSS. The implementation includes setting accumulated lactate values to NA for intensities below this threshold to represent the absence of net lactate accumulation.\nIn the application, this is handled by identifying the first power output where net lactate production occurs, and then setting all lactate accumulation values below this power to NA. This ensures that the visualization correctly shows no accumulation below the lactate threshold while appropriately displaying the progressive accumulation above this threshold."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#impact-of-movement-velocity-on-metabolic-parameters",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#impact-of-movement-velocity-on-metabolic-parameters",
    "title": "Mader’s metabolic model",
    "section": "Impact of Movement Velocity on Metabolic Parameters",
    "text": "Impact of Movement Velocity on Metabolic Parameters\nDunst et al. (2025) demonstrated that incorporating cadence-dependent relationships for \\(CE_{V\\dot{O}_2}\\) and \\(\\dot{V}O_{2Base}\\) into Mader’s model significantly affects predicted power outputs at metabolic thresholds. Their findings revealed polynomial relationships between cadence and threshold-specific power outputs, with optimal cadences of 84 rpm for MAP, 80 rpm for MLSS, and 70 rpm for FAT\\(_{max}\\) when using cadence-dependent \\(CE_{V\\dot{O}_2}\\) and \\(\\dot{V}O_{2Base}\\) with constant \\(vLa_{max}\\).\nThe mathematical functions describing these cadence dependencies were:\n\\[\nCE_{V\\dot{O}_2}(PR) = 0.0004 \\cdot PR^2 - 0.094 \\cdot PR + 16.857\n\\tag{22}\\]\n\\[\n\\dot{V}O_{2Base}(PR) = 0.172 \\cdot PR^2 - 14.460 \\cdot PR + 548.039\n\\tag{23}\\]\nWhere \\(PR\\) is the pedaling rate in rpm.\nWhen these relationships are incorporated into the model, the power output at a given metabolic threshold becomes a function of cadence:\n\\[\nP(PR) = \\frac{\\dot{V}O_{2ss}(PR) - \\dot{V}O_{2Base}(PR)}{CE_{V\\dot{O}_2}(PR)}\n\\tag{24}\\]\nThis approach represents a significant advancement in metabolic modeling, as it acknowledges that metabolic responses are not fixed but vary with movement velocity, offering more precise predictions for endurance performance.\nAlthough the current version of the application does not include explicit cadence-dependent parameter controls, the theoretical framework is in place for future implementation. Users could potentially simulate these effects by manually adjusting CE and VO2Base values based on the cadence-specific equations."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#alternative-modeling-of-movement-velocity",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#alternative-modeling-of-movement-velocity",
    "title": "Mader’s metabolic model",
    "section": "Alternative Modeling of movement velocity",
    "text": "Alternative Modeling of movement velocity\n\n\n\n\n\n\nFigure 1: Cadence-Test All\n\n\n\n\n\n\n\n\n\nFigure 2: Cadence-Test avg\n\n\n\n\n\n\n\n\n\nFigure 3: VO2SS-Power-Cadence Models"
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#calculation-flow-in-tab-1-power-based-metabolic-profile",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#calculation-flow-in-tab-1-power-based-metabolic-profile",
    "title": "Mader’s metabolic model",
    "section": "Calculation Flow in Tab 1: Power-Based Metabolic Profile",
    "text": "Calculation Flow in Tab 1: Power-Based Metabolic Profile\nIn the first tab of the Shiny application, the calculations proceed through several distinct steps to generate the complete metabolic profile:\n\nFirst, the application retrieves all user-specified parameters from the UI controls, including VO2max, VO2Base, CE values, vLamax, and body mass.\nBased on these parameters, the application calculates the maximum aerobic power and generates a power range from 0 W to approximately 125% of this value, with 1-watt increments for high resolution.\nFor each power value, the application calculates:\n\nThe steady-state VO2 using either linear or curvilinear equations\nThe lactate production rate using the Michaelis-Menten equation\nThe lactate oxidation rate based on VO2\nThe pyruvate deficit as the difference between oxidation and production rates\nThe cumulative lactate accumulation\n\nThe application then identifies key threshold values:\n\nFATmax: The power output at maximum PD\nMLSS: The power output where PD crosses zero\nThe power output corresponding to a blood lactate concentration of 4 mmol/l\n\nThese results are visualized in an interactive plot that shows all calculated variables against power output. The visualization includes special markers for the identified thresholds and a text output area that displays the precise values for these important points.\nIf the user toggles the “Gewichtsbezogene Werte” (weight-based values) checkbox, all power and VO2 values are normalized to body mass, allowing for standardized comparisons between individuals of different sizes.\nThe application also supports swapping the X and Y axes between power and VO2, providing different perspectives on the metabolic relationships.\n\nThe high resolution of the calculations (1-watt increments) ensures precise identification of metabolic thresholds, which is critical for accurate training prescription and performance prediction."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#exercise-simulation-in-the-application",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#exercise-simulation-in-the-application",
    "title": "Mader’s metabolic model",
    "section": "Exercise Simulation in the Application",
    "text": "Exercise Simulation in the Application\nThe second tab of the Shiny application implements a dynamic simulation of exercise responses based on Mader’s model. This simulation extends the steady-state calculations to account for the temporal dynamics of physiological adaptation during exercise.\n\nTime-Dependent VO₂ Kinetics\nWhile the first tab focuses on steady-state relationships, the exercise simulation incorporates time constants to model the delay in oxygen uptake response to changes in exercise intensity:\n\\[\n\\dot{V}O_2(t) = \\dot{V}O_2(t-1) + (\\dot{V}O_{2ss} - \\dot{V}O_2(t-1)) \\cdot (1 - e^{-\\Delta t/\\tau})\n\\tag{25}\\]\n\n\\(\\dot{V}O_2(t)\\) is the actual oxygen uptake at time \\(t\\)\n\\(\\dot{V}O_{2ss}\\) is the steady-state oxygen uptake for the current power output\n\\(\\Delta t\\) is the time step (typically 1 second in the simulation)\n\\(\\tau\\) is the time constant, which can differ for increases (\\(\\tau_{up}\\)) and decreases (\\(\\tau_{down}\\)) in intensity\n\nThis mono-exponential model accounts for the delayed response of oxidative metabolism to changes in power output, which significantly affects metabolic responses during interval training or variable-intensity exercise.\nIn the application, users can adjust both the upward and downward time constants through slider controls. This allows for exploration of how different VO2 kinetics profiles affect metabolic responses. The simulation applies these time constants to calculate the actual VO2 value for each second of the exercise bout, starting from the resting VO2 value.\n\n\nDynamic Lactate Modeling\nThe simulation calculates instantaneous rates of lactate production and elimination based on the actual (not steady-state) oxygen uptake at each time point:\n\nLactate production (\\(vLa_{ss}\\)) is calculated using the equation #eq-vLass but with the actual \\(\\dot{V}O_2(t)\\) rather than \\(\\dot{V}O_{2ss}\\). This is a critical distinction, as it accounts for the delayed VO2 response during transitions in exercise intensity.\nLactate elimination incorporates concentration-dependent kinetics:\n\n\\[\nvLa_{ox}(t) = \\frac{CE_{La\\dot{O}_2} \\cdot \\dot{V}O_2(t)}{VolLa \\cdot 60} \\cdot \\min(La(t-1), 15) / 8\n\\tag{26}\\]\nWhere \\(La(t-1)\\) is the blood lactate concentration from the previous time step. The factor \\(\\min(La(t-1), 15) / 8\\) represents the saturation of lactate transporters at higher concentrations, with maximal transport occurring around 8 mmol·l⁻¹ and diminishing returns beyond 15 mmol·l⁻¹.\nThis concentration-dependent modification is an important advancement beyond the steady-state model, as it more realistically represents how lactate clearance increases with elevated blood lactate levels. The application applies this enhanced equation for each time point in the simulation.\n\nThe change in blood lactate concentration is calculated as:\n\n\\[\n\\Delta La(t) = (vLa_{ss}(t) - vLa_{ox}(t)) \\cdot \\Delta t\n\\tag{27}\\]\nThis equation is applied for each time step to determine how much lactate is added to or removed from the blood.\n\nBlood lactate concentration is updated while ensuring it doesn’t fall below baseline:\n\n\\[\nLa(t) = \\max(La_{base}, La(t-1) + \\Delta La(t))\n\\tag{28}\\]\nThe baseline lactate value is user-adjustable through the “Ruhelaktat” slider, allowing simulation of different resting conditions. The application ensures that calculated lactate never falls below this baseline, reflecting the physiological reality that basal metabolism maintains a minimum lactate level."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#alternative-mathematical-formulations",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#alternative-mathematical-formulations",
    "title": "Mader’s metabolic model",
    "section": "Alternative Mathematical Formulations",
    "text": "Alternative Mathematical Formulations\nNolte et al. (2022) present the activation of oxidative phosphorylation and glycolysis using a slightly different mathematical notation:\n\\[\n\\dot{V}O_2=\\frac{\\dot{V}O_{2,max}}{1+ \\left(\\frac{K_{ox}}{[ADP]}\\right)^{n_{ox}}}\n\\tag{29}\\]\n\\[\n\\dot{c}La_{pr}=\\frac{\\dot{c}La_{max}}{1+ \\left(\\frac{K_{La}}{[ADP]}\\right)^{n_{La}}}\n\\tag{30}\\]\nWhere \\(n_{ox}\\) and \\(n_{La}\\) are the Hill coefficients (typically 2 and 3, respectively), and \\(K_{ox}\\) and \\(K_{La}\\) are the half-maximal activation constants. This formulation places the exponents on the entire fraction rather than just the numerator of the ADP-dependent term, which Nolte argues is more mathematically appropriate as it ensures the argument of the power function remains dimensionless.\nThrough algebraic manipulation, Nolte derives a relationship between normalized net lactate accumulation and normalized oxygen uptake:\n\\[\n\\%\\dot{c}La_{net}= \\left(1+\\left(\\frac{K_{La}}{K_{ox}} \\cdot \\left(\\frac{1-\\%\\dot{V}O_2}{\\%\\dot{V}O_2}\\right)^{\\frac{1}{n_{ox}}}\\right)^{n_{La}}\\right)^{-1} - \\left(\\frac{\\dot{V}O_{2,max}}{\\dot{c}La_{max}}\\right) \\cdot k_{re} \\cdot \\%\\dot{V}O_2\n\\tag{31}\\]\nThis equation reveals that \\(\\%\\dot{c}La_{net}\\) is determined by the difference between a nonlinear term (glycolytic activity) and a linear term (lactate removal). Setting \\(\\%\\dot{c}La_{net}\\) to zero (the condition at MLSS) yields an equation that can only be solved numerically but demonstrates the unique dependence of \\(\\%\\dot{V}O_2\\) at MLSS on the ratio \\(\\dot{V}O_{2,max}/\\dot{c}La_{max}\\).\n\nExercise Termination Criteria\nThe simulation incorporates a lactate-based termination criterion, where exercise is considered to end when blood lactate concentration reaches a user-specified maximum value (\\(La_{max}\\)):\n\\[\n\\text{Terminate if } La(t) \\geq La_{max}\n\\tag{32}\\]\nThis simulates the physiological limitation imposed by severe acidosis during high-intensity exercise.\nIn the application, users can adjust this termination criterion through the “Laktat-Abbruchkriterium” slider. When the simulated blood lactate reaches this threshold, the application identifies the time point and corresponding power output, then truncates all data series at this point. This termination point is marked in the visualization with a vertical line and labeled with the corresponding power output.\n\n\nHandling Variable Power Profiles\nThe application supports three methods for defining power profiles:\n\nStep test simulation: Automatically generates a ramp protocol with user-defined step duration and power increments. Users can adjust the step size in watts, the duration of each step in seconds, and the maximum power to reach.\nInterval example: Pre-defined interval workout with alternating moderate and high-intensity periods, loaded by clicking the “Beispiel Intervalldaten laden” button. This provides a standardized profile for exploring interval training responses.\nCustom data upload: Allows users to import their own power-time data from CSV files through the file upload control. The application supports different CSV formats with options for headers and separators.\n\nFor each approach, the application interpolates between data points to ensure a continuous power profile at 1-second resolution. When the “smooth power” option is enabled, a 10-second moving average filter is applied to reduce noise:\n\\[\nP_{smooth}(t) = \\frac{1}{10} \\sum_{i=t-4}^{t+5} P(i)\n\\tag{33}\\]\nThis smoothing can help reduce the impact of measurement noise in uploaded power data, providing more stable metabolic predictions.\n\n\nPractical Implementation and Visualization\nThe exercise simulation visualizes the dynamic interplay between power output, oxygen uptake, lactate production/elimination rates, and blood lactate concentration throughout the exercise bout. This provides valuable insights into how metabolic stress evolves over time and how the timing of intensity changes affects physiological responses.\nThe visualization includes: - Power output on the primary Y-axis (left side) - Blood lactate concentration on a secondary Y-axis (right side) - Lactate production and elimination rates on the same axis as lactate - VO2 on a third Y-axis (far right) - Time on the X-axis - Markers for the lactate threshold and termination point\nThe application uses a multi-axis plotting system to display all these variables simultaneously, allowing users to observe the relationships between mechanical work, metabolic demand, and physiological responses in real time.\nThe simulation is particularly useful for:\n\nPredicting time-to-exhaustion at different constant power outputs\nOptimizing interval training protocols by visualizing the metabolic consequences of work-recovery ratios\nUnderstanding the impact of VO₂ kinetics on metabolic responses during variable-intensity exercise\nExploring how different physiological profiles (varying VO₂max, vLamax, etc.) respond to the same exercise protocol\n\nBy integrating both steady-state metabolic relationships and time-dependent kinetics, the application provides a comprehensive tool for understanding and predicting metabolic responses to exercise across a wide range of scenarios relevant to both research and applied sport science contexts."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_text.html#practical-application",
    "href": "Metabolic_Model_Apps/Mader_Modell_text.html#practical-application",
    "title": "Mader’s metabolic model",
    "section": "Practical Application",
    "text": "Practical Application\nThe Shiny application visualizes these relationships, allowing users to explore how changes in physiological parameters and cadence affect metabolic thresholds. The app displays power output-specific values for \\(\\dot{V}O_{2ss}\\), \\(vLa_{ss}\\), \\(vLa_{ox}\\), PD, and lactate accumulation, providing insights into the metabolic profile at different intensities.\nIn the first tab, the application calculates and displays detailed metabolic values for three key points: 1. FATmax: The power output with maximum fat oxidation potential 2. MLSS: The highest sustainable power without progressive lactate accumulation 3. BLC ≈ 4.0: The power output corresponding to a blood lactate of approximately 4 mmol/l\nFor each of these points, the text output area shows: - The exact power output (in watts or W/kg) - The corresponding VO2 value (in ml/min or ml/kg/min) - The lactate production rate (vLass) - The lactate elimination rate (vLaox) - The pyruvate deficit (PD) - The accumulated blood lactate\nThese detailed quantitative outputs enable precise training prescription and performance prediction based on individual physiological profiles.\nFor training prescription, the identification of FATmax and MLSS is particularly valuable, as these thresholds demarcate important training zones. The ability to account for cadence effects enhances the precision of these prescriptions, especially for cyclists who may use different cadences during training and competition.\nAs highlighted by Dunst et al. (2025), neglecting movement velocity in metabolic modeling can lead to significant errors in performance predictions, with deviations of up to 100W in threshold power estimates. By incorporating cadence-dependent relationships, the application provides a more nuanced understanding of the interplay between movement velocity and metabolic processes, enhancing the utility of Mader’s model for endurance performance prediction and training optimization.\nRecent critical analysis by Nolte et al. (2022) cautions against over-reliance on the model’s quantitative predictions without careful validation. Their findings suggest that while the model provides valuable qualitative insights into metabolic processes, individual variations in lactate removal capabilities and potential limitations in vLamax measurement protocols may affect the accuracy of threshold predictions. Users should therefore interpret the model outputs as one component of a comprehensive assessment rather than as definitive values.\nNevertheless, the model’s ability to simulate how different combinations of aerobic and anaerobic capacities can produce similar performance outcomes offers unique insights for training prescription. As Ji et al. (2021) demonstrated, the model can help identify specific physiological limitations (aerobic capacity, glycolytic capacity, or movement economy) that may be limiting an athlete’s performance, allowing for more targeted training interventions.\n\nBerechnung der Substratverteilung\nBeschrieben in Heck et al. (2022) S.59 und S.76\nCHO und Fat Oxidation at Rest, at 45 & 65% of VO2max in (Friedman1998?) und (Friedman1999?) und Brooks (2012)"
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell.html",
    "href": "Metabolic_Model_Apps/Mader_Modell.html",
    "title": "Metabolic Simulation",
    "section": "",
    "text": "Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. Consequently, some features may not yet be fully implemented or might not always function as expected. Furthermore, please be aware that the models presented here (specifically in Tab 2) are currently primarily for illustrative purposes and may not be exclusively based on strictly scientifically validated physiological and metabolic factors at this stage.The model underlying Tab 2 has also not yet been tested or validated using real-world data. The content will continue to expand over time, and the scientific basis and functionality will be successively improved.\nWith this File Converter App, you can convert and download .tcx files or .csv files to use them in the “Exercise Simulation” tab of the “Metabolic Simulation App”. Fit-files must first be converted to .csv format using GOTOES File Converter before you can use the File Converter to transform them into a format compatible with the Mader App.\nFullscreen-Link: Mader App\nDownload Derek Gee’s Giro 2025 Profile and upload it directly into the app for analysis\nDownload Giro d’Italia Stage 20 Race Data",
    "crumbs": [
      "Metabolic Model Apps",
      "Metabolic Simulation"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell.html#main-application-tabs",
    "href": "Metabolic_Model_Apps/Mader_Modell.html#main-application-tabs",
    "title": "Metabolic Simulation",
    "section": "Main Application Tabs",
    "text": "Main Application Tabs\nThe application is structured into two primary tabs, each dedicated to a distinct yet complementary approach to metabolic modeling:\n\nP-V̇O₂-La Dynamics: This tab is foundational for understanding the metabolic system under conditions of equilibrium. It models physiological responses assuming that, at each discrete power output level, the body has achieved a stable metabolic state. This mode can be used for dissecting fundamental physiological relationships, identifying critical metabolic thresholds (like MLSS and Fatmax), and understanding how individual physiological parameters shape an athlete’s steady-state performance capacity.\nExercise Simulation: This tab transitions from steady-state assumptions to the simulation of dynamic, time-dependent metabolic responses. It allows users to model how physiological variables change during continuous or intermittent exercise protocols, where steady states may not be achieved or are constantly being perturbed. This is particularly useful for analyzing the demands of specific training sessions, predicting metabolic responses to race scenarios, understanding the impact of \\(\\dot{V}O_2\\) kinetics, and exploring the interplay of energy systems over time.",
    "crumbs": [
      "Metabolic Model Apps",
      "Metabolic Simulation"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "href": "Metabolic_Model_Apps/Mader_Modell.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "title": "Metabolic Simulation",
    "section": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)",
    "text": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)\nThis section of the application is dedicated to exploring the metabolic responses of the human body under the assumption that a physiological steady state has been reached for each given power output. The calculations are primarily based on Prof. Mader’s comprehensive metabolic model, which intricately links aerobic energy production with anaerobic glycolysis and lactate metabolism.\n\nControl Panel: P-V̇O₂-La Dynamics\nLocated in the sidebar, this panel contains several control groups that allow the user to precisely adjust the model parameters for the steady-state analysis. Each parameter influences the shape and characteristics of the P-\\(\\dot{V}O_2\\)-La curves.\n\nOxygen Demand Settings\nThis section defines the fundamental relationship between mechanical power output (P, typically in Watts) and the corresponding steady-state oxygen uptake (\\(\\dot{V}O_{2,SS}\\), typically in ml·min⁻¹). This P-\\(\\dot{V}O_2\\) relationship is a cornerstone of exercise physiology, as its slope and intercept reflect the overall efficiency of converting metabolic energy into external mechanical work.\n\nCurvilinear CE relationship (Checkbox): This toggle allows the user to select between two distinct mathematical models for describing the P-\\(\\dot{V}O_2\\) relationship:\n\nLinear Model (Unchecked - Default): This model assumes a constant oxygen cost per unit of work performed above the baseline oxygen uptake (\\(\\dot{V}O_{2,Base}\\)). The relationship is mathematically defined as: \\[ \\dot{V}O_{2,SS} = CE \\cdot P + \\dot{V}O_{2,Base} \\] In this equation, \\(CE\\) (Cost of Exercise) represents the slope of the line (\\(\\Delta\\dot{V}O_2 / \\Delta P\\)), indicating the volume of oxygen (in ml/min) required for each additional Watt of power output. \\(\\dot{V}O_{2,Base}\\) is the y-intercept, representing the oxygen uptake during rest + oxygen uptake of unloaded cycling (i.e., the metabolic cost associated with moving the limbs against minimal internal resistance without performing significant external work on the ergometer).\nCurvilinear Model (Checked): This model implements a quadratic (second-order polynomial) relationship. It acknowledges the widely observed physiological phenomenon that mechanical efficiency often decreases at higher exercise intensities, particularly above the lactate threshold or critical power. This leads to a disproportionally greater increase in \\(\\dot{V}O_2\\) for a given increment in power output. This upward deviation from linearity is related to the “\\(\\dot{V}O_2\\) slow component” observed during prolonged constant-load exercise (Barstow, 1994; Hintzy-Cloutier et al., 2003; Zoladz et al., 1995), but here it’s applied to describe the steady-state \\(\\dot{V}O_2\\) across different intensities. The formula used is: \\[ \\dot{V}O_{2,SS} = a \\cdot P^2 + CE_{Start} \\cdot P + \\dot{V}O_{2,Base} \\] \\(CE_{Start}\\) represents the initial slope (and thus initial efficiency) at very low power outputs. The coefficient \\(a\\) determines the degree of curvature of the P-\\(\\dot{V}O_2\\) relationship. Within the app, this coefficient \\(a\\) is automatically calculated. This calculation is designed such that the slope of this curvilinear P-\\(\\dot{V}O_2\\) relationship, specifically at the power output where \\(\\dot{V}O_{2,SS}\\) would theoretically intersect \\(\\dot{V}O_{2,max}\\), matches the user-defined \\(CE_{Target}\\) value. This sophisticated approach allows for a more nuanced representation of how efficiency changes across the intensity spectrum.\n\nCE (ml·min⁻¹·W⁻¹):\n\nThis slider sets the constant Cost of Exercise (\\(CE\\)). While the app’s slider offers a broad range (8 to 15 ml·min⁻¹·W⁻¹), typical physiological values for well-trained cyclists often fall within a narrower band, generally between 10.0 and 12.0 ml·min⁻¹·W⁻¹ (Åstrand et al., 2003; Rassouli & Thurnheer, 2015). Values outside this range can certainly occur, depending on factors like training status (untrained individuals may have higher CEs), muscle fiber type composition, pedaling technique, and even equipment. Lower CE values inherently indicate higher gross mechanical efficiency for the external work performed.\nDelta Efficiency (Δη): This derived metric quantifies the efficiency of converting metabolic energy into additional mechanical work, specifically the efficiency of the work performed above the \\(\\dot{V}O_{2,Base}\\) level. It is calculated from the \\(CE\\) value and the caloric equivalent of oxygen (energy yield per liter of O₂ consumed). A critical point is that the caloric equivalent of oxygen is not constant; it varies depending on the substrate mixture being oxidized, which is reflected by the Respiratory Quotient (RQ). RQ values typically range from approximately 0.70 (pure fat oxidation) to 1.00 (pure carbohydrate oxidation), corresponding to caloric equivalents from approximately 19.6 kJ·L O₂⁻¹ to 21.1 kJ·L O₂⁻¹ (Stegemann, 1991). Because the app dynamically calculates a predicted RQ based on the modeled substrate utilization, Δη is presented as a range (e.g., 24.7-26.5%) to account for this RQ variability across intensities. Conceptually, Δη can be thought of as: \\[ \\Delta\\eta = \\frac{\\text{Change in Work Rate}}{\\text{Change in Energy Expenditure Rate above } \\dot{V}O_{2,Base}} \\] A more direct calculation based on CE is: \\[ \\Delta\\eta = \\frac{1}{\\left( \\frac{CE \\cdot \\text{Caloric Equivalent per L O}_2}{60} \\right)} \\] where CE is in ml O₂·min⁻¹·W⁻¹, Caloric Equivalent per L O₂ is in kJ·L O₂⁻¹, and the division by 60 converts the denominator (which represents oxygen cost in kJ per kJ of work) from a per Watt basis to a per kJ/min basis to match the numerator (implicitly 1 kJ/min of work for 1 kJ/min of energy expenditure if efficiency were 100%). Note: 1 W = 1 J·s⁻¹ = 0.06 kJ·min⁻¹.\nηgross (Fatmax | MLSS): Gross efficiency (ηgross) is a fundamental measure of whole-body mechanical efficiency. It is calculated as the ratio of the mechanical work performed (Power output, converted from Watts to kJ/min) to the total aerobic energy expenditure (also in kJ/min, derived from \\(\\dot{V}O_{2,SS}\\) and its caloric equivalent): \\[ \\eta_{\\text{gross}} = \\frac{\\text{Power output [kJ/min]}}{\\text{Total Aerobic Energy Expenditure [kJ/min]}} \\times 100\\% \\] The Mader App calculates and displays ηgross at two physiologically significant power outputs:\n\nFatmax: The power output at which the rate of fat oxidation is maximal. This intensity is often targeted in training for enhancing fat metabolism.\nMLSS (Maximal Lactate Steady State): The highest power output that can theoretically be sustained for a prolonged period (e.g., 30-60 minutes) without a continual rise in blood lactate concentration. This is a critical marker of endurance performance. The app uses its internal model to predict the RQ at these specific intensities (Fatmax and MLSS) to determine the most accurate caloric equivalent for oxygen for these ηgross calculations. Typical gross efficiencies observed in cycling are in the range of 19-22% (Coyle et al., 1991; Faria et al., 2005).\n\nηnet (Fatmax | MLSS): Net efficiency (ηnet) is conceptually similar to gross efficiency but aims to isolate the efficiency of the muscular work itself by subtracting the energy expenditure at rest (\\(\\dot{V}O_{2,Base}\\)). The formula is: \\[ \\eta_{\\text{net}} = \\frac{\\text{Power output [kJ/min]}}{(\\text{Total Aerobic Energy Expenditure [kJ/min]}) - (\\text{Energy Expenditure at } \\dot{V}O_{2,Base} \\text{ [kJ/min]})} \\times 100\\% \\] Net efficiency values are typically higher than gross efficiency values because the “baseline” metabolic cost is excluded from the denominator. In cycling, ηnet values often range from 19-24%, although precise values depend heavily on how the baseline energy expenditure is defined and measured (Di Prampero et al., 1979; Stainbsy et al., 1980). The app calculates ηnet at both Fatmax and MLSS, again using predicted RQs for caloric equivalents.\n\nCEStart (ml·min⁻¹·W⁻¹): (Visible and active only when the Curvilinear model is selected)\n\nThis slider sets the initial slope of the \\(\\dot{V}O_2\\)-P curve, representing the oxygen cost (and thus efficiency) at very low power outputs, near the \\(\\dot{V}O_{2,Base}\\).\n\nCETarget (ml·min⁻¹·W⁻¹): (Visible and active only when the Curvilinear model is selected)\n\nThis slider sets the target slope of the \\(\\dot{V}O_2\\)-P curve specifically at the power output corresponding to \\(\\dot{V}O_{2,max}\\). This parameter is crucial for defining the extent of the “tail-up” or steepening of the curvilinear P-\\(\\dot{V}O_2\\) relationship at high exercise intensities.\n\n\n\n\nCadence Dependency\nThis section introduces an feature allowing users to incorporate the effects of pedaling rate on metabolic parameters. The underlying model for these adjustments is primarily based on the research and formulas published by Dunst et al. (2025). The general physiological principle is that there’s an optimal cadence range where mechanical and metabolic efficiency are maximized. Deviating from this optimal range, either by pedaling too slowly or too quickly, typically increases the oxygen cost for a given power output due to factors such as increased internal work (cost of limb movement), less favorable muscle force-velocity characteristics, or altered muscle recruitment patterns (Chavarren & Calbet, 1999; Foss & Hallén, 2005).\n\nEnable U-Shaped Cadence Dependency (Checkbox):\n\nWhen this box is checked, the app dynamically adjusts key metabolic parameters (\\(CE\\), \\(\\dot{V}O_{2,Base}\\), and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\)) based on the cadence value selected by the user.\n\nCadence (rpm) (Slider):\n\nAllows the user to set the cycling cadence in revolutions per minute (rpm). The default value is 80 rpm, but the slider typically covers a wide physiological range (e.g., 20-200 rpm). While preferred cadences in trained cyclists often hover around 80-100 rpm during submaximal, steady-state cycling (Lucía et al., 2001), optimal cadences can vary with intensity and individual characteristics.\n\nCE-Dependency (Informational - automatically applied if cadence dependency is enabled):\n\nIndicates that the Cost of Exercise (\\(CE\\)) is no longer a fixed input (if the linear model was active) but becomes a dynamic function of the selected cadence. The app uses the quadratic formula derived by Dunst et al. (2025): \\(CE(rpm) = 0.0004 \\cdot rpm^2 - 0.094 \\cdot rpm + 16.857\\). This U-shaped function implies a minimum CE (highest efficiency) at a certain cadence, with CE increasing at lower and higher cadences.\n\n\\(\\dot{V}O_{2,Base}\\) Dependency (Informational - automatically applied if cadence dependency is enabled):\n\nSimilarly, the baseline oxygen uptake (\\(\\dot{V}O_{2,Base}\\)) also becomes cadence-dependent, reflecting the metabolic cost of \\(\\dot{V}O_{2}\\) at Rest + additional \\(\\dot{V}O_{2}\\) for unloaded pedaling at different speeds. The formula from Dunst et al. (2025) is: \\(\\dot{V}O_{2,Base}(rpm) = 0.172 \\cdot rpm^2 - 14.460 \\cdot rpm + 548.039\\). This also typically describes a U-shaped relationship.\n\nInclude \\(\\dot{V}O_{2,max}\\) Dependency (Checkbox):\n\nIf this option is checked, the individual’s \\(\\dot{V}O_{2,max}\\) is also modeled as being influenced by cadence. This is presented as an experimental feature, qualitatively based on figures in Dunst et al. (2025) which suggest that \\(\\dot{V}O_{2,max}\\) might be slightly lower at very low or very high cadences, with an optimal range typically around 80-90 rpm. The physiological basis could relate to optimal muscle recruitment and force-velocity characteristics for achieving maximal aerobic power.\n\nInclude vLamax Dependency (Checkbox):\n\nIf this option is checked, the maximal rate of lactate production (vLamax) is adjusted based on the selected cadence, using the formula proposed by Dunst et al. (2025): \\(vLa_{max}(rpm) = -0.0002 \\cdot rpm^2 + 0.00931 \\cdot rpm\\). It is important to note, as highlighted in the app’s tooltip and by Dunst et al. (2025), that this observed cadence-dependency of vLamax (often showing higher vLamax at higher cadences) might be partly or wholly an artifact of common sprint testing methodologies (e.g., isokinetic sprints where higher cadences might facilitate greater recruitment of fast-twitch fibers or alter torque production) rather than a true change in the intrinsic maximal glycolytic capacity of the muscle.\n\n\n\n\nPhysiological Input-Parameters\nThese sliders allow the user to define the core physiological characteristics of the simulated individual. These parameters are fundamental to Mader’s metabolic model and significantly influence all calculated outputs.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹):\n\nMaximal oxygen uptake. This is a cornerstone of aerobic fitness assessment, representing the highest rate at which an individual can take up, transport, and utilize oxygen during maximal, dynamic exercise (Åstrand et al., 2003; Levine, 2008). It sets the upper limit for aerobic ATP resynthesis.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹·kg⁻¹):\n\nMaximal oxygen uptake expressed relative to body mass (in kilograms). This normalized value allows for comparisons of aerobic fitness between individuals of different body sizes. This slider is dynamically linked to the absolute \\(\\dot{V}O_{2,max}\\) slider and the Body Mass slider; changing any one of these three will automatically update the others to maintain consistency.\n\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹):\n\nOxygen uptake at Rest as well as oxygen uptake for unloaded cycling (i.e., cycling at zero external power output on the ergometer, but still involving the metabolic cost of limb movement, postural support, and elevated cardiorespiratory activity compared to true rest). This value is critical as it forms the y-intercept of the P-\\(\\dot{V}O_2\\) relationship. It can be estimated using the “\\(\\dot{V}O_{2,Base}\\) Calculation” utility (see below) which estimates true resting \\(\\dot{V}O_2\\), or it can be set manually based on typical values or direct measurements from unloaded cycling.\n\nvLamax (mmol·l⁻¹·s⁻¹):\n\nMaximal rate of lactate production. This parameter reflects the peak enzymatic capacity of the anaerobic glycolytic pathway to produce lactate (and ATP) per unit of time and per liter of blood/distribution volume (Mader, 1984; Mader & Allmer, 1996). It is a crucial determinant of an individual’s anaerobic capacity and significantly influences lactate accumulation kinetics and substrate utilization patterns. Typical values can range widely, from approximately 0.3 mmol·l⁻¹·s⁻¹ in highly trained endurance athletes to over 1.0 mmol·l⁻¹·s⁻¹ in elite sprint athletes.\n\nHRmax (bpm):\n\nMaximal heart rate achievable by the individual during exhaustive exercise. Commonly estimated by formulas like “220 - age”, but this has large individual variability. Direct measurement is preferred for accuracy.\n\nHRBase (bpm):\n\nBaseline heart rate at rest.\n\nCEHR (bpm·W⁻¹):\n\nHeart Rate Efficiency, also commonly referred to as the HR-Power slope. It describes the increment in heart rate (in beats per minute) for each Watt increase in external power output during steady-state incremental exercise. Typical values in cyclists range from 0.25 to 0.45 bpm·W⁻¹. Lower values are generally indicative of better cardiovascular efficiency, often reflecting a larger stroke volume response to increasing exercise intensity.\n\nWeight-based values (Checkbox):\n\nIf checked, the x-axis of the main P-\\(\\dot{V}O_2\\)-La plot and several displayed output values (e.g., power, \\(\\dot{V}O_2\\)) will be normalized to the individual’s body mass. This is useful for comparing individuals of different sizes, as many physiological parameters scale with body mass. Power would be displayed in W·kg⁻¹ and \\(\\dot{V}O_2\\) in ml·min⁻¹·kg⁻¹.\n\n\n\n\n\\(\\dot{V}O_{2,Base}\\) Calculation\nThis utility provides a method to estimate an individual’s true basal metabolic rate (BMR) using the widely recognized Harris-Benedict equation (J. A. Harris & Benedict, 1918). This BMR is then converted into an equivalent resting oxygen uptake. While this calculated resting \\(\\dot{V}O_2\\) is not always directly the \\(\\dot{V}O_{2,Base}\\) used in this model, it can serve as a physiologically grounded reference point for setting or evaluating the \\(\\dot{V}O_{2,Base}\\) parameter without the additional oxygen cost of unloaded cycling.\n\nGender (Radio buttons: Male/Female): Selects the appropriate gender-specific version of the Harris-Benedict formula, as metabolic rates differ between sexes.\nBody Mass (kg) (Slider): Input for the Harris-Benedict formula. Also used for weight-based normalizations throughout the app if the “Weight-based values” checkbox is active.\nAge (years) (Slider): Input for the Harris-Benedict formula, as BMR typically declines with age.\nHeight (cm) (Slider): Input for the Harris-Benedict formula.\nCalculate \\(\\dot{V}O_{2,Base}\\) Button:\n\nWhen clicked, the app calculates BMR in kilocalories per day (kcal/day) using the selected inputs and the Harris-Benedict equations:\n\nMen: BMR = 66.5 + (13.75 × weight in kg) + (5.003 × height in cm) – (6.775 × age in years)\nWomen: BMR = 655.1 + (9.563 × weight in kg) + (1.850 × height in cm) – (4.676 × age in years)\n\nThis BMR (kcal/day) is then converted to a resting \\(\\dot{V}O_2\\) value (in ml/min) using standard caloric equivalents for oxygen (approximately 4.825 kcal per liter of O₂ consumed at a typical resting RQ of 0.82-0.85, or a more generic ~5 kcal/L O₂).\nThe \\(\\dot{V}O_{2,Base}\\) slider in the “Physiological Input-Parameters” section is automatically updated with this calculated resting \\(\\dot{V}O_2\\) value.\nImportant Distinction: It’s crucial to remember that the \\(\\dot{V}O_{2,Base}\\) parameter in Mader’s model represents oxygen uptake during unloaded cycling. This value is inherently higher than the true basal resting \\(\\dot{V}O_2\\) (as estimated by Harris-Benedict) because it includes the metabolic cost of limb movement, maintaining posture on the bike, and slightly elevated cardiorespiratory activity. The Harris-Benedict calculation here provides a physiological baseline for resting energy expenditure.\n\n\n\n\nSubstrate Utilization\nThis section enables the modeling and visualization of how the body utilizes carbohydrates (CHO) and fats for aerobic energy production across different exercise intensities. The model’s approach is rooted in the lactate balance concept from Mader’s framework (Mader, 2003), where the interplay between lactate production and oxidation serves as an indicator of the relative reliance on CHO versus fat metabolism.\n\nShow Substrate Utilization (Checkbox):\n\nIf this box is checked:\n\nA dedicated Substrate Utilization Plot appears below the main P-V̇O₂-La plot. This plot displays the percentage contribution of CHO and Fat to total aerobic energy expenditure across the range of power outputs.\nTraces representing the absolute rates of CHO and Fat oxidation (in the units selected via the “Energy Unit” dropdown) are added to the main P-V̇O₂-La plot. These are typically plotted on a third y-axis (yaxis3) to accommodate their different scale compared to \\(\\dot{V}O_2\\) or lactate rates.\n\n\nEnergy Unit (Dropdown menu): (Visible only if “Show Substrate Utilization” is checked)\n\nAllows the user to select the preferred units for displaying the absolute substrate oxidation rates. Options are:\n\ng/h (grams per hour): Useful for nutritional planning and understanding fuel mass turnover.\nkcal/h (kilocalories per hour): A common unit for energy expenditure.\nkJ/h (kilojoules per hour): The SI unit for energy expenditure.\n\n\nAdjust CHO utilization at rest (Checkbox): (Visible only if “Show Substrate Utilization” is checked)\n\nIf checked, this feature allows the user to manually influence the modeled CHO utilization percentage specifically at rest (0 Watts power output). The Mader model, by default, calculates CHO utilization based purely on its internal lactate kinetics (\\(vLa_{SS}/vLa_{ox}\\) ratio). However, empirical studies often show that at true rest, particularly in a post-absorptive state, fat oxidation predominates, and CHO contribution might be around 35-40% (Brooks, 2012; Friedlander et al., 1998, 1999). This option allows users to align the model’s resting substrate use more closely with such empirical observations or specific dietary conditions if desired.\n\nResting CHO percentage (%) (Slider): (Visible only if “Adjust CHO utilization at rest” is checked)\n\nA slider (0-100%) to set the target CHO utilization percentage at rest (0 Watts). The application will then adjust the entire CHO utilization curve proportionally to pass through (or near) this user-defined resting value, while still adhering to the model’s logic at higher intensities (e.g., approaching 100% CHO at MLSS).\n\n\nModel Basis for Substrate Utilization: The Mader model posits a strong link between lactate metabolism and substrate choice. The fundamental idea is that increased glycolytic flux (leading to lactate production, \\(vLa_{SS}\\)) signifies a shift towards carbohydrate utilization. Conversely, conditions favoring lactate clearance and oxidation (\\(vLa_{ox}\\)) are associated with a greater capacity for, and reliance on, fat oxidation. The model calculates the percentage CHO contribution based on the ratio of \\(vLa_{SS}\\) to \\(vLa_{ox}\\). As exercise intensity increases and \\(vLa_{SS}\\) rises (potentially exceeding \\(vLa_{ox}\\)), CHO% increases, approaching 100% at or above MLSS (where PD ≤ 0). Fat oxidation percentage is calculated as (100 - CHO%). The absolute rates of CHO and fat oxidation (in g/h, kcal/h, or kJ/h) are then derived from the total aerobic energy expenditure (calculated from \\(\\dot{V}O_{2,SS}\\) and its caloric equivalent) and these percentages. Standard energy yields (e.g., ~4.1 kcal/g for CHO, ~9.45 kcal/g for fat) are used for these conversions. Crucially, the predicted Respiratory Quotient (RQ = \\(\\dot{V}CO_2 / \\dot{V}O_2\\)) is calculated from this modeled substrate mix (RQ ≈ 0.70 for 100% fat, RQ ≈ 1.00 for 100% CHO). This dynamically predicted RQ is then used in conjunction with established tables (similar to those by Stegemann (1991)) to determine the precise caloric equivalent of oxygen (e.g., kJ·l O₂⁻¹ or kcal·l O₂⁻¹) at each power output. This RQ-dependent caloric equivalent is then used for the accurate calculation of all efficiency metrics (Δη, ηgross, ηnet). This creates a physiologically consistent loop where substrate use influences RQ, which influences caloric equivalent, which influences efficiency calculations. The intensity at which fat oxidation is maximal (Fatmax) typically occurs where the Pyruvate Deficit is highest. For a detailed understanding of factors influencing fat oxidation, refer to reviews like Achten & Jeukendrup (2004).\n\n\nPlot Settings\n\nLock Y-Axis / Lock X-Axis (Checkboxes):\n\nWhen checked (default state), the respective axis range on the main P-V̇O₂-La plot remains fixed, regardless of changes to input parameters. This is highly beneficial for visual comparison, as it allows the user to clearly see how alterations in (for example) \\(\\dot{V}O_{2,max}\\) or \\(CE\\) shift the curves relative to a constant scale.\nIf unchecked, the axis will auto-scale to optimally fit the currently plotted data. This can be useful for initial exploration if the parameter changes result in data that goes off the fixed scale, but makes direct comparison of curve shifts more difficult.\n\n\n\n\n\nMain Plot: P-V̇O₂-La Dynamics\nThis central graphical output is the primary visualization for the steady-state model, displaying the complex interrelationships between power output and key metabolic variables.\n\nX-Axis: Power output (P). Units are Watts (W) by default, or Watts per kilogram body mass (W·kg⁻¹) if the “Weight-based values” option is selected in the sidebar.\nPrimary Y-Axis (Left side of plot): Oxygen Uptake (\\(\\dot{V}O_2\\)). Units are milliliters per minute (ml·min⁻¹) or ml·min⁻¹·kg⁻¹ if weight-based.\n\n\\(\\dot{V}O_{2,SS}\\) (Solid Blue Line): This trace represents the calculated steady-state oxygen uptake at each power output, up to the individual’s defined \\(\\dot{V}O_{2,max}\\). The shape of this curve is determined by whether the linear or curvilinear CE model is selected, and by the specific CE parameters.\n\\(\\dot{V}O_{2,SS,extrapolated}\\) (Dashed Blue Line): This line shows the theoretical \\(\\dot{V}O_2\\) demand if it were not physiologically constrained by the individual’s \\(\\dot{V}O_{2,max}\\). It essentially continues the P-\\(\\dot{V}O_2\\) relationship defined by the CE model beyond the point where \\(\\dot{V}O_{2,max}\\) is reached.\n\\(\\dot{V}O_{2,max}\\) Line (Dotted Grey Horizontal Line): A clear visual representation of the individual’s maximal oxygen uptake, serving as the ceiling for the \\(\\dot{V}O_{2,SS}\\) curve.\n\nSecondary Y-Axis (Right side of plot - typically labeled yaxis2): This axis displays variables related to lactate kinetics. Rates are typically in mmol·l⁻¹·min⁻¹, and accumulation in mmol·l⁻¹.\n\nvLaSS (Dashed Red Line): The steady-state rate of lactate production into the blood/distribution volume. In Mader’s model, \\(vLa_{SS}\\) is a function of the relative exercise intensity (related to the difference between \\(\\dot{V}O_{2,max}\\) and current \\(\\dot{V}O_{2,SS}\\)), the individual’s maximal glycolytic capacity (vLamax), and constants reflecting enzyme kinetics and substrate availability.\nvLaox (Dashed Light Blue Line): The steady-state rate of lactate oxidation or clearance from the blood/distribution volume. This is primarily dependent on the aerobic metabolic rate (\\(\\dot{V}O_{2,SS}\\)), as lactate is oxidized in various tissues (muscle, heart, liver) or converted to glucose (gluconeogenesis), both processes requiring oxygen directly or indirectly.\nPD (Pyruvate Deficit) (Solid Purple Line): Calculated as the difference: \\(vLa_{ox} - vLa_{SS}\\).\n\nA positive PD indicates that the capacity for lactate elimination (\\(vLa_{ox}\\)) exceeds the rate of lactate production (\\(vLa_{SS}\\)). This state is typically associated with lower to moderate exercise intensities and often correlates with a higher proportion of fat oxidation.\nA negative PD indicates that lactate production (\\(vLa_{SS}\\)) exceeds the elimination capacity (\\(vLa_{ox}\\)), leading to a net accumulation of lactate if the exercise were sustained.\nFATmax (Vertical Dotted Grey Line Annotation): This line is drawn at the power output where the Pyruvate Deficit (PD) reaches its maximum positive value. This intensity is often considered to approximate the point of maximal fat oxidation, as a large PD implies a metabolic environment conducive to fat metabolism (lower glycolytic flux relative to oxidative capacity).\nMLSS (Maximal Lactate Steady State) (Vertical Dotted Grey Line Annotation): This line is drawn at the power output where PD is theoretically zero (i.e., \\(vLa_{SS} = vLa_{ox}\\)). This represents the highest exercise intensity at which lactate production and elimination are balanced, allowing for a stable (though elevated) blood lactate concentration during prolonged, constant-load exercise. MLSS is a critical determinant of endurance performance (Heck et al., 2022).\n\nLaAccumulation (Solid Dark Red Line): This trace represents the theoretical steady-state blood lactate concentration that would result if exercise at that specific power output were maintained indefinitely. It is derived from the net balance of lactate production and elimination (i.e., the integral of -PD over time, assuming a starting lactate concentration). It’s important to note that this is a modeled steady-state prediction and not a dynamic simulation of blood lactate changes over a fixed exercise duration.\n\nTertiary Y-Axis (Right side, typically further out - yaxis3, visible only if “Show Substrate Utilization” is checked): This axis is dedicated to displaying the absolute rates of substrate utilization, in the units selected by the user (g/h, kcal/h, or kJ/h).\n\nCHO (Unit) (Dotted Pink Line): Shows the absolute rate of carbohydrate oxidation at each power output.\nFat (Unit) (Dotted Green Line): Shows the absolute rate of fat oxidation at each power output.\n\n\nThe plot is richly annotated, providing values for FATmax power, MLSS power, and the absolute \\(\\dot{V}O_{2,max}\\) value. Additionally, the specific mathematical formula currently being used to define the \\(\\dot{V}O_2\\)-P relationship (linear or curvilinear, and reflecting any cadence-dependent adjustments to CE and \\(\\dot{V}O_{2,Base}\\)) is displayed directly on the plot for clarity.\n\n\nSubstrate Utilization Plot\nThis second plot appears below the main P-V̇O₂-La plot only if the “Show Substrate Utilization” option is enabled in the control panel. It provides a percentage-based view of fuel use.\n\nX-Axis: Power output (P), consistent with the main plot’s x-axis (W or W·kg⁻¹).\nY-Axis: Percentage of Total Aerobic Energy Expenditure (%), ranging from 0 to 100%.\n\nCHO-Utilization (%) (Dotted Pink Line): Illustrates the relative contribution of carbohydrate oxidation to the total aerobic energy production at each power output. This typically increases with intensity.\nFat-Utilization (%) (Dotted Dark Green Line): Shows the relative contribution of fat oxidation. This typically decreases with increasing intensity, especially above Fatmax. This plot effectively visualizes the “substrate crossover” concept, which describes the shift from predominantly fat utilization at lower intensities to predominantly carbohydrate utilization at higher intensities (Brooks et al., 2004). The intersection of these two curves (if it occurs) roughly indicates the intensity where CHO and fat contribute equally to aerobic energy supply.\n\n\n\n\nValues Display Area\nLocated directly below the plot(s), this dynamic text area provides a numerical summary of key metabolic parameters calculated at two physiologically significant anchor points: FATmax and MLSS. For each of these intensity points, the following information is typically displayed:\n\nPower output (in W or W·kg⁻¹, matching the plot setting).\nSteady-state \\(\\dot{V}O_{2,SS}\\) (absolute in ml·min⁻¹ or relative in ml·min⁻¹·kg⁻¹) and also expressed as a percentage of the individual’s \\(\\dot{V}O_{2,max}\\) (e.g., “MLSS at 75% \\(\\dot{V}O_{2,max}\\)”).\nRate of lactate production (\\(vLa_{SS}\\) in mmol·l⁻¹·min⁻¹).\nRate of lactate oxidation (\\(vLa_{ox}\\) in mmol·l⁻¹·min⁻¹).\nPyruvate Deficit (PD) in mmol·l⁻¹·min⁻¹.\nTheoretical Lactate Accumulation (LaAccumulation) in mmol·l⁻¹.\nIf substrate utilization is shown:\n\nAbsolute carbohydrate oxidation rate (in the units selected by the user: g/h, kcal/h, or kJ/h) and its percentage contribution to total aerobic energy.\nAbsolute fat oxidation rate (in selected units) and its percentage contribution.\nPredicted Respiratory Quotient (RQ) at that specific intensity.\n\nCalculated gross efficiency (ηgross) in %.\nCalculated net efficiency (ηnet) in %.\n\nAdditionally, if cadence dependency is active, this display area will also show the effective \\(CE\\), \\(\\dot{V}O_{2,Base}\\), and, if their respective dependencies are enabled, the effective \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\) values that correspond to the user-selected cadence. This provides full transparency on how cadence adjustments are impacting the core model parameters.",
    "crumbs": [
      "Metabolic Model Apps",
      "Metabolic Simulation"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell.html#tab-2-exercise-simulation-dynamic-model",
    "href": "Metabolic_Model_Apps/Mader_Modell.html#tab-2-exercise-simulation-dynamic-model",
    "title": "Metabolic Simulation",
    "section": "Tab 2: Exercise Simulation (Dynamic Model)",
    "text": "Tab 2: Exercise Simulation (Dynamic Model)\nThis tab allows users to move beyond steady-state assumptions and simulate the dynamic, time-dependent metabolic responses of an individual to a defined exercise protocol. This is invaluable for understanding how various physiological systems adapt and interact during non-steady-state conditions, such as those encountered in interval training, races with variable pacing, or ramp tests.\n\nControl Panel: Exercise Simulation\n\nStep Test / Exercise Simulation Parameters\nThese controls are used to define the exercise protocol for the simulation, either by generating a standard step test or by loading power data from an external file.\n\nStep Increment (Watts): If generating an incremental step test, this parameter sets the magnitude of the power increase for each successive step (e.g., an increment of 20 Watts).\nStep Duration (s): For a generated step test, this defines the duration (in seconds) of each constant-power stage (e.g., 180 seconds for 3-minute stages).\nMaximum Power (Watts): This sets the highest power output that will be targeted in a generated incremental step test. The simulation will incrementally increase power up to this level, or until an abort criterion is met.\nPower Adjustment (%): A global scaling factor (ranging from 0% to 200%) that is applied to all power values in the current workout, regardless of whether the workout was generated by the app or loaded from an external file. This allows users to easily scale a given workout to simulate higher or lower absolute intensities, for instance, to match different fitness levels or to explore the effects of relative intensity changes.\nLoad Example Exercise Data Button: Loads a pre-defined sample interval workout directly into the simulation. This sample dataset typically includes time, power, and often cadence values, providing a quick way to see the dynamic simulation in action.\nInsert workout file / File Upload:\n\nThis feature allows users to upload their own workout data from external files. Supported file formats include .csv (comma-separated values), .txt (often tab-separated, but other delimiters may be auto-detected), .xlsx (modern Excel format), and .xls (older Excel format).\nThe app expects the file to contain columns for time (or timestamp), power, and optionally, cadence. The data will be parsed and interpolated to a 1-second resolution for the simulation.\nFile has headers (Checkbox): This should be checked (it is by default) if the first row of the uploaded file contains descriptive column names (e.g., “Time”, “Power_Watts”, “Cadence_rpm”). If unchecked, the app will assume the data begins from the very first row and will attempt to use a default column order (typically Time, Power, then Cadence if present).\nUploaded workout data gap processing (Radio buttons): This option determines how the app handles missing data points or time gaps when it interpolates the uploaded data to a 1-second resolution:\n\nMaintain last values (Default): If there is a gap in the recorded data (e.g., a recording device missed a few seconds), the power output (and cadence, if available) from the last valid preceding data point will be carried forward to fill the missing seconds. This method is often preferred for visualizing structured interval training where power is intended to be constant during an interval, and brief recording dropouts should not appear as zero power.\nInsert zero values: If there is a gap, the power (and cadence) for the missing seconds will be set to zero. This method is more appropriate for analyzing training sessions that include distinct rest periods where the actual power output is indeed zero, and these rests should be accurately reflected in the simulation.\n\n\nSmooth Power Curve (5-point window) Button: When clicked, this applies a 5-point moving average filter to the currently loaded or generated power data. This can be useful for reducing noise or very rapid, short-lived fluctuations in recorded power data, providing a smoother and potentially more physiologically representative input for the metabolic simulation. Cadence data, if present, is typically smoothed with a slightly wider window (e.g., 10-point).\nDisplay Window Settings: These controls allow users to customize the visible range of the plot axes for the simulation plot without altering the underlying simulation data or the calculations themselves. This is purely a visualization tool to help focus on specific portions or aspects of the simulation.\n\nAdjust X-Axis range (Checkbox): When checked, enables manual adjustment of the time (horizontal) axis.\n\nStart Time (s) / End Time (s) (Sliders): These sliders allow the user to define the visible start and end times on the x-axis of the simulation plot. This is useful for zooming into specific phases of a long workout.\n\nAdjust Y-Axis ranges (Checkbox): When checked, enables manual adjustment of the various y-axes on the simulation plot.\n\nPower Y-Axis Maximum (Slider): Sets the maximum displayed value for the primary Y-axis (which typically shows Power, Cadence, MPA, Strain Score, and Glycogen).\n\\(\\dot{V}O_2\\) Y-Axis Maximum (Slider): Sets the maximum displayed value for the tertiary Y-axis (which typically shows \\(\\dot{V}O_2\\) and O₂ Deficit related variables).\nLactate Y-Axis Minimum / Maximum (Sliders): Sets the minimum and maximum displayed values for the secondary Y-axis (which typically shows Lactate, W’ Balance, PCr, pH, various rates, RQ, and HR).\n\n\n\n\n\nCadence Dependency\nThis section mirrors the functionality of Tab 1 but applies the cadence-dependent metabolic adjustments dynamically throughout the exercise simulation, based on the work of Dunst et al. (2025).\n\nEnable U-Shaped Cadence Dependency (Checkbox): If checked, metabolic parameters such as \\(CE\\) and \\(\\dot{V}O_{2,Base}\\) (and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\)) will be adjusted at each time step of the simulation based on the cadence at that specific moment.\nFixed Cadence (rpm) (Slider): This value is used if “Use cadence from file” is unchecked, or if an uploaded file lacks cadence data, but cadence dependency is enabled. It sets a constant cadence that will be assumed for the entire simulation for the purpose of parameter adjustments.\nUse cadence from file (if available) (Checkbox):\n\nIf this box is checked, AND cadence data is present in an uploaded workout file, AND “Enable U-Shaped Cadence Dependency” is active, the simulation will use the time-varying cadence values directly from the file to modulate the metabolic parameters at each second.\nIf no cadence data is found in the file, or if this option is unchecked, the “Fixed Cadence” value will be used for cadence-dependent calculations if the main cadence dependency is enabled.\n\nThe specific dependencies for CE (\\(\\text{CEV̇O}_2\\)) Dependency, \\(\\dot{V}O_{2,Base}\\) Dependency, Include \\(\\dot{V}O_{2,max}\\) Dependency, and Include vLamax Dependency can be individually toggled on or off, functioning identically to their counterparts in Tab 1, but their effects are applied dynamically based on the instantaneous cadence during the simulation.\n\n\n\nPhysiological Parameters (Dynamic Simulation)\nThese parameters are crucial for governing the kinetic (time-dependent) responses of the various metabolic and physiological systems modeled in the simulation.\n\n\\(\\dot{V}O_2\\) Start (ml·min⁻¹):\n\nThis sets the initial oxygen uptake value (\\(\\dot{V}O_2\\)) at the very beginning (time = 0 seconds) of the simulation. The slider for this parameter is dynamically constrained to be between the current effective \\(\\dot{V}O_{2,Base}\\) (which can vary if cadence dependency is active) and the current effective \\(\\dot{V}O_{2,max}\\). The default starting value is often set to approximate the \\(\\dot{V}O_2\\) that would be observed at the Fatmax intensity (as determined in Tab 1). This assumes the exercise often starts from a low-intensity active baseline rather than complete, supine rest. This initial \\(\\dot{V}O_2\\) value significantly influences the calculation of the initial oxygen deficit.\n\n\\(\\dot{V}O_{2,on}\\) time constant (τon) (s):\n\nThis parameter defines the characteristic speed of the exponential rise of \\(\\dot{V}O_2\\) towards its new, higher target (steady-state) value whenever exercise intensity increases or exercise begins from a lower baseline. A smaller τon value indicates faster “on” kinetics, meaning \\(\\dot{V}O_2\\) reaches its target more quickly. Typical values for τon in healthy individuals during moderate intensity exercise range from about 20 seconds in highly trained athletes to 40 seconds or more in less trained or older individuals (Barstow & Mole, 1991; Whipp & Wasserman, 1972). The fundamental equation describing an exponential rise to a new steady state is often given as: \\[ \\dot{V}O_2(t) = \\dot{V}O_{2,initial} + (\\dot{V}O_{2,target} - \\dot{V}O_{2,initial}) \\cdot (1 - e^{-(t - t_{delay})/\\tau_{on}}) \\] Where \\(t_{delay}\\) is the initial time delay (see below). The app implements this step-wise.\nIntensity-Dependent τon (Checkbox):\n\nIf this option is checked, τon is not a single fixed value for all upward transitions. Instead, it is dynamically calculated for each second of the simulation based on the \\(\\dot{V}O_2\\) (expressed as a percentage of the current \\(\\dot{V}O_{2,max}\\)) of the immediately preceding time step. The slider value for τon then acts as the specific τon that would occur if the preceding intensity was exactly 50% of \\(\\dot{V}O_{2,max}\\). This means the slider effectively sets an offset to the underlying formula, allowing the user to shift the entire linear τon-intensity relationship. This feature aims to simulate the physiological observation that \\(\\dot{V}O_2\\) on-kinetics can be slower if an exercise bout is initiated from an already elevated metabolic rate.\n\n\n\\(\\dot{V}O_{2,off}\\) time constant (τoff) (s):\n\nThis parameter defines the characteristic speed of the exponential fall of \\(\\dot{V}O_2\\) towards its new, lower target value when exercise intensity decreases or during recovery periods. Off-kinetics can be similar to, or often slightly slower than, on-kinetics, particularly following high-intensity or prolonged exercise, due to factors like elevated body temperature, hormone levels, and the metabolic cost of recovery processes (Özyener et al., 2001).\nIntensity-Dependent τoff (Checkbox):\n\nIf checked, τoff is also dynamically calculated. Its value depends on the maximum \\(\\dot{V}O_2\\) (as % of current \\(\\dot{V}O_{2,max}\\)) achieved within a recent lookback window (typically defined as twice the duration of the previous step’s τoff value). The base formula used is \\(\\tau_{off\\_base} = 0.45 \\cdot \\text{Intensity%} + 10\\) seconds. Similar to the dynamic τon, the slider value for τoff sets the τoff for a reference 50% intensity, thereby shifting this relationship. This models the physiological reality that recovery of \\(\\dot{V}O_2\\) might be faster after lower intensity efforts and slower after higher intensity efforts which cause greater metabolic disturbance.\n\n\n\\(\\dot{V}O_2\\) Response Delay (s):\n\nThis represents a pure time delay (in seconds) before the exponential \\(\\dot{V}O_2\\) response (either “on” or “off” kinetics) actually begins following a change in power output. This delay accounts for physiological lags such as the circulatory transit time of blood from the lungs to the exercising muscles (for O₂ delivery) and from muscles to lungs (for CO₂ feedback influencing ventilation), as well as any initial inertia in muscular metabolic pathway activation (Lamarra et al., 1987). The default is 2 seconds, with a typical physiological range considered to be 0-10 seconds. This delay directly affects the timing of the actual \\(\\dot{V}O_2\\) change, the calculation of O₂ deficit/surplus, and subsequently the modeled rate of lactate oxidation (\\(vLa_{ox}\\)).\n\nLactate exercise termination value (mmol·l⁻¹):\n\nIf the “Terminate simulation when lactate exceeds max value” checkbox (see below) is active, the simulation will automatically stop if the modeled blood lactate concentration reaches this specified threshold. Values around 20 mmol/l represent very high, often exhaustive, levels of lactate accumulation.\n\nTerminate simulation when lactate exceeds max value (Checkbox): Enables or disables the lactate-based abortion criterion for the simulation.\nResting Lactate-value (mmol·l⁻¹):\n\nThe initial blood lactate concentration assumed at the start (time = 0s) of the simulation. Typical resting values in healthy individuals are around 0.5 to 1.5 mmol/l.\n\nvLaSS,on Time Constant (τvLaSS,on) (s):\n\nThe time constant governing the exponential rise of the actual lactate production rate (\\(vLa_{SS}\\)) towards its new, higher target value when exercise intensity increases. This parameter reflects how quickly the glycolytic flux adapts upwards in response to increased energy demand.\n\nvLaSS,off Time Constant (τvLaSS,off) (s):\n\nThe time constant governing the exponential fall of \\(vLa_{SS}\\) towards its new, lower target value when exercise intensity decreases or during recovery periods. This reflects the downregulation of glycolysis.\n\nvLaSS Response Delay (s):\n\nA pure time delay (in seconds) before the lactate production rate (\\(vLa_{SS}\\)) begins its exponential kinetic response (either upwards or downwards) to a change in exercise intensity. This simulates inherent biochemical delays in the activation or deactivation of the complex glycolytic pathway.\n\nCap vLass by \\(\\dot{V}O_2\\) Deficit (Checkbox):\n\nAn optional, advanced physiological constraint. If this box is checked, the actual lactate production rate (\\(vLa_{SS}\\)) at any given time point during the simulation is capped. The cap is determined such that the net anaerobic energy supply (which is derived from the energy equivalent of lactate production minus the energy equivalent of concurrent lactate oxidation) does not exceed the current calculated oxygen deficit (which, in turn, is \\(\\dot{V}O_2 \\text{ Demand} - \\dot{V}O_2 \\text{ Actual}\\)). The purpose of this option is to enhance physiological plausibility by preventing an unrealistic “overshoot” of anaerobic energy production, especially during transitions where aerobic energy supply is still ramping up or is limited.\n\nBoost vLass by \\(\\dot{V}O_2\\) Deficit (Checkbox):\n\nAnother optional feature that simulates a more aggressive glycolytic response when the aerobic energy supply significantly lags behind demand. If checked, the target lactate production rate (\\(vLa_{SS}\\)) is additionally increased based on the current magnitude of the \\(\\dot{V}O_2\\) deficit. A fraction (controlled by the “vLaSS Deficit Boost Factor” slider) of the energy equivalent of the O₂ deficit is converted into an additional target \\(vLa_{SS}\\). This simulates a compensatory upregulation of glycolysis when aerobic ATP production is insufficient.\n\nMuscle pH (pHm) Simulation (Informational text & underlying mechanism):\n\nThis feature simulates changes in intramuscular pH (pHm), a critical factor in muscle function and fatigue. The calculation of pHm is based on established physiological principles, drawing from the work of Mader (2003) and further elaborated in texts such as Heck et al. (2022). The model considers several key intracellular factors that influence pHm:\n\nEstimated inorganic phosphate concentration ([Pi]): [Pi] increases as phosphocreatine ([PCr]) is broken down, and high [Pi] can contribute to acidosis. The model estimates [Pi] inversely based on the current [PCr].\nIntramuscular lactate concentration ([La]m): The accumulation of lactate is stoichiometrically linked with the production of H⁺ ions, thus directly impacting pHm. The model uses its dynamically calculated intramuscular lactate.\nEstimated arterial partial pressure of CO₂ (pCO₂): pCO₂ influences the carbonic acid-bicarbonate buffer system within the muscle. The model estimates pCO₂ as increasing with relative exercise intensity (i.e., %\\(\\dot{V}O_{2,max}\\)), reflecting increased metabolic CO₂ production and ventilatory responses.\n\nThe critical aspect of this feature is the feedback loop: the pHm calculated from the previous time step is then used to modulate the effective maximal lactate production rate (\\(vLa_{max,eff}\\)) for the current time step. This modulation simulates the well-known inhibitory effect of falling (more acidic) pH on key glycolytic enzymes, particularly phosphofructokinase (PFK), which is a major rate-limiting step in glycolysis (Danforth, 1965). The relationship is typically sigmoidal, represented in the app as:\\[vLa_{max,eff} = vLa_{max,base} \\cdot \\text{PFK Activity Factor}(pH_m)\\] Where PFK_Activity_Factor(pHm) is a term that decreases (from a maximum of ~1.0 down to near 0) as pHm drops significantly below physiological resting levels (e.g., below pH ~7.0 down towards pH 6.0).\nThis pH-modulated \\(vLa_{max,eff}\\) then becomes the new input for determining the target \\(vLa_{SS}\\) for the current time step. This creates a physiologically relevant negative feedback loop: high rates of lactate production can lead to a drop in pHm, which in turn can reduce further lactate production by inhibiting PFK, thus helping to limit excessive acidosis.\n\n\n\n\nGlycogen Storage Parameters\nThis section of the control panel models the dynamics of muscle glycogen stores, a critical fuel source for prolonged and high-intensity exercise. The model simulates depletion due to carbohydrate oxidation and potential repletion from exogenous carbohydrate intake.\n\nAssumed CHO Availability (Dropdown): This dropdown allows the user to select the assumed baseline carbohydrate status of the athlete, which directly influences the auto-calculation of glycogen stores. The options are:\n\nNormal CHO: Represents a typical, well-fed state.\nHigh CHO (Loaded): Represents a state of carbohydrate supercompensation, as achieved through specific nutritional strategies.\nLow CHO (Depleted): Represents a state of glycogen depletion, for instance after prolonged exercise or during low-carbohydrate dieting.\n\nAuto-calculate glycogen values based on muscle mass (Checkbox):\n\nIf this box is checked, the “Initial Glycogen Storage” and “Maximum Glycogen Storage” slider values are automatically populated. The calculation is based on the “Active Muscle Mass” value, the selected “Assumed CHO Availability” status, and the athlete’s aerobic fitness (\\(\\dot{V}O_{2,max}\\)). The underlying model uses research-based data (e.g., from Areta & Hopkins (2018)) to estimate glycogen concentrations (in g/kg muscle), which are then multiplied by the active muscle mass to yield the total glycogen store in grams. This allows for a more physiologically nuanced estimation of glycogen availability.\n\nInitial Glycogen Storage (g) (Slider):\n\nSets the amount of glycogen (in grams) assumed to be available in the active muscle mass at the very beginning of the simulation. Typical values for well-nourished and trained athletes range from 350-500g, but can be higher with specific carbohydrate loading strategies (Åstrand et al., 2003; Bergström et al., 1967; Murray & Rosenbloom, 2018).\n\nMaximum Glycogen Storage (g) (Slider):\n\nDefines the physiological upper limit for glycogen storage within the active muscle mass. Even with carbohydrate intake during exercise, the glycogen stores will not replete beyond this set maximum.\n\nCarbohydrate Intake Rate (g·h⁻¹):\n\nSets the rate (in grams per hour) at which exogenous carbohydrates (e.g., from sports drinks or gels) are ingested and become available for either direct oxidation by the muscles or for glycogen synthesis (if stores are depleted and conditions allow). Typical maximal exogenous CHO oxidation rates are often cited in the range of 60-90 g/h for single-source carbohydrates like glucose or maltodextrin (Jeukendrup & Wallis, 2005; A. Jeukendrup & Gleeson, 2019). Combinations of multiple transportable carbohydrates (e.g., glucose and fructose) can increase this to 120g/h or even slightly more (Jeukendrup, 2010).\n\n\nThe model calculates glycogen depletion based on the instantaneous rate of carbohydrate oxidation. The CHO oxidation rate itself is derived dynamically at each time step from the balance of \\(vLa_{SS}\\) and \\(vLa_{ox}\\) (as in Tab 1), but applied kinetically over time. If the modeled glycogen stores reach zero, this can trigger a simulation abortion if that termination criterion is implicitly or explicitly active (e.g., inability to maintain power due to substrate depletion).\n\n\nW’ Balance Parameters\nThis section implements a model for W’ (pronounced “W prime”), a concept central to understanding exercise tolerance above a certain metabolic threshold known as Critical Power (CP). W’ represents a finite amount of work that can be performed when exercising at intensities greater than CP (Monod & Scherrer, 1965; Poole et al., 2016; Skiba et al., 2012). Depletion of W’ is closely associated with the onset of severe fatigue and task failure.\n\nCritical Power (CP) (W) (Slider):\n\nDefines the Critical Power, which is, in theory, the highest power output that can be sustained for a very long time without a progressive loss of homeostasis or depletion of W’. It represents a critical metabolic threshold demarcating sustainable from unsustainable exercise intensities.\n\nW’ (kJ) (Slider):\n\nRepresents the total amount of work (expressed in kilojoules) that can be performed above CP before W’ is considered fully depleted. It reflects a combination of anaerobic energy capacity and tolerance for the accumulation of fatigue-related metabolites. Typical W’ values range from 10 to 30 kJ, depending on the individual’s training status and physiological profile.\n\nPmax (W) (Slider):\n\nRepresents the maximum instantaneous power an athlete can produce, typically observed during very short, all-out sprints (e.g., lasting a few seconds). This parameter is integral to the 3-parameter critical power model (which includes Pmax, CP, and W’) and is specifically used in this app for calculating MPA (Maximum Power Available) and the Strain Score (SS). These metrics draw on concepts from researchers like Hauser et al. (2014) and potentially more recent work like Kontro et al. (2025, though not in the provided citation list, the formulas in the HTML align with this type of model). Pmax is considered to represent the power capacity of the alactic (phosphagen/immediate) energy system.\n\nUse MLSS from Tab 1 as CP (Checkbox):\n\nIf checked (this is the default state), the CP value for the Tab 2 simulation is automatically derived from the Maximal Lactate Steady State (MLSS) power output calculated in Tab 1. The app uses the approximation \\(CP \\approx MLSS / 0.95\\), which accounts for the common observation that CP is often slightly higher than MLSS. The CP slider below then becomes disabled but will display this calculated CP value. This option provides a physiologically grounded and individually determined estimate for CP, as MLSS and CP are often found to be closely related, though not always identical (Poole et al., 2016).\n\nW’ Balance Minimum (kJ) (Slider):\n\nAllows the user to define a lower threshold for W’ balance. This can be set to zero (meaning exhaustion occurs when W’ is fully depleted) or even to a negative value, which some models propose might represent a “digging deeper” capacity, though this is less common. The default in the app is -10 kJ.\n\nAbort simulation when W’ Balance falls below slider minimum (Checkbox):\n\nIf checked (default state), the simulation will automatically terminate if the calculated W’BAL (W’ balance) drops below the value specified by the “W’ Balance Minimum” slider.\n\n\nW’ Balance Model Dynamics: The app models W’ balance dynamics based on established principles ((Morton, 2008; Skiba et al., 2012) for general energy system concepts):\n\nDuring exercise at power outputs (P) greater than CP (P &gt; CP), W’ depletes linearly with the work done above CP: \\[ W'_{BAL}(t) = W'_{BAL}(previous\\_t) - (P - CP) \\cdot \\Delta t \\] where \\(W'_{BAL}(t)\\) is W’ balance at current time \\(t\\), \\(W'_{BAL}(previous\\_t)\\) is W’ balance at the previous time step, and \\(\\Delta t\\) is the time interval (1 second in this app).\nDuring exercise at power outputs (P) less than CP (P &lt; CP), W’ recovers exponentially: The rate and extent of W’ recovery depend on the magnitude of the difference between CP and the recovery power (\\(D_{CP} = CP - P_{recovery}\\)) and the total W’ capacity. A common formulation for W’ recovery is: \\[ W'_{BAL}(t) = W'_0 - (W'_0 - W'_{BAL}(previous\\_t)) \\cdot e^{-(D_{CP}/W'_0) \\cdot \\Delta t} \\] where \\(W'_0\\) is the initial (full) W’ capacity.\n\nThe MPA & Strain Score (SS) model, which is also displayed in the plot and summary, uses Pmax and the current W’ balance to provide novel metrics of fatigue and available power. The formulas used in the app’s HTML for MPA and SS are consistent with recent research by Kontro et al. (2025).\n\nMPA (Maximum Power Available): The highest power output theoretically achievable at any given moment, considering the current W’ depletion. \\[ MPA = P_{max} - (P_{max} - CP) \\cdot (W'_{EXP}/W')^2 \\] where \\(W'_{EXP}\\) is the amount of W’ expended (\\(W'_0 - W'_{BAL}\\)).\nkstrain (Strain Coefficient): A factor that modulates the perceived or physiological strain based on the current power output relative to MPA and CP. \\[ k_{strain} = (P_{max} - MPA + CP)/(P_{max} - P + CP) \\]\nSR (Strain Rate): The instantaneous rate at which strain is accumulating. \\[ SR = k_{strain} \\cdot P \\]\nSS (Strain Score): The cumulative strain experienced over the exercise bout. \\[ SS = \\sum(SR \\cdot \\Delta t) \\cdot (\\text{NormalizationFactor}) \\] The Normalization Factor, which appears to be \\((P_{max}/CP^2) \\cdot (100/3600)\\) in the app, scales the score. For instance, a common scaling aims for 1 hour of exercise at CP to yield an SS of 100.\n\n\n\nPCr and O₂ Deficit Model\nThis section of the control panel enables the simulation of phosphocreatine (PCr) dynamics within the active muscle and the associated oxygen deficit that is incurred at the onset of exercise or during transitions to higher exercise intensities. PCr is a crucial high-energy phosphate compound that provides ATP rapidly at the start of muscle contraction before oxidative phosphorylation can fully activate.\n\nResting PCr (mmol·kg⁻¹ wet muscle weight) (Slider):\n\nSets the initial concentration of PCr in the active muscle tissue at the beginning of the simulation. Typical physiological values in healthy, rested human skeletal muscle range from about 15 to 38 mmol·kg⁻¹ wet weight (R. C. Harris et al., 1976; Karlsson, 1971). Training status and muscle fiber type can influence this.\n\nP/O₂ (mol ATP · mol O₂⁻¹) (Slider):\n\nRepresents the P/O₂ ratio, which is the stoichiometry of oxidative phosphorylation: the number of moles of ATP synthesized per mole of diatomic oxygen (O₂) reduced in the mitochondria. This value is not absolutely constant but depends on the substrate being oxidized (e.g., carbohydrates vs. fats) and the coupling efficiency of the electron transport chain. It is generally accepted to be around 2.3-2.5 (or 4.6-5.0 if O refers to O₂, not O atom) when considering NADH and FADH₂ contributions. The app’s range (4.61 for pure fat to 5.0 for pure CHO) reflects O₂ (diatomic oxygen).\n\nActive Muscle Mass (kg) (Slider):\n\nSets the estimated mass (in kilograms) of the skeletal muscle actively involved in performing the cycling exercise. This is a critical parameter because PCr concentrations are typically expressed per kg of muscle mass, and the total PCr pool available is thus dependent on this value. The tooltip in the app provides research-based estimates for active muscle mass in cyclists (e.g., for male cyclists, ~27% of total body weight for seated cycling, potentially increasing to ~31.5% for standing cycling, drawing from MRI data like Janssen et al. (2000) and general exercise physiology considerations).\n\nO₂-Lactate Equiv. (β) (Informational Display Only):\n\nThis is displayed as a constant value of approximately 3.0 ml O₂·kg⁻¹ body mass·mM⁻¹ blood lactate. This represents the “oxygen equivalent of lactate accumulation,” signifying the amount of O₂ (in ml per kg of body mass) that would have been required aerobically to produce the energy equivalent to accumulating 1 mM of lactate in the blood. This concept, extensively detailed by Di Prampero (1981), is used in the model to help partition the overall O₂ deficit into components covered by PCr breakdown and by net lactate production.\n\nShow \\(\\dot{V}O_2\\) Demand Curve (Checkbox):\n\nIf checked, the simulation plot will include an additional trace representing the theoretical, instantaneous \\(\\dot{V}O_2\\) demand required to meet the energy cost of the current power output if metabolism could respond infinitely fast. The area between this demand curve and the actual (kinetically-limited) \\(\\dot{V}O_2\\) curve visually represents the accumulated oxygen deficit (when demand &gt; uptake) or oxygen surplus (during recovery when uptake &gt; demand).\n\n\nPCr Model Dynamics: The simulation models changes in the PCr store based on the dynamic balance between O₂ demand and actual O₂ uptake, incorporating a sophisticated partitioning of the O₂ deficit.\n\nPCr Depletion: When \\(\\dot{V}O_2\\) demand exceeds actual \\(\\dot{V}O_2\\) uptake, an O₂ deficit occurs. The model first calculates the portion of this deficit that is covered by the energy equivalent of gross lactate production (derived from \\(vLa_{SS}\\)). The remaining O₂ deficit is then attributed to the alactic system and is covered by the net breakdown of PCr to rapidly resynthesize ATP. The amount of PCr consumed is thus proportional to this residual deficit, scaled by the P/O₂ ratio. \\[ \\Delta PCr_{consumed} \\propto (\\text{Total O2 Deficit} - \\text{O2 Equiv. of Gross Lactate Production}) \\cdot (P/O_2 \\text{ ratio}) \\]\nPCr Resynthesis: When actual \\(\\dot{V}O_2\\) uptake exceeds demand (creating an O₂ surplus), PCr is resynthesized. The efficiency of this process is not constant. The app implements a dynamic resynthesis factor that depends on the recovery intensity. If the recovery power is above MLSS, no PCr is resynthesized. If it is below MLSS, the resynthesis efficiency increases as the recovery power drops further towards resting levels. This reflects the physiological principle that PCr resynthesis is more effective during very low-intensity or passive recovery. The amount of PCr resynthesized is then proportional to the O₂ surplus, scaled by this dynamic factor and the P/O₂ ratio. \\[ \\Delta PCr_{resynthesized} \\propto (\\text{O2 Surplus} \\cdot \\text{Dynamic Resynthesis Factor}) \\cdot (P/O_2 \\text{ ratio}) \\] The accumulated O₂ deficit represents the total integrated difference between oxygen demand and oxygen uptake from the start of exercise. It reflects the cumulative reliance on anaerobic energy sources (PCr hydrolysis and anaerobic glycolysis leading to lactate production) to meet the energy demands not immediately covered by aerobic metabolism. The kinetics of PCr are often faster than those of \\(\\dot{V}O_2\\) (McCann et al., 1995).\n\n\n\nModel Parameters (for Tab 2 Simulation)\nThis section provides the user with flexibility in defining the core physiological parameters for the dynamic simulation. The user can either link these parameters directly to those defined in Tab 1 (P-V̇O₂-La Dynamics) or set them independently for the simulation.\n\nUse model parameters from Tab 1 (Checkbox):\n\nChecked (Default State): When this box is checked, the fundamental physiological parameters for the Tab 2 simulation—including \\(CE\\) (or \\(CE_{Start}\\)/\\(CE_{Target}\\) if curvilinear), \\(\\dot{V}O_{2,max}\\), \\(\\dot{V}O_{2,Base}\\), \\(vLa_{max}\\), Body Mass, and all HR-related parameters (HRmax, HRBase, CEHR), as well as the curvilinear CE setting—are directly mirrored from their current values in Tab 1. The individual parameter sliders located below this checkbox in the “Individual Parameters” section will then become disabled (greyed out) but will visually reflect the values being imported from Tab 1. This is the recommended approach if the user wants to simulate the dynamic responses of an individual whose steady-state profile has already been established or explored in Tab 1. Any subsequent changes made to these parameters in Tab 1 will automatically propagate to these linked parameters in Tab 2, ensuring consistency.\nUnchecked: If this box is unchecked, the linkage to Tab 1 is broken. The individual parameter sliders in the “Individual Parameters” section (detailed below) become active, allowing the user to define a completely independent set of physiological parameters specifically for the Tab 2 simulation. This is useful if one wants to explore hypothetical scenarios or simulate an individual with a different profile without altering the settings in Tab 1.\n\nIndividual Parameter Sliders (within the “Individual Parameters” collapsible section): These sliders are active only if “Use model parameters from Tab 1” is unchecked. They allow for independent setting of:\n\nCurvilinear CE relationship (Checkbox): Toggles between linear and curvilinear P-\\(\\dot{V}O_2\\) models for the simulation.\nCE (ml·min⁻¹·W⁻¹) (Slider): For the linear CE model.\nCEStart / CETarget (ml·min⁻¹·W⁻¹) (Sliders): For the curvilinear CE model.\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹) (Slider)\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹) (Slider)\nvLamax (mmol·l⁻¹·s⁻¹) (Slider)\nBody Mass (kg) (Slider)\nHRmax (bpm) (Slider)\nHRBase (bpm) (Slider)\nCEHR (bpm·W⁻¹) (Slider) These function identically to their counterparts in Tab 1 but only affect the Tab 2 simulation when the link to Tab 1 is disabled.\n\n\n\n\n\nExercise Simulation Plot (Tab 2)\nThis is a dynamic, multi-trace plot that visualizes various simulated physiological and performance parameters over the time course of the defined exercise protocol. It allows for a comprehensive view of how different systems respond and interact.\n\nX-Axis: Time (in seconds). The range of this axis can be manually adjusted using the “Display Window Settings” in the sidebar to focus on specific periods of the simulation.\nPrimary Y-Axis (Left side of plot - typically denoted as y): This axis displays parameters primarily related to power output, mechanical aspects of movement, and some physiological stores.\n\nPower (W) (Dark Grey Line): The instantaneous power output of the simulated exercise protocol at each second.\nCadence (rpm) (Light Grey Dashed Line): Displayed if cadence data is available (either from a loaded file when “Use cadence from file” is active, or the fixed cadence value if cadence dependency is enabled without file data).\nMPA (W) (Dark Grey-Blue Dashed Line): Maximum Power Available, a dynamic value calculated from the W’ balance model and Pmax, representing the highest power output theoretically achievable at that moment.\nStrain Score (Unitless) (Pink Line): The cumulative Strain Score, reflecting the integrated physiological strain based on the MPA model.\nGlycogen Stores (g) (Dark Pink Dotted Line): The modeled content of glycogen in the active muscle mass, showing depletion during exercise and potential repletion if carbohydrate intake is simulated.\n\nSecondary Y-Axis (Right side of plot - typically y2): This axis is designed to display a variety of scaled parameters, often with different units, requiring careful interpretation of their respective scales. It commonly includes:\n\nW’ Balance (kJ) (Green Line): The current remaining W’ balance.\nLactate (Muscle) (mM) (Dark Red Line): Modeled intramuscular lactate concentration.\nLactate (Blood) (mM) (Dark Red Dotted Line): Modeled blood lactate concentration, typically from a two-compartment model (muscle and blood/other tissues).\nvLaSS (mM/min) (Red Dashed Line): The instantaneous rate of lactate production (converted from mmol·l⁻¹·s⁻¹).\nvLaox (mM/min) (Light Blue Dashed Line): The instantaneous rate of lactate oxidation/elimination.\nPD (Pyruvate Deficit) (mM/min) (Purple Line): The dynamic difference \\(vLa_{ox} - vLa_{SS}\\).\nPCr Store (mM/kg) (Yellow Dotted Line): Modeled phosphocreatine concentration in the active muscle.\npHm (Unitless) (Orange Dotted Line): Modeled intramuscular pH.\nRQpredicted ⋅ 10 (Unitless) (Yellow-Orange Dashed Line): The kinetically-smoothed predicted Respiratory Quotient, scaled by a factor of 10 for better visibility on this shared axis (actual RQ values typically range from 0.7 to 1.0, potentially slightly higher during very intense exercise).\nHeart Rate ⋅ 10⁻¹ (bpm) (Dark Green Dotted Line): The simulated heart rate, scaled by a factor of 0.1 for plotting convenience (e.g., a heart rate of 150 bpm would be plotted at a Y-value of 15).\nZero Line (Thin Grey Dotted Line): A horizontal reference line at y=0 for this axis, useful for interpreting parameters like PD or W’ balance relative to baseline.\n\nTertiary Y-Axis (Right side, typically positioned further out - y3): This axis is dedicated to displaying oxygen uptake parameters.\n\n\\(\\dot{V}O_2\\) (ml/min) (Blue Line): The actual, kinetically-determined oxygen uptake at each second of the simulation.\n\\(\\dot{V}O_2\\) Demand (ml/min) (Blue Dotted Line): (Visible if “Show \\(\\dot{V}O_2\\) Demand Curve” is checked in the PCr model settings) The theoretical instantaneous \\(\\dot{V}O_2\\) that would be required to meet the energy cost of the current power output if metabolic processes could respond infinitely fast.\nO₂ Deficit Area (Light Blue Filled Area): (Visible if the \\(\\dot{V}O_2\\) Demand curve is shown) The shaded area between the \\(\\dot{V}O_2\\) Demand curve and the actual \\(\\dot{V}O_2\\) curve. This visually represents the accumulated oxygen deficit (when demand &gt; uptake) or oxygen surplus (during recovery phases when uptake &gt; demand).\nAcc. O₂ Deficit (ml) (Cyan Dotted Line): The cumulative net oxygen deficit (Total O2 Demand - Total O2 Uptake) over time.\n\n\nUsers can interact with the plot legend by clicking on trace names. This action toggles the visibility of the corresponding trace on the plot, allowing users to focus on specific parameters of interest or to declutter the view. If the simulation is terminated prematurely due to one of the set abort conditions (e.g., lactate exceeding threshold, W’ balance dropping below minimum, glycogen depletion, or complete PCr depletion), an annotation will typically appear on the plot marking the point and reason for termination.\n\n\nExercise Summary Statistics (Tab 2)\nLocated below the simulation plot, this section provides a detailed quantitative summary of the entire simulated exercise session, offering insights into overall workload, energy expenditure, fuel utilization, and various performance metrics.\n\nAverage mechanical Power (W): The time-weighted average of the power output over the duration of the simulation.\nNormalized mechanical Power (W): A power averaging method designed to provide a more physiologically relevant measure of training stress than simple average power, especially for workouts with variable intensity. It typically involves calculating a 30-second rolling average of power, raising these values to the 4th power, averaging these transformed values, and then taking the 4th root of that average. This gives more weight to higher intensity portions.\nTotal Aerobic Energy Expenditure (kcal): The gross (total) energy expended via aerobic pathways throughout the entire simulation. This is calculated from the integral of the \\(\\dot{V}O_2\\) curve over time, converted to energy units using an average caloric equivalent for oxygen (derived from the average predicted RQ over the session).\nTotal mechanical Work (kJ): The sum of (Power × time_interval) for all 1-second intervals of the simulation, converted to kilojoules. This represents the total external work performed.\nTotal metabolic Work (kJ): The sum of the net energy contributions from the three major energy systems: net aerobic metabolism, anaerobic-lactic metabolism, and anaerobic-alactic metabolism. This represents the total energy turnover above resting levels required to perform the exercise.\n\nAerobic contribution (kJ | %): The energy derived from net aerobic metabolism. This is calculated by integrating the actual \\(\\dot{V}O_2\\) curve, subtracting the integrated energy cost equivalent to maintaining \\(\\dot{V}O_{2,Base}\\) for the duration, and converting the net O₂ consumed to kJ. The percentage is relative to the Total Metabolic Work.\nAnaerobic-lactic contribution (kJ | %): The energy derived from net lactate production. This is estimated from the O₂ equivalent of gross lactate production (calculated from the integrated \\(vLa_{SS}\\) kinetics), using factors like the β-coefficient (O₂-Lactate Equiv.) to convert lactate changes into energy equivalents.\nAnaerobic-alactic contribution (kJ | %): The energy derived from the net breakdown of phosphocreatine (PCr). This is estimated from the O₂ equivalent of the total PCr utilized during the exercise bout, based on the P/O₂ ratio.\n\nηgross (%): Overall gross efficiency for the entire session, calculated as: \\[ \\eta_{gross} = (\\text{Total Mechanical Work [kJ]}) / (\\text{Total Gross Aerobic Energy Expenditure [kJ]}) \\times 100\\% \\]\nηnet (%): Overall net efficiency for the entire session, calculated as: \\[ \\eta_{net} = (\\text{Total Mechanical Work [kJ]}) / (\\text{Net Aerobic Energy Expenditure [kJ]}) \\times 100\\% \\] Where net aerobic energy expenditure excludes the energy cost associated with maintaining \\(\\dot{V}O_{2,Base}\\).\nηtotal (%): Overall total efficiency, considering all energy pathways in the denominator: \\[ \\eta_{total} = (\\text{Total Mechanical Work [kJ]}) / (\\text{Total Metabolic Work [kJ]}) \\times 100\\% \\]\nWork &gt; CP (mechanical) (kJ): The total amount of mechanical work (in kJ) performed during periods where the instantaneous power output was above the set Critical Power (CP).\nW’ Balance Drop (kJ): The difference between the initial W’ value (at the start of the simulation) and the minimum W’ balance reached at any point during the exercise.\nTotal Carbohydrate Utilization (g): The total mass of carbohydrates (in grams) estimated to have been oxidized during the simulation, based on the integrated CHO oxidation rate.\nTotal Fat Utilization (g): The total mass of fats (in grams) estimated to have been oxidized during the simulation.\nTraining Stress Score (TSS): An estimation of the overall training load or stress imposed by the simulated workout. It is typically calculated using Normalized Power, the duration of the exercise, and the individual’s Functional Threshold Power (FTP), for which the app uses the set Critical Power (CP) as a proxy. A common formula is: \\[ TSS = (\\text{Duration in seconds} \\cdot \\text{Normalized Power} \\cdot \\text{Intensity Factor}) / (\\text{FTP} \\cdot 3600) \\cdot 100 \\] Where Intensity Factor (IF) = Normalized Power / FTP.\nStrain Score (SS): The total cumulative Strain Score accumulated during the simulation, based on the model by Kontro et al. (2025), which considers Pmax, CP, and W’ dynamics.\n\nSSCP: The component of the total Strain Score attributed to work performed at or below CP.\nSSW’: The component of the total Strain Score attributed to the utilization of W’ (work above CP).\nSSPmax: The component of the total Strain Score attributed to very high power outputs that draw upon the Pmax capacity.\n\n\nThis comprehensive suite of tools, visualizations, and summary statistics offers a powerful platform for students, coaches, athletes, and researchers to explore, understand, and quantify the complex interplay of metabolic processes during various forms of exercise.",
    "crumbs": [
      "Metabolic Model Apps",
      "Metabolic Simulation"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_App_Theory.html",
    "href": "Metabolic_Model_Apps/Mader_App_Theory.html",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "",
    "text": "The precise quantification of energy released and conserved during carbohydrate metabolism is fundamental to understanding exercise physiology and cellular bioenergetics. Different textbooks and research articles may present slightly varying values due to differing assumptions about standard states, cellular conditions, and the specific pathways or efficiencies considered. This section aims to compare and elucidate the energy yields from glucose and glycogen breakdown as presented in key literature, including Stegemann (1991), Brooks (2012), Åstrand et al. (2003), and Nelson & Cox (2012), with significant contributions and context provided by the comprehensive review of Di Prampero (1981). This review by Di Prampero (1981) is particularly valuable as it synthesizes experimental data from that era and provides a framework for understanding the energetics of muscular exercise under various conditions.\n\n\nAnaerobic glycolysis is the metabolic pathway that converts glucose (or glucosyl units from glycogen) into pyruvate, and subsequently into lactate under anaerobic conditions, with a net production of ATP. This pathway is crucial for rapid energy supply, especially when oxygen availability is limited, such as during high-intensity exercise. Di Prampero (1981, S. 171, Sect. 6.1) dedicates an entire section to the “Lactic Mechanism,” underscoring its importance. He notes that “When the intensity of the exercise exceeds VO₂max, a substantial accumulation of lactic acid (La) in blood takes place. Under these conditions the exercise comes to an end when the blood La has reached a concentration of the order of 16–17 mM in non-athletic subjects.” This highlights the capacity limitation of this pathway.\n\n\nThe overall conversion of glucose to lactate is an exergonic process, releasing a significant amount of free energy, which can then be partially conserved in ATP.\n\nAccording to Stegemann (1991, S. 36, Gleichung 10), the direct conversion from glucose to lactate has a standard free energy change of: \\[\n\\text{C}_6\\text{H}_{12}\\text{O}_6 \\text{ (Glucose)} \\rightarrow 2 \\text{ C}_3\\text{H}_6\\text{O}_3 \\text{ (Lactate)} \\quad (\\Delta G'^\\circ = -199 \\text{ kJ/mol glucose})\n\\tag{1}\\] This value indicates the total exergonic drive of the anaerobic breakdown of glucose to lactate.\nNelson & Cox (2012) [S. 546, Eq. 14-1 & 14-3; S. 563] detail this process in two main stages for calculation:\n\nGlycolysis to pyruvate (the exergonic part, excluding ATP formation for this specific ΔG component): \\[\n\\text{Glucose} + 2\\text{NAD}^+ \\rightarrow 2\\text{ Pyruvate} + 2\\text{NADH} + 2\\text{H}^+ \\quad (\\Delta G_1'^\\circ = -146 \\text{ kJ/mol})\n\\] (This is derived from Nelson & Cox (2012, S. 546, Eq. 14-2)).\nReduction of pyruvate to lactate (occurring twice per initial glucose molecule): \\[\n\\text{Pyruvate} + \\text{NADH} + \\text{H}^+ \\leftrightarrow \\text{L-Lactate} + \\text{NAD}^+ \\quad (\\Delta G_2'^\\circ = -25.1 \\text{ kJ/mol})\n\\] (From Nelson & Cox (2012, S. 563)). This reaction is crucial for regenerating NAD⁺ from NADH, allowing glycolysis to continue under anaerobic conditions, a point also emphasized by Di Prampero (1981, S. 172) when he states, “The excess pyruvate is reduced to La and the resulting oxidation of NADH to NAD allows glycolysis to continue.” The overall standard free-energy change for glucose to lactate according to Nelson & Cox (2012) is the sum: \\[\n\\Delta G'_{\\text{glucose} \\rightarrow \\text{lactate}} = \\Delta G_1'^\\circ + 2 \\times \\Delta G_2'^\\circ = -146 \\text{ kJ/mol} + 2 \\times (-25.1 \\text{ kJ/mol}) = -196.2 \\text{ kJ/mol glucose}\n\\tag{2}\\] This calculated value aligns very closely with the -199 kJ/mol reported by Stegemann (1991).\n\n\n\n\n\nFrom Free Glucose:\nThe net production of ATP when starting from free glucose is a cornerstone of basic biochemistry.\n\nStegemann (S. 36): Details the process involving an initial investment of 2 ATP and a subsequent generation of 4 ATP, resulting in a net yield of: \\[\n4 \\text{ ATP (produced)} - 2 \\text{ ATP (consumed)} = \\mathbf{2 \\text{ ATP (net) per glucose}}\n\\] Using Stegemann’s value of 30.5 kJ/mol for ATP hydrolysis under physiological conditions (ΔG ≈ -30.5 kJ/mol, (Stegemann, 1991, S. 34, Eq. 7)), the energy conserved is 61 kJ per mol glucose. This represents an efficiency of approximately 30.7% ((61 kJ / 199 kJ) * 100%).\nNelson & Cox (p. 545, Fig. 14-2; p. 555): Clearly illustrate and state a net yield of 2 ATP per molecule of glucose. The overall balanced equation for anaerobic glycolysis to lactate is: \\[\n\\text{Glucose} + 2\\text{ADP} + 2\\text{P}_\\text{i} \\rightarrow 2\\text{ Lactate} + 2\\text{ATP} + 2\\text{H}_2\\text{O}\n\\]\nBrooks (2012): “1.0 ATP is produced per lactate anion accumulated when glucose is the precursor.” This implies 2 \\times 1.0 \\text{ ATP} = \\mathbf{2 \\text{ ATP per glucose}}.\nDi Prampero (1981, S. 151, Table 1): In this table, which summarizes ATP yield per unit of fuel or O₂ based on data from McGilvery (1975), “Glucose → Lactate” is listed as yielding 2 ~P/mol fuel. The symbol “~P” denotes a high-energy phosphate bond, equivalent to one molecule of ATP.\n\nThere is thus universal agreement across these sources for a net gain of 2 ATP molecules from the anaerobic glycolysis of one molecule of free glucose to two molecules of lactate.\nFrom Glycogen (Glucosyl Units):\nStarting glycolysis from stored glycogen offers a slight energetic advantage.\n\nStegemann (S. 36): “Wird Laktat aus Glykogen erzeugt, so wird bezogen auf 1mol Glukose – 1 mol ATP mehr, also 3 mol ATP, gewonnen.” (If lactate is produced from glycogen, 1 mol more ATP is gained compared to 1 mol of glucose, thus 3 mol ATP). This is because the first ATP-consuming step, the phosphorylation of glucose to glucose 6-phosphate by hexokinase, is bypassed. Glycogen phosphorylase uses inorganic phosphate (Pᵢ) for phosphorolytic cleavage of glucosyl units. The net yield is: \\[\n4 \\text{ ATP (produced)} - 1 \\text{ ATP (consumed for fructose 6-P phosphorylation)} = \\mathbf{3 \\text{ ATP (net) per glucosyl unit}}\n\\]\nNelson & Cox (p. 558, Worked Example 14-1): Clearly explain that starting from glycogen saves 1 ATP in the preparatory phase, leading to a net yield of 3 ATP per glucose monomer from glycogen.\nBrooks (2012): “1.5 ATP is produced per lactate anion accumulated when glycogen is the precursor.” Since one glucosyl unit from glycogen forms two lactate anions, the yield per glucosyl unit is 2 \\times 1.5 \\text{ ATP} = \\mathbf{3 \\text{ ATP}}.\nDi Prampero (1981, S. 151, Table 1): Consistent with the other sources, lists “Glycogen → Lactate” as yielding 3 ~P/mol glucosyl unit. This translates to 1.5 ATP per mole of lactate formed from glycogen, a ratio that Di Prampero (1981) explicitly uses in subsequent calculations for the energy equivalent of lactate (Di Prampero, 1981, S. 182).\n\nThe consensus is firm: 3 net ATP molecules are gained when one glucosyl unit from glycogen is anaerobically converted to two molecules of lactate.\n\n\n\nThe actual energy (ΔG) available from ATP hydrolysis under cellular conditions is crucial for accurate bioenergetic modeling.\n\nStandard Free Energy Change (ΔG’°): Typically cited as approximately -30.5 kJ/mol for ATP → ADP + Pᵢ (Stegemann, 1991, S. 34, Eq. 7; Nelson & Cox, 2012, S. 519, Table 13-6).\nActual Free Energy Change (ΔG) in vivo: This value is significantly more negative and variable than ΔG’° due to the actual intracellular concentrations of ATP, ADP, Pᵢ, and Mg²⁺, as well as pH. Nelson & Cox (2012, S. 519) suggest a typical range of -50 to -65 kJ/mol. Di Prampero (1981, S. 156, Fig. 2a) provides a graphical representation showing ΔGATP as a function of PCr and ATP concentrations. At rest (e.g., PCr ≈ 18-22 mmol/kg muscle, ATP ≈ 5 mmol/kg), ΔGATP is estimated to be around -50 to -52 kJ/mol. During intense exercise, as PCr is depleted (e.g., to ~3.5-4 mmol/kg), ΔGATP can decrease to approximately -44 kJ/mol. This dynamic behavior is important but often simplified in models by using an average physiological value.\nYour Model’s Global Constant: DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ = 50.0; This value is a well-chosen representative for the actual physiological free energy change (ΔG) of ATP hydrolysis, consistent with the range depicted by Di Prampero (1981) for contracting muscle.\nÅstrand et al. (2003, S. 33): Provides an important conceptual clarification: “Die Energie liegt nicht in der Bindung selbst, sondern in der freien Energie, die verfügbar wird, wenn über Abspaltung von anorganischem Phosphat das ATP in die energieärmere Verbindung Adenosindiphosphat (ADP) übergeht.”\n\n\n\n\nUnderstanding the total energy associated with lactate formation requires comparing the ATP-conserved energy with the overall free energy change of the pathway.\n\nÅstrand’s (2003) Value (citing Di Prampero (1981)): States that approximately 110 kJ/mol lactate is released when glycogen is converted to lactate (derived from ~220 kJ per glucosyl unit, which forms 2 lactate). This likely represents the total exergonic drive (ΔG’°) of the pathway per mole of lactate.\nDi Prampero (1981)’s Calculation of α (Energy Equivalent of Lactate Formation in vivo, S. 182): Di Prampero provides a detailed derivation for α, the energy equivalent of lactate formation, by linking it to aerobic metabolism. He assumes that the ATP yield per mole of lactate from glycogen is 1.5, and per mole of O₂ during glycogen oxidation is 6.2 (both from McGilvery (1975) data in his Table 1). The enthalpy change for O₂ consumption during glycogen oxidation (ΔHO₂) is taken as 469 kJ/mol O₂. The formula used is: \\[\n\\alpha = \\Delta H_{\\text{O}_2, \\text{glycogen}} \\times \\frac{\\text{mol ATP per mol La (from glycogen)}}{\\text{mol ATP per mol O}_2 \\text{ (glycogen oxidation)}}\n\\] Substituting the values: \\[\n\\alpha = 469 \\text{ kJ/mol O}_2 \\times \\frac{1.5 \\text{ mol ATP/mol La}}{6.2 \\text{ mol ATP/mol O}_2} \\approx \\mathbf{113 \\text{ kJ/mol La}}\n\\tag{3}\\] Di Prampero (1981, S. 182) notes this is an enthalpy-based equivalent and that other estimations place the value around 100 kJ/mol La. He further clarifies the utility: “Regardless of the correct interpretation of α its value allows one to calculate that, in vivo, the resynthesis of ATP requires approximately the same amount of energy from glycolytic sources (100/1.5 = 67 kJ/mol) as from oxidative sources (469/6.2 = 76 kJ/mol).” This calculation of “energy per mole of ATP equivalent” via different pathways is insightful for comparing efficiencies.\nYour Model (75 kJ/mol Lactate as ATP-equivalent): Based on 1.5 mol ATP/mol Lactate * 50.0 kJ/mol ATP = 75 kJ/mol Lactate. This 75 kJ/mol represents the portion of the total energy change that is directly conserved in the high-energy phosphate bonds of ATP and is readily available for cellular work. The difference between the ~113 kJ/mol (di Prampero’s α) or ~110 kJ/mol (Åstrand) and your model’s 75 kJ/mol is primarily due to the thermodynamic inefficiency of glycolysis; a substantial portion of the total free energy released is dissipated as heat. For your model’s purpose of quantifying the ATP-mediated energy available to cover an O₂ deficit, the 75 kJ/mol is the appropriate, internally consistent value.\n\n\n\n\n\nComplete oxidation of glucose to CO₂ and H₂O via glycolysis, the pyruvate dehydrogenase complex, the citric acid cycle, and oxidative phosphorylation yields a much larger amount of ATP.\n\nOverall Reaction and Free Energy Change:\n\nStegemann (1991, S. 43, Gleichung 21): \\[\n\\text{C}_6\\text{H}_{12}\\text{O}_6 + 6\\text{O}_2 \\rightarrow 6\\text{CO}_2 + 6\\text{H}_2\\text{O} \\quad (\\Delta G = -2869 \\text{ kJ/mol glucose})\n\\]\nNelson & Cox (2012, S. 543): States the standard free-energy change is -2,840 kJ/mol glucose.\n\n\n\n\nThe P/O₂ ratio (moles of ATP synthesized per mole of atomic oxygen (O), or per ½ O₂ molecule, consumed) is a key determinant of the overall ATP yield.\n\nDi Prampero (1981; S. 151, Table 1, values from McGilvery, 1975): This table reflects older, generally higher, P/O ratio conventions:\n\nGlucose → CO₂ + H₂O: 6.0 mol ~P (ATP) / mol O₂. Since 6 moles of O₂ are consumed per mole of glucose, this implies 6 mol O₂ * 6.0 mol ATP/mol O₂ = 36 ATP per glucose.\nGlycogen → CO₂ + H₂O: 6.2 mol ~P (ATP) / mol O₂. This implies 6 mol O₂ * 6.2 mol ATP/mol O₂ = 37.2 ≈ 37 ATP per glucosyl unit.\nFFA → CO₂ + H₂O: 5.6 mol ~P (ATP) / mol O₂. Di Prampero (1981, S. 169, Eq. 15) also provides an empirical formula for the P/O₂ ratio (denoted ‘c’) as a function of the respiratory quotient (RQ): \\[\nc = \\text{P/O}_2 = 4.13 + 2.07 \\times \\text{RQ}\n\\tag{4}\\] For pure carbohydrate oxidation (RQ = 1.0), this yields c = 4.13 + 2.07 * 1.0 = 6.20 mol ATP/mol O₂, matching his Table 1 value for glycogen. For pure fat oxidation (RQ ≈ 0.71), it yields c ≈ 5.60 mol ATP/mol O₂, also matching his Table 1. This equation allows for a dynamic P/O₂ based on substrate mixture.\n\nModern Estimates (e.g., Nelson & Cox (2012, S. 759, Table 19-5)): Current biochemical understanding leads to lower P/O ratios, approximately 2.5 ATP per NADH and 1.5 ATP per FADH₂ oxidized in the electron transport chain. This results in a total yield of 30 or 32 ATP molecules per glucose molecule, depending on the efficiency of the shuttle system used to transport cytosolic NADH electrons into the mitochondria.\nYour Model’s P/O₂ Ratios (as defined in your app’s Quarto documentation):\n\nP/O2,KH = 5.0 [mol ATP / mol O₂] (for carbohydrates). This corresponds to 30 ATP / 6 O₂ per glucose.\nP/O2,Fett = 4.61 [mol ATP / mol O₂] (for fats, e.g., from 106 ATP / 23 O₂ for palmitate according to Nelson & Cox (2012, S. 675)). It is crucial to use these modern, lower P/O₂ ratios consistently throughout your model for calculations involving aerobic ATP resynthesis (e.g., PCr recovery, aerobic energy contribution in the summary) to maintain alignment with current biochemical consensus as represented by texts like Nelson & Cox (2012).\n\n\n\n\n\n\nPCr acts as an immediate buffer for ATP during high-intensity muscle contraction.\n\nLohmann Reaction (Stegemann (1991, S. 34); Nelson & Cox (2012, S. 526)): \\[\n\\text{ADP} + \\text{PCr} \\stackrel{\\text{Creatin-Kinase}}{\\rightleftharpoons} \\text{ATP} + \\text{Cr}\n\\] The standard free energy change (ΔG’°) for PCr hydrolysis (PCr + H₂O → Creatine + Pᵢ) is approximately -43 kJ/mol (Nelson & Cox, 2012, S. 526). This exergonic reaction drives the endergonic phosphorylation of ADP. Di Prampero (1981, S. 150) highlights the Lohmann reaction as the primary mechanism for ATP rephosphorylation when oxidative phosphorylation and anaerobic glycolysis are insufficient or too slow, such as at the very onset of exercise or during maximal short bursts. His Fig. 2a (Di Prampero, 1981, S. 156) shows the ΔGATP maintained around -50 kJ/mol by this buffering action until PCr stores are significantly depleted.\nYour Model’s Energetic Contribution of PCr: The calculation kJ_per_mmol_PCr = DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ / 1000.0; combined with DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ = 50.0 kJ/mol ATP correctly implies that each mole of PCr consumed effectively provides 50 kJ of usable energy by regenerating one mole of ATP, which itself yields 50 kJ upon hydrolysis. This is a consistent and physiologically relevant approach for modeling the alactic energy contribution.\n\nThis comprehensive comparison integrates data and concepts from Di Prampero (1981) with other key literature, providing a robust framework for the energetic parameters used in your metabolic simulation. The consistent application of your defined DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ and the modern P/O₂ ratios is paramount for internal model consistency."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_App_Theory.html#anaerobic-glycolysis-glucoseglycogen-to-lactate",
    "href": "Metabolic_Model_Apps/Mader_App_Theory.html#anaerobic-glycolysis-glucoseglycogen-to-lactate",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "",
    "text": "Anaerobic glycolysis is the metabolic pathway that converts glucose (or glucosyl units from glycogen) into pyruvate, and subsequently into lactate under anaerobic conditions, with a net production of ATP. This pathway is crucial for rapid energy supply, especially when oxygen availability is limited, such as during high-intensity exercise. Di Prampero (1981, S. 171, Sect. 6.1) dedicates an entire section to the “Lactic Mechanism,” underscoring its importance. He notes that “When the intensity of the exercise exceeds VO₂max, a substantial accumulation of lactic acid (La) in blood takes place. Under these conditions the exercise comes to an end when the blood La has reached a concentration of the order of 16–17 mM in non-athletic subjects.” This highlights the capacity limitation of this pathway.\n\n\nThe overall conversion of glucose to lactate is an exergonic process, releasing a significant amount of free energy, which can then be partially conserved in ATP.\n\nAccording to Stegemann (1991, S. 36, Gleichung 10), the direct conversion from glucose to lactate has a standard free energy change of: \\[\n\\text{C}_6\\text{H}_{12}\\text{O}_6 \\text{ (Glucose)} \\rightarrow 2 \\text{ C}_3\\text{H}_6\\text{O}_3 \\text{ (Lactate)} \\quad (\\Delta G'^\\circ = -199 \\text{ kJ/mol glucose})\n\\tag{1}\\] This value indicates the total exergonic drive of the anaerobic breakdown of glucose to lactate.\nNelson & Cox (2012) [S. 546, Eq. 14-1 & 14-3; S. 563] detail this process in two main stages for calculation:\n\nGlycolysis to pyruvate (the exergonic part, excluding ATP formation for this specific ΔG component): \\[\n\\text{Glucose} + 2\\text{NAD}^+ \\rightarrow 2\\text{ Pyruvate} + 2\\text{NADH} + 2\\text{H}^+ \\quad (\\Delta G_1'^\\circ = -146 \\text{ kJ/mol})\n\\] (This is derived from Nelson & Cox (2012, S. 546, Eq. 14-2)).\nReduction of pyruvate to lactate (occurring twice per initial glucose molecule): \\[\n\\text{Pyruvate} + \\text{NADH} + \\text{H}^+ \\leftrightarrow \\text{L-Lactate} + \\text{NAD}^+ \\quad (\\Delta G_2'^\\circ = -25.1 \\text{ kJ/mol})\n\\] (From Nelson & Cox (2012, S. 563)). This reaction is crucial for regenerating NAD⁺ from NADH, allowing glycolysis to continue under anaerobic conditions, a point also emphasized by Di Prampero (1981, S. 172) when he states, “The excess pyruvate is reduced to La and the resulting oxidation of NADH to NAD allows glycolysis to continue.” The overall standard free-energy change for glucose to lactate according to Nelson & Cox (2012) is the sum: \\[\n\\Delta G'_{\\text{glucose} \\rightarrow \\text{lactate}} = \\Delta G_1'^\\circ + 2 \\times \\Delta G_2'^\\circ = -146 \\text{ kJ/mol} + 2 \\times (-25.1 \\text{ kJ/mol}) = -196.2 \\text{ kJ/mol glucose}\n\\tag{2}\\] This calculated value aligns very closely with the -199 kJ/mol reported by Stegemann (1991).\n\n\n\n\n\nFrom Free Glucose:\nThe net production of ATP when starting from free glucose is a cornerstone of basic biochemistry.\n\nStegemann (S. 36): Details the process involving an initial investment of 2 ATP and a subsequent generation of 4 ATP, resulting in a net yield of: \\[\n4 \\text{ ATP (produced)} - 2 \\text{ ATP (consumed)} = \\mathbf{2 \\text{ ATP (net) per glucose}}\n\\] Using Stegemann’s value of 30.5 kJ/mol for ATP hydrolysis under physiological conditions (ΔG ≈ -30.5 kJ/mol, (Stegemann, 1991, S. 34, Eq. 7)), the energy conserved is 61 kJ per mol glucose. This represents an efficiency of approximately 30.7% ((61 kJ / 199 kJ) * 100%).\nNelson & Cox (p. 545, Fig. 14-2; p. 555): Clearly illustrate and state a net yield of 2 ATP per molecule of glucose. The overall balanced equation for anaerobic glycolysis to lactate is: \\[\n\\text{Glucose} + 2\\text{ADP} + 2\\text{P}_\\text{i} \\rightarrow 2\\text{ Lactate} + 2\\text{ATP} + 2\\text{H}_2\\text{O}\n\\]\nBrooks (2012): “1.0 ATP is produced per lactate anion accumulated when glucose is the precursor.” This implies 2 \\times 1.0 \\text{ ATP} = \\mathbf{2 \\text{ ATP per glucose}}.\nDi Prampero (1981, S. 151, Table 1): In this table, which summarizes ATP yield per unit of fuel or O₂ based on data from McGilvery (1975), “Glucose → Lactate” is listed as yielding 2 ~P/mol fuel. The symbol “~P” denotes a high-energy phosphate bond, equivalent to one molecule of ATP.\n\nThere is thus universal agreement across these sources for a net gain of 2 ATP molecules from the anaerobic glycolysis of one molecule of free glucose to two molecules of lactate.\nFrom Glycogen (Glucosyl Units):\nStarting glycolysis from stored glycogen offers a slight energetic advantage.\n\nStegemann (S. 36): “Wird Laktat aus Glykogen erzeugt, so wird bezogen auf 1mol Glukose – 1 mol ATP mehr, also 3 mol ATP, gewonnen.” (If lactate is produced from glycogen, 1 mol more ATP is gained compared to 1 mol of glucose, thus 3 mol ATP). This is because the first ATP-consuming step, the phosphorylation of glucose to glucose 6-phosphate by hexokinase, is bypassed. Glycogen phosphorylase uses inorganic phosphate (Pᵢ) for phosphorolytic cleavage of glucosyl units. The net yield is: \\[\n4 \\text{ ATP (produced)} - 1 \\text{ ATP (consumed for fructose 6-P phosphorylation)} = \\mathbf{3 \\text{ ATP (net) per glucosyl unit}}\n\\]\nNelson & Cox (p. 558, Worked Example 14-1): Clearly explain that starting from glycogen saves 1 ATP in the preparatory phase, leading to a net yield of 3 ATP per glucose monomer from glycogen.\nBrooks (2012): “1.5 ATP is produced per lactate anion accumulated when glycogen is the precursor.” Since one glucosyl unit from glycogen forms two lactate anions, the yield per glucosyl unit is 2 \\times 1.5 \\text{ ATP} = \\mathbf{3 \\text{ ATP}}.\nDi Prampero (1981, S. 151, Table 1): Consistent with the other sources, lists “Glycogen → Lactate” as yielding 3 ~P/mol glucosyl unit. This translates to 1.5 ATP per mole of lactate formed from glycogen, a ratio that Di Prampero (1981) explicitly uses in subsequent calculations for the energy equivalent of lactate (Di Prampero, 1981, S. 182).\n\nThe consensus is firm: 3 net ATP molecules are gained when one glucosyl unit from glycogen is anaerobically converted to two molecules of lactate.\n\n\n\nThe actual energy (ΔG) available from ATP hydrolysis under cellular conditions is crucial for accurate bioenergetic modeling.\n\nStandard Free Energy Change (ΔG’°): Typically cited as approximately -30.5 kJ/mol for ATP → ADP + Pᵢ (Stegemann, 1991, S. 34, Eq. 7; Nelson & Cox, 2012, S. 519, Table 13-6).\nActual Free Energy Change (ΔG) in vivo: This value is significantly more negative and variable than ΔG’° due to the actual intracellular concentrations of ATP, ADP, Pᵢ, and Mg²⁺, as well as pH. Nelson & Cox (2012, S. 519) suggest a typical range of -50 to -65 kJ/mol. Di Prampero (1981, S. 156, Fig. 2a) provides a graphical representation showing ΔGATP as a function of PCr and ATP concentrations. At rest (e.g., PCr ≈ 18-22 mmol/kg muscle, ATP ≈ 5 mmol/kg), ΔGATP is estimated to be around -50 to -52 kJ/mol. During intense exercise, as PCr is depleted (e.g., to ~3.5-4 mmol/kg), ΔGATP can decrease to approximately -44 kJ/mol. This dynamic behavior is important but often simplified in models by using an average physiological value.\nYour Model’s Global Constant: DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ = 50.0; This value is a well-chosen representative for the actual physiological free energy change (ΔG) of ATP hydrolysis, consistent with the range depicted by Di Prampero (1981) for contracting muscle.\nÅstrand et al. (2003, S. 33): Provides an important conceptual clarification: “Die Energie liegt nicht in der Bindung selbst, sondern in der freien Energie, die verfügbar wird, wenn über Abspaltung von anorganischem Phosphat das ATP in die energieärmere Verbindung Adenosindiphosphat (ADP) übergeht.”\n\n\n\n\nUnderstanding the total energy associated with lactate formation requires comparing the ATP-conserved energy with the overall free energy change of the pathway.\n\nÅstrand’s (2003) Value (citing Di Prampero (1981)): States that approximately 110 kJ/mol lactate is released when glycogen is converted to lactate (derived from ~220 kJ per glucosyl unit, which forms 2 lactate). This likely represents the total exergonic drive (ΔG’°) of the pathway per mole of lactate.\nDi Prampero (1981)’s Calculation of α (Energy Equivalent of Lactate Formation in vivo, S. 182): Di Prampero provides a detailed derivation for α, the energy equivalent of lactate formation, by linking it to aerobic metabolism. He assumes that the ATP yield per mole of lactate from glycogen is 1.5, and per mole of O₂ during glycogen oxidation is 6.2 (both from McGilvery (1975) data in his Table 1). The enthalpy change for O₂ consumption during glycogen oxidation (ΔHO₂) is taken as 469 kJ/mol O₂. The formula used is: \\[\n\\alpha = \\Delta H_{\\text{O}_2, \\text{glycogen}} \\times \\frac{\\text{mol ATP per mol La (from glycogen)}}{\\text{mol ATP per mol O}_2 \\text{ (glycogen oxidation)}}\n\\] Substituting the values: \\[\n\\alpha = 469 \\text{ kJ/mol O}_2 \\times \\frac{1.5 \\text{ mol ATP/mol La}}{6.2 \\text{ mol ATP/mol O}_2} \\approx \\mathbf{113 \\text{ kJ/mol La}}\n\\tag{3}\\] Di Prampero (1981, S. 182) notes this is an enthalpy-based equivalent and that other estimations place the value around 100 kJ/mol La. He further clarifies the utility: “Regardless of the correct interpretation of α its value allows one to calculate that, in vivo, the resynthesis of ATP requires approximately the same amount of energy from glycolytic sources (100/1.5 = 67 kJ/mol) as from oxidative sources (469/6.2 = 76 kJ/mol).” This calculation of “energy per mole of ATP equivalent” via different pathways is insightful for comparing efficiencies.\nYour Model (75 kJ/mol Lactate as ATP-equivalent): Based on 1.5 mol ATP/mol Lactate * 50.0 kJ/mol ATP = 75 kJ/mol Lactate. This 75 kJ/mol represents the portion of the total energy change that is directly conserved in the high-energy phosphate bonds of ATP and is readily available for cellular work. The difference between the ~113 kJ/mol (di Prampero’s α) or ~110 kJ/mol (Åstrand) and your model’s 75 kJ/mol is primarily due to the thermodynamic inefficiency of glycolysis; a substantial portion of the total free energy released is dissipated as heat. For your model’s purpose of quantifying the ATP-mediated energy available to cover an O₂ deficit, the 75 kJ/mol is the appropriate, internally consistent value."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_App_Theory.html#aerobic-oxidation-of-glucose",
    "href": "Metabolic_Model_Apps/Mader_App_Theory.html#aerobic-oxidation-of-glucose",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "",
    "text": "Complete oxidation of glucose to CO₂ and H₂O via glycolysis, the pyruvate dehydrogenase complex, the citric acid cycle, and oxidative phosphorylation yields a much larger amount of ATP.\n\nOverall Reaction and Free Energy Change:\n\nStegemann (1991, S. 43, Gleichung 21): \\[\n\\text{C}_6\\text{H}_{12}\\text{O}_6 + 6\\text{O}_2 \\rightarrow 6\\text{CO}_2 + 6\\text{H}_2\\text{O} \\quad (\\Delta G = -2869 \\text{ kJ/mol glucose})\n\\]\nNelson & Cox (2012, S. 543): States the standard free-energy change is -2,840 kJ/mol glucose.\n\n\n\n\nThe P/O₂ ratio (moles of ATP synthesized per mole of atomic oxygen (O), or per ½ O₂ molecule, consumed) is a key determinant of the overall ATP yield.\n\nDi Prampero (1981; S. 151, Table 1, values from McGilvery, 1975): This table reflects older, generally higher, P/O ratio conventions:\n\nGlucose → CO₂ + H₂O: 6.0 mol ~P (ATP) / mol O₂. Since 6 moles of O₂ are consumed per mole of glucose, this implies 6 mol O₂ * 6.0 mol ATP/mol O₂ = 36 ATP per glucose.\nGlycogen → CO₂ + H₂O: 6.2 mol ~P (ATP) / mol O₂. This implies 6 mol O₂ * 6.2 mol ATP/mol O₂ = 37.2 ≈ 37 ATP per glucosyl unit.\nFFA → CO₂ + H₂O: 5.6 mol ~P (ATP) / mol O₂. Di Prampero (1981, S. 169, Eq. 15) also provides an empirical formula for the P/O₂ ratio (denoted ‘c’) as a function of the respiratory quotient (RQ): \\[\nc = \\text{P/O}_2 = 4.13 + 2.07 \\times \\text{RQ}\n\\tag{4}\\] For pure carbohydrate oxidation (RQ = 1.0), this yields c = 4.13 + 2.07 * 1.0 = 6.20 mol ATP/mol O₂, matching his Table 1 value for glycogen. For pure fat oxidation (RQ ≈ 0.71), it yields c ≈ 5.60 mol ATP/mol O₂, also matching his Table 1. This equation allows for a dynamic P/O₂ based on substrate mixture.\n\nModern Estimates (e.g., Nelson & Cox (2012, S. 759, Table 19-5)): Current biochemical understanding leads to lower P/O ratios, approximately 2.5 ATP per NADH and 1.5 ATP per FADH₂ oxidized in the electron transport chain. This results in a total yield of 30 or 32 ATP molecules per glucose molecule, depending on the efficiency of the shuttle system used to transport cytosolic NADH electrons into the mitochondria.\nYour Model’s P/O₂ Ratios (as defined in your app’s Quarto documentation):\n\nP/O2,KH = 5.0 [mol ATP / mol O₂] (for carbohydrates). This corresponds to 30 ATP / 6 O₂ per glucose.\nP/O2,Fett = 4.61 [mol ATP / mol O₂] (for fats, e.g., from 106 ATP / 23 O₂ for palmitate according to Nelson & Cox (2012, S. 675)). It is crucial to use these modern, lower P/O₂ ratios consistently throughout your model for calculations involving aerobic ATP resynthesis (e.g., PCr recovery, aerobic energy contribution in the summary) to maintain alignment with current biochemical consensus as represented by texts like Nelson & Cox (2012)."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_App_Theory.html#energy-from-kreatinphosphat-pcr",
    "href": "Metabolic_Model_Apps/Mader_App_Theory.html#energy-from-kreatinphosphat-pcr",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "",
    "text": "PCr acts as an immediate buffer for ATP during high-intensity muscle contraction.\n\nLohmann Reaction (Stegemann (1991, S. 34); Nelson & Cox (2012, S. 526)): \\[\n\\text{ADP} + \\text{PCr} \\stackrel{\\text{Creatin-Kinase}}{\\rightleftharpoons} \\text{ATP} + \\text{Cr}\n\\] The standard free energy change (ΔG’°) for PCr hydrolysis (PCr + H₂O → Creatine + Pᵢ) is approximately -43 kJ/mol (Nelson & Cox, 2012, S. 526). This exergonic reaction drives the endergonic phosphorylation of ADP. Di Prampero (1981, S. 150) highlights the Lohmann reaction as the primary mechanism for ATP rephosphorylation when oxidative phosphorylation and anaerobic glycolysis are insufficient or too slow, such as at the very onset of exercise or during maximal short bursts. His Fig. 2a (Di Prampero, 1981, S. 156) shows the ΔGATP maintained around -50 kJ/mol by this buffering action until PCr stores are significantly depleted.\nYour Model’s Energetic Contribution of PCr: The calculation kJ_per_mmol_PCr = DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ / 1000.0; combined with DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ = 50.0 kJ/mol ATP correctly implies that each mole of PCr consumed effectively provides 50 kJ of usable energy by regenerating one mole of ATP, which itself yields 50 kJ upon hydrolysis. This is a consistent and physiologically relevant approach for modeling the alactic energy contribution.\n\nThis comprehensive comparison integrates data and concepts from Di Prampero (1981) with other key literature, providing a robust framework for the energetic parameters used in your metabolic simulation. The consistent application of your defined DIRECT_ENERGY_YIELD_PER_MOL_ATP_KJ and the modern P/O₂ ratios is paramount for internal model consistency."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_App_Theory.html#modeling-the-free-energy-change-of-atp-hydrolysis-delta-g_atpcyt",
    "href": "Metabolic_Model_Apps/Mader_App_Theory.html#modeling-the-free-energy-change-of-atp-hydrolysis-delta-g_atpcyt",
    "title": "1 Energy Yields in Carbohydrate Metabolism: A Comparative Overview",
    "section": "2.1 Modeling the Free Energy Change of ATP Hydrolysis (\\(\\Delta G_{ATP,cyt}\\))",
    "text": "2.1 Modeling the Free Energy Change of ATP Hydrolysis (\\(\\Delta G_{ATP,cyt}\\))\nThe energy currency of the cell, Adenosine Triphosphate (ATP), does not release a fixed amount of energy upon hydrolysis. Instead, the actual free energy change (\\(\\Delta G_{ATP,cyt}\\)) depends critically on the intracellular conditions, primarily the concentrations of ATP, Adenosine Diphosphate (ADP), inorganic phosphate (Pi), and hydrogen ions (pH). This dynamic yield is crucial for understanding muscle bioenergetics and fatigue.\n\n2.1.1 Theoretical Basis: Thermodynamics of ATP Hydrolysis\nThe hydrolysis of ATP to ADP and Pi can be represented as:\n\\[\n\\text{ATP}^{4-} + \\text{H}_2\\text{O} \\rightleftharpoons \\text{ADP}^{3-} + \\text{HPO}_4^{2-} + \\text{H}^+\n\\tag{5}\\]\nThe standard free energy change (\\(\\Delta G'^\\circ\\)) for this reaction under biochemical standard conditions (1M concentrations, pH 7, 25°C, 1 atm, 10 mM Mg²⁺) is approximately -30.5 kJ/mol (Nelson & Cox, 2012, S. 536; Heck et al., 2022, S. 31).\nHowever, intracellular conditions are far from standard. The actual free energy change (\\(\\Delta G_{ATP,cyt}\\)) is given by the Gibbs free energy equation (Nelson & Cox, 2012, S. 537):\n\\[\n\\Delta G_{ATP,cyt} = \\Delta G'^\\circ + RT \\ln \\left( \\frac{[\\text{ADP}^{3-}] \\cdot [\\text{HPO}_4^{2-}]}{[\\text{ATP}^{4-}]} \\right)\n\\tag{6}\\]\nWhere:\n\n\\(R\\) is the gas constant (8.314 J·mol⁻¹·K⁻¹ or 0.008314 kJ·mol⁻¹·K⁻¹)\n\\(T\\) is the absolute temperature in Kelvin (e.g., 310.15 K for 37°C)\nThe terms in brackets represent the actual molar concentrations of the reactants and products.\n\nUnder typical resting physiological conditions in muscle cells, [ATP] is high, while [ADP] and [Pi] are very low. This makes the natural logarithm term significantly negative, resulting in a much more negative \\(\\Delta G_{ATP,cyt}\\) than \\(\\Delta G'^\\circ\\). Values often range from -50 to -65 kJ/mol (Nelson & Cox, 2012, S. 536; Heck et al., 2022, S. 31; Mader, 2003). The magnitude, \\(-\\Delta G_{ATP,cyt}\\), represents the energy that can be released to do work.\n\n\n2.1.2 Linking \\(\\Delta G_{ATP,cyt}\\) to PCr and pH: The Mader/Heck Approach\nDirectly measuring or calculating instantaneous [ADP] and [Pi] in a dynamic simulation is complex. Mader and Heck, building on work by Veech and others, utilize the near-equilibrium of the creatine kinase (CK) reaction to relate \\(\\Delta G_{ATP,cyt}\\) to more readily modeled parameters like phosphocreatine ([PCr]) and intracellular pH (pHm).\nThe CK reaction: \\[\n\\text{PCr}^{2-} + \\text{ADP}^{3-} + \\text{H}^+ \\rightleftharpoons \\text{ATP}^{4-} + \\text{Creatine}\n\\tag{7}\\]\nThe equilibrium constant for this, \\(K'_{CK}\\), can be expressed, and rearranged to show the tight coupling between the ATP/ADP ratio and the PCr/Pi ratio (as free Creatine changes reciprocally with PCr, and Pi changes reciprocally with PCr if S[C] = [PCr]+[Pi] is assumed somewhat constant, or if Pi is related to PCr via total Creatine pool).\nMader (2003) (Fig. 1, and similar in Heck et al. (2022), Abb. 4.2 & 4.4) graphically shows the relationship between \\(-\\Delta G_{ATP,cyt}\\) and the “Sum: ADP + AMP + Pi” (which is inversely related to [PCr]) at different pH levels. These figures serve as the empirical basis for our model’s ATP yield calculation.\nKey observations from these figures:\n\nPCr Depletion Effect: As PCr decreases (and thus the sum ADP+AMP+Pi increases), the magnitude of released energy (\\(-\\Delta G_{ATP,cyt}\\)) decreases. This means ATP provides less “oomph” when PCr stores are low.\npH Effect: At a lower (more acidic) pHm, the entire curve of \\(-\\Delta G_{ATP,cyt}\\) versus the ADP+AMP+Pi sum is shifted downwards. This means that for any given level of PCr (or ADP+AMP+Pi sum), less energy is released from ATP hydrolysis when the muscle is acidic.\n\n\n\n2.1.3 Implementation in the Simulation App\nGiven that the app already dynamically calculates pcrStore[i] and pHm[i] at each time step i, we can model the dynamic ATP yield (\\(-\\Delta G_{ATP,cyt}\\)) using a two-stage interpolation approach based on the Mader/Heck figures:\n\nDefine Anchor Points for ATP Yield: We establish the maximum (at high PCr/rest) and minimum (at low PCr/fatigue) ATP yields observed at two reference pH values, derived from the figures:\n\nAt optimal pH (e.g., pH 7.0, PH_REF_HIGH):\n\nATP_YIELD_MAX_pH70 = 65.0 kJ/mol\nATP_YIELD_MIN_pH70 = 50.0 kJ/mol\n\nAt acidic pH (e.g., pH 6.2, PH_REF_LOW):\n\nATP_YIELD_MAX_pH62 = 57.0 kJ/mol\nATP_YIELD_MIN_pH62 = 48.0 kJ/mol\n\n\nStep-wise Calculation of Dynamic ATP Yield: For each time step i in the simulation:\n\na. pH-dependent Interpolation of Max/Min Yields: The current muscle pH (pHm[i]) is used to interpolate the effective maximum yield (current_ATP_YIELD_MAX_effective_loop) and effective minimum yield (current_ATP_YIELD_MIN_effective_loop) for that specific pH. This is done by linear interpolation between the anchor points defined above. For example, if pHm[i] is 6.6, the effective max yield will be halfway between 65.0 and 57.0 kJ/mol.\n// Simplified conceptual logic for pH interpolation\nlet pH_fraction = (current_pHm[i] - PH_REF_LOW) / (PH_REF_HIGH - PH_REF_LOW);\npH_fraction = Math.max(0, Math.min(1, pH_fraction)); // Clamp between 0 and 1\n\ncurrent_ATP_YIELD_MAX_effective_loop = ATP_YIELD_MIN_pH62 + (ATP_YIELD_MAX_pH70 - ATP_YIELD_MAX_pH62) * pH_fraction; \n// Correction: MAX should use MAX values for interpolation\ncurrent_ATP_YIELD_MAX_effective_loop = ATP_YIELD_MAX_pH62 + (ATP_YIELD_MAX_pH70 - ATP_YIELD_MAX_pH62) * pH_fraction;\ncurrent_ATP_YIELD_MIN_effective_loop = ATP_YIELD_MIN_pH62 + (ATP_YIELD_MIN_pH70 - ATP_YIELD_MIN_pH62) * pH_fraction;\nb. PCr-dependent Interpolation of Actual Yield: The current PCr concentration (pcrStore[i]) is used to determine the actual ATP yield for that time step. This is done by linear interpolation between the current_ATP_YIELD_MIN_effective_loop (corresponding to zero PCr) and current_ATP_YIELD_MAX_effective_loop (corresponding to initial/full PCr). The pcr_fraction_loop is calculated as pcrStore[i] / appState.pcr_init. javascript     // Simplified conceptual logic for PCr interpolation     current_dynamic_yield_kJ_mol_loop = current_ATP_YIELD_MIN_effective_loop +                                         (current_ATP_YIELD_MAX_effective_loop - current_ATP_YIELD_MIN_effective_loop) * pcr_fraction_loop; This current_dynamic_yield_kJ_mol_loop is then stored in the dynamic_ATP_yield_kJ_mol_values array for plotting and used in subsequent energy calculations (for alactic and lactic contributions).\n\n\n\n\n2.1.4 Rationale and Implications\n\nWhy this approach?\n\nIt directly reflects the empirically derived relationships shown by Mader (2003) and Heck et al. (2022), linking the energetic state (PCr, pH) to the energy releasable by ATP.\nIt avoids the high complexity and potential instability of solving the full system of equilibrium equations for [ATP], [ADP], and [Pi] at each time step, which would require precise knowledge of total adenine and creatine pools and their compartmentation, data not always readily available or constant.\nIt captures the two main modulatory effects:\n\nThe general decline in ATP energy yield as PCr is depleted.\nThe downward shift of this entire relationship under more acidic conditions.\n\n\nImpact on Simulation:\n\nEnergy Calculations: The energy (kJ) derived from anaerobic sources (PCr consumption, net lactate production) will now vary. During intense exercise leading to PCr depletion and acidosis, each mmol of ATP (or its equivalent from PCr/glycolysis) will yield less energy.\nFatigue Modeling: This provides a more nuanced mechanism contributing to fatigue. If cellular processes require a certain energy threshold from ATP hydrolysis, a lower dynamic yield means this threshold is harder to reach or requires a higher rate of ATP turnover, potentially accelerating the depletion of energy reserves.\nEfficiency Metrics: Metrics like total metabolic efficiency (\\(\\eta_{total}\\)) will be more realistically affected, as the denominator (total metabolic energy expenditure) will be based on this dynamic ATP yield.\n\n\nBy implementing this dynamic ATP yield, the simulation becomes a more accurate representation of muscle bioenergetics, particularly under conditions that challenge cellular homeostasis like high-intensity exercise."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html",
    "href": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html",
    "title": "Mader’s metabolic model",
    "section": "",
    "text": "Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. The content will continue to expand over time.\nWith this File Converter App, you can convert and download .tcx files or .csv files to use them in the “Exercise Simulation” tab of the “Mader Simulation App”. Fit-files must first be converted to .csv format using GOTOES File Converter before you can use the File Converter to transform them into a format compatible with the Mader App.\nLink: Mader App\nDownload Example_Race_Data.csv"
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html#introduction",
    "href": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html#introduction",
    "title": "Mader’s metabolic model",
    "section": "Introduction",
    "text": "Introduction\nThe Mader’s Metabolic Simulation App is an interactive web-based tool designed to model, simulate, and visualize key aspects of human exercise metabolism. Its core principles are deeply rooted in the metabolic models and research pioneered by Prof. Dr. Alois Mader and his colleagues (e.g., Mader (1984); Mader & Heck (1986); Mader & Allmer (1996); Mader (2003)). The application empowers users to explore:\n\nSteady-state metabolic responses to varying power outputs, examining the intricate relationships between power, oxygen uptake (\\(\\dot{V}O_2\\)), lactate production (\\(vLa_{SS}\\)), lactate oxidation (\\(vLa_{ox}\\)), pyruvate deficit (PD), and lactate accumulation (P-V̇O₂-La Dynamics tab).\nDynamic metabolic changes during exercise, allowing for the simulation of responses to predefined step tests or custom-loaded exercise protocols (Exercise Simulation tab).\n\nThis guide aims to provide a comprehensive overview of the app’s functionalities, offering detailed explanations of the various input parameters, the underlying model assumptions, and the interpretation of the outputs and visualizations."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html#main-application-tabs",
    "href": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html#main-application-tabs",
    "title": "Mader’s metabolic model",
    "section": "Main Application Tabs",
    "text": "Main Application Tabs\nThe application is structured into two primary tabs, each serving a distinct purpose in metabolic modeling:\n\nP-V̇O₂-La Dynamics: This tab focuses on modeling the metabolic system under the assumption that a steady state has been achieved at each discrete power output. It’s ideal for understanding fundamental physiological relationships and thresholds.\nExercise Simulation: This tab allows for the dynamic simulation of metabolic parameters over time in response to continuous or intermittent exercise protocols. This is useful for analyzing specific training sessions or predicting performance under non-steady-state conditions."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "href": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "title": "Mader’s metabolic model",
    "section": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)",
    "text": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)\nThis section delves into the metabolic responses assuming the physiological system has reached equilibrium at each evaluated power output.\n\nControl Panel: P-V̇O₂-La Dynamics\nThe sidebar on the left houses the control groups for adjusting the model parameters specifically for this steady-state analysis.\n\nOxygen Demand Settings\nThis critical section defines the fundamental relationship between mechanical power output (P, in Watts) and the corresponding steady-state oxygen uptake (\\(\\dot{V}O_{2,SS}\\), in ml·min⁻¹).\n\nCurvilinear CE relationship: This checkbox toggles between two models for the P-\\(\\dot{V}O_2\\) relationship.\n\nLinear Model (Unchecked - Default): Assumes a constant oxygen cost per unit of work above \\(\\dot{V}O_{2,Base}\\). The relationship is defined as: \\[ \\dot{V}O_{2,SS} = CE \\cdot P + \\dot{V}O_{2,Base} \\] Here, \\(CE\\) (Cost of Exercise) represents the slope \\(\\Delta\\dot{V}O_2 / \\Delta P\\), and \\(\\dot{V}O_{2,Base}\\) is the y-intercept, representing oxygen uptake during unloaded cycling.\nCurvilinear Model (Checked): Implements a quadratic relationship, acknowledging that mechanical efficiency often decreases at higher exercise intensities, leading to a disproportional increase in \\(\\dot{V}O_2\\) for a given increment in power. The formula used is: \\[ \\dot{V}O_{2,SS} = a \\cdot P^2 + CE_{Start} \\cdot P + \\dot{V}O_{2,Base} \\] \\(CE_{Start}\\) is the initial slope (efficiency) at low power outputs. The coefficient \\(a\\) is automatically calculated by the application to ensure that the slope of this curve at the point where \\(\\dot{V}O_{2,SS}\\) intersects \\(\\dot{V}O_{2,max}\\) matches the user-defined \\(CE_{Target}\\).\n\nCE (ml·min⁻¹·W⁻¹): (Visible and active for the Linear model)\n\nThis slider sets the constant Cost of Exercise (\\(CE\\)). Typical physiological values range from 8 to 15 ml·min⁻¹·W⁻¹. Lower values indicate higher gross mechanical efficiency for the work performed.\nDelta Efficiency (Δη): This derived metric is calculated from the \\(CE\\) value and the caloric equivalent of oxygen. Since the caloric equivalent varies with the Respiratory Quotient (RQ) (from approx. 19.6 kJ·l⁻¹ for pure fat to 21.1 kJ·l⁻¹ for pure CHO, Stegemann (1991)), Δη is presented as a range (e.g., 24.7-26.5%). It represents the efficiency of converting metabolic energy into mechanical work above resting metabolism (i.e., \\(1 / ((CE \\cdot \\text{caloric_equivalent}) / 60)\\)).\nηgross (Fatmax | MLSS): Gross efficiency is the ratio of mechanical work performed (Power output in Watts) to the total aerobic energy expenditure (also converted to Watts). This app calculates and displays ηgross at two physiologically relevant power outputs:\n\nFatmax: The power output associated with the maximal rate of fat oxidation.\nMLSS (Maximal Lactate Steady State): The highest power output that can be sustained with stable blood lactate concentrations. The predicted RQ at these intensities is used to determine the specific caloric equivalent for oxygen in these calculations.\n\nηnet (Fatmax | MLSS): Net efficiency is similar to gross efficiency but considers only the aerobic energy expenditure above the resting (or \\(\\dot{V}O_{2,Base}\\)) level: \\(\\eta_{net} = (\\text{Power output}) / (\\text{Aerobic energy expenditure} - \\text{Resting energy expenditure})\\). This often yields higher efficiency values as it excludes the metabolic cost of basic bodily functions. Calculated at Fatmax and MLSS using predicted RQs.\n\nCEStart (ml·min⁻¹·W⁻¹): (Visible and active for the Curvilinear model)\n\nSets the initial slope of the \\(\\dot{V}O_2\\)-P curve, representing the oxygen cost at very low power outputs.\n\nCETarget (ml·min⁻¹·W⁻¹): (Visible and active for the Curvilinear model)\n\nSets the target slope of the \\(\\dot{V}O_2\\)-P curve specifically at the power output corresponding to \\(\\dot{V}O_{2,max}\\). This helps define the “tail-up” of the curvilinear response.\n\n\n\n\nCadence Dependency\nThis section allows for the incorporation of cycling cadence effects on the \\(\\dot{V}O_2\\)-P relationship, primarily based on the models proposed by Dunst et al. (2025). The general observation is a U-shaped relationship where metabolic efficiency is optimal at a certain cadence range, with increased oxygen cost at very low or very high cadences.\n\nEnable U-Shaped Cadence Dependency:\n\nWhen checked, the \\(CE\\), \\(\\dot{V}O_{2,Base}\\), and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\) parameters are dynamically adjusted based on the selected cadence.\n\nCadence (rpm):\n\nSlider to set the cycling cadence (revolutions per minute). The default is 80 rpm, often near optimal for many cyclists.\n\nCE-Dependency: (Automatically applied if cadence dependency is enabled)\n\nThe Cost of Exercise (\\(CE\\)) becomes a function of cadence, calculated using the formula from Dunst et al. (2025): \\(CE(rpm) = 0.0004 \\cdot rpm^2 - 0.094 \\cdot rpm + 16.857\\).\n\n\\(\\dot{V}O_{2,Base}\\) Dependency: (Automatically applied if cadence dependency is enabled)\n\nBaseline oxygen uptake (\\(\\dot{V}O_{2,Base}\\)) also varies with cadence according to Dunst et al. (2025): \\(\\dot{V}O_{2,Base}(rpm) = 0.172 \\cdot rpm^2 - 14.460 \\cdot rpm + 548.039\\).\n\nInclude \\(\\dot{V}O_{2,max}\\) Dependency:\n\nIf checked, \\(\\dot{V}O_{2,max}\\) is also modeled as cadence-dependent. This feature is noted as experimental and is qualitatively based on figures suggesting optimal \\(\\dot{V}O_{2,max}\\) around 80-90 rpm (Dunst et al. (2025)).\n\nInclude vLamax Dependency:\n\nIf checked, the maximal rate of lactate production (vLamax) is adjusted based on cadence using the formula from Dunst et al. (2025): \\(vLa_{max}(rpm) = -0.0002 \\cdot rpm^2 + 0.00931 \\cdot rpm\\). It’s worth noting that Dunst et al. (2025) suggest this observed dependency might be more related to testing methodology limitations than purely physiological changes in glycolytic capacity.\n\n\n\n\nPhysiological Input-Parameters\nThese are fundamental physiological characteristics defining the simulated individual’s metabolic profile.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹):\n\nMaximal oxygen uptake, a key indicator of aerobic fitness, representing the upper ceiling for aerobic ATP resynthesis.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹·kg⁻¹):\n\nMaximal oxygen uptake expressed relative to body mass. This value is dynamically linked to the absolute \\(\\dot{V}O_{2,max}\\) and the Body Mass slider. Modifying one will automatically update the other.\n\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹):\n\nOxygen uptake during unloaded cycling (i.e., at zero external power output but still in an exercise context). This is typically higher than true basal resting metabolic rate due to the metabolic cost of moving the limbs, increased cardiorespiratory work, etc. It can be estimated using the “\\(\\dot{V}O_{2,Base}\\) Calculation” section or set manually.\n\nvLamax (mmol·l⁻¹·s⁻¹):\n\nMaximal rate of lactate production, reflecting the peak capacity of the anaerobic glycolytic pathway (Mader (1984); Mader & Allmer (1996)). It’s a crucial parameter for determining lactate kinetics and substrate utilization.\n\nHRmax (bpm):\n\nMaximal heart rate achievable by the individual.\n\nHRBase (bpm):\n\nBaseline heart rate during unloaded cycling, corresponding to the metabolic state at \\(\\dot{V}O_{2,Base}\\).\n\nCEHR (bpm·W⁻¹):\n\nHeart Rate Efficiency, also known as the HR-Power slope. It describes the increment in heart rate (beats per minute) for each Watt increase in power output. Typical values in cyclists range from 0.25 to 0.45 bpm·W⁻¹. Lower values are generally indicative of better cardiovascular efficiency.\n\nWeight-based values:\n\nIf checked, the x-axis of the main plot and several displayed output values will be normalized to the individual’s body mass (e.g., power in W·kg⁻¹, \\(\\dot{V}O_2\\) in ml·min⁻¹·kg⁻¹). This facilitates comparisons between individuals of different sizes.\n\n\n\n\n\\(\\dot{V}O_{2,Base}\\) Calculation\nThis utility allows for an estimation of true basal metabolic rate (BMR) using the Harris-Benedict equation, which is then converted to an equivalent resting oxygen uptake. This calculated value can be used to inform the manual setting of the \\(\\dot{V}O_{2,Base}\\) parameter.\n\nGender: (Male/Female) Input for the gender-specific Harris-Benedict formula.\nBody Mass (kg): Input for the Harris-Benedict formula and for general weight-based normalizations.\nAge (years): Input for the Harris-Benedict formula.\nHeight (cm): Input for the Harris-Benedict formula.\nCalculate \\(\\dot{V}O_{2,Base}\\) Button:\n\nTriggers the calculation of BMR (in kcal/day).\nConverts this BMR to a resting \\(\\dot{V}O_2\\) value (in ml/min) using standard caloric equivalents for oxygen.\nThe \\(\\dot{V}O_{2,Base}\\) slider in the “Physiological Input-Parameters” section is automatically updated with this calculated value.\nImportant Note: The \\(\\dot{V}O_{2,Base}\\) parameter in Mader’s model typically represents oxygen uptake during unloaded cycling, which is generally higher than the true basal resting \\(\\dot{V}O_2\\) calculated here. This tool provides a reference point.\n\n\n\n\nSubstrate Utilization\nThis section controls the visualization and modeling of carbohydrate (CHO) and fat oxidation rates based on the lactate balance calculations derived from Mader’s model (Mader (2003)).\n\nShow Substrate Utilization:\n\nIf checked:\n\nAn additional plot appears below the main P-V̇O₂-La plot, displaying substrate utilization percentages.\nTraces for absolute CHO and Fat oxidation rates (in the units selected via “Energy Unit”) are added to the main plot, typically on a third y-axis.\n\n\nEnergy Unit: (Visible if “Show Substrate Utilization” is checked)\n\nAllows selection of units for displaying absolute substrate oxidation rates:\n\ng/h (grams per hour)\nkcal/h (kilocalories per hour)\nkJ/h (kilojoules per hour)\n\n\nAdjust CHO utilization at rest: (Visible if “Show Substrate Utilization” is checked)\n\nIf checked, this feature allows the user to manually adjust the CHO utilization percentage specifically at rest (0 Watts power output). The model’s default CHO utilization at rest is based purely on its internal calculations (\\(vLa_{SS}/vLa_{ox}\\) ratio). However, empirical data (e.g., Brooks (2012); (Friedman1998?); (Friedman1999?)) often suggest that resting individuals, particularly those who are post-absorptive or well-fed, might have a CHO contribution of around 35-40%. This adjustment helps align the model with such empirical observations if desired.\n\nResting CHO percentage (%): (Visible if “Adjust CHO utilization at rest” is checked)\n\nA slider to set the target CHO utilization percentage at rest. The model will then attempt to shift its calculated CHO utilization curve to pass through (or near) this user-defined resting value.\n\n\nModel Basis for Substrate Utilization: The model assumes that the relative contribution of carbohydrates to total energy expenditure increases with exercise intensity. Specifically, the ratio of lactate production (\\(vLa_{SS}\\)) to lactate oxidation (\\(vLa_{ox}\\)) is used as a proxy for the CHO contribution. As \\(vLa_{SS}\\) approaches \\(vLa_{ox}\\) (i.e., PD approaches zero at MLSS), CHO utilization approaches 100%. Fat oxidation is calculated as the remainder of the aerobic energy demand. Energy equivalents used are approximately 4.1 kcal/g for CHO and 9.45 kcal/g for fat. The predicted Respiratory Quotient (RQ) is derived from this substrate mix (ranging from 0.70 for 100% fat to 1.00 for 100% CHO). This predicted RQ is then used with Stegemann’s table (Stegemann (1991)) to determine the precise caloric equivalent of oxygen (kJ·l⁻¹ or kcal·l⁻¹), which is subsequently used in the efficiency calculations (Δη, ηgross, ηnet).\n\n\nPlot Settings\n\nLock Y-Axis / Lock X-Axis:\n\nWhen checked (default), the respective axis range on the main P-V̇O₂-La plot remains fixed. This is beneficial for comparing the effects of parameter changes, as the plot scale does not change. If unchecked, the axis will auto-scale to encompass all plotted data, which can be useful for initial exploration of wide-ranging parameter values.\n\n\n\n\n\nMain Plot: P-V̇O₂-La Dynamics\nThis central plot visualizes the core steady-state metabolic relationships:\n\nX-Axis: Power output (P), displayed in Watts (W) or Watts per kilogram body mass (W·kg⁻¹) if “Weight-based values” is selected.\nPrimary Y-Axis (Left): Oxygen Uptake (\\(\\dot{V}O_2\\)), displayed in milliliters per minute (ml·min⁻¹) or ml·min⁻¹·kg⁻¹.\n\n\\(\\dot{V}O_{2,SS}\\) (Solid Blue Line): Represents the calculated steady-state oxygen uptake at each power output, up to the individual’s \\(\\dot{V}O_{2,max}\\).\n\\(\\dot{V}O_{2,SS,extrapolated}\\) (Dashed Blue Line): Shows the theoretical \\(\\dot{V}O_2\\) demand if it were not constrained by \\(\\dot{V}O_{2,max}\\). This line continues with the same slope (linear model) or curvature (curvilinear model) beyond \\(\\dot{V}O_{2,max}\\).\n\\(\\dot{V}O_{2,max}\\) Line (Dotted Grey Line): A horizontal line indicating the individual’s maximal oxygen uptake.\n\nSecondary Y-Axis (Right - yaxis2): Lactate kinetics, with rates in mmol·l⁻¹·min⁻¹ and accumulation in mmol·l⁻¹.\n\nvLaSS (Dashed Red Line): The steady-state rate of lactate production.\nvLaox (Dashed Light Blue Line): The steady-state rate of lactate oxidation (elimination).\nPD (Pyruvate Deficit) (Solid Purple Line): Calculated as \\(vLa_{ox} - vLa_{SS}\\). A positive PD indicates that lactate elimination capacity exceeds production, often associated with higher fat oxidation. A negative PD indicates lactate production exceeds elimination capacity.\n\nFATmax (Vertical Dotted Grey Line): Marks the power output where the Pyruvate Deficit (PD) is maximal. This is often used as an indicator of the intensity eliciting maximal fat oxidation.\nMLSS (Maximal Lactate Steady State) (Vertical Dotted Grey Line): Marks the power output where PD is zero (i.e., \\(vLa_{SS} = vLa_{ox}\\)). This is the theoretical highest intensity at which lactate clearance can keep pace with lactate production, resulting in stable blood lactate levels during prolonged exercise.\n\nLaAccumulation (Solid Dark Red Line): Represents the theoretical blood lactate concentration that would accumulate if exercise at that specific steady-state power output were sustained indefinitely. This is a modeled value, not a direct simulation of blood lactate over time.\n\nTertiary Y-Axis (Right, further out - yaxis3, visible if “Show Substrate Utilization” is checked): Absolute Substrate Utilization rates, in the units selected by the user (g/h, kcal/h, or kJ/h).\n\nCHO (Unit) (Dotted Pink Line): Shows the absolute rate of carbohydrate oxidation.\nFat (Unit) (Dotted Green Line): Shows the absolute rate of fat oxidation.\n\n\nThe plot includes key annotations for FATmax power, MLSS power, \\(\\dot{V}O_{2,max}\\) value, and the mathematical formula currently defining the \\(\\dot{V}O_2\\)-P relationship (linear or curvilinear, including cadence effects if active).\n\n\nSubstrate Utilization Plot\nThis plot appears below the main plot if “Show Substrate Utilization” is enabled in the control panel.\n\nX-Axis: Power output (P), consistent with the main plot (W or W·kg⁻¹).\nY-Axis: Percentage of Total Aerobic Energy Expenditure (%).\n\nCHO-Utilization (%) (Dotted Pink Line): Shows the relative contribution of carbohydrate oxidation to total aerobic energy production at each power output.\nFat-Utilization (%) (Dotted Dark Green Line): Shows the relative contribution of fat oxidation. This plot provides a clear visual representation of the crossover concept, where the primary fuel source shifts from fats to carbohydrates as exercise intensity increases.\n\n\n\n\nValues Display Area\nLocated below the plot(s), this text area provides a numerical summary of key metabolic parameters calculated at two important physiological points: FATmax and MLSS. For each point, it displays:\n\nPower output (W or W·kg⁻¹)\nSteady-state \\(\\dot{V}O_{2,SS}\\) (absolute and as a percentage of \\(\\dot{V}O_{2,max}\\))\nRate of lactate production (\\(vLa_{SS}\\) in mmol·l⁻¹·min⁻¹)\nRate of lactate oxidation (\\(vLa_{ox}\\) in mmol·l⁻¹·min⁻¹)\nPyruvate Deficit (PD in mmol·l⁻¹·min⁻¹)\nTheoretical Lactate Accumulation (LaAccumulation in mmol·l⁻¹)\nIf substrate utilization is shown:\n\nAbsolute carbohydrate oxidation rate (in selected units) and its percentage contribution.\nAbsolute fat oxidation rate (in selected units) and its percentage contribution.\nPredicted Respiratory Quotient (RQ).\n\nCalculated gross efficiency (ηgross in %).\nCalculated net efficiency (ηnet in %).\n\nIf cadence dependency is active, this area will also display the effective \\(CE\\), \\(\\dot{V}O_{2,Base}\\), and, if their respective dependencies are enabled, the effective \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\) values for the selected cadence."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html#tab-2-exercise-simulation-dynamic-model",
    "href": "Metabolic_Model_Apps/Mader_Modell_Info_1.0.html#tab-2-exercise-simulation-dynamic-model",
    "title": "Mader’s metabolic model",
    "section": "Tab 2: Exercise Simulation (Dynamic Model)",
    "text": "Tab 2: Exercise Simulation (Dynamic Model)\nThis tab transitions from steady-state assumptions to a dynamic simulation of metabolic responses over time, reacting to changing power outputs defined by an exercise protocol.\nA disclaimer at the top of this tab indicates that its features and calculations are still under development and should be considered experimental.\n\nControl Panel: Exercise Simulation\n\nStep Test / Exercise Simulation Parameters\nThese controls define the exercise protocol to be simulated, or allow for the loading of external power data.\n\nStep Increment (Watts): For a generated incremental step test, this sets the amount by which power increases at each new step.\nStep Duration (s): For a generated step test, this defines the duration (in seconds) of each power step.\nMaximum Power (Watts): The highest power output that will be targeted in a generated incremental step test. The test will ramp up to this power.\nPower Adjustment (%): A global scaling factor (0-200%) applied to all power values in the current workout, whether generated or loaded from a file. This allows for easy simulation of the same relative effort for different fitness levels.\nLoad Example Exercise Data Button: Loads a pre-defined interval workout (including power and cadence data) into the simulation. This is useful for quickly exploring the app’s dynamic capabilities.\nInsert workout file / File Upload:\n\nProvides an interface to upload workout data from external files. Supported formats include .csv (comma-separated values), .txt (tab-separated or other delimited text), .xlsx, and .xls (Microsoft Excel formats).\nThe app expects columns for time (or timestamp), power, and optionally cadence.\nFile has headers: A checkbox (default checked) to indicate whether the first row of the uploaded file contains column names. If unchecked, the app assumes data starts from the first row and uses default column order (Time, Power, Cadence).\nUploaded workout data gap processing: This option determines how the app handles missing data points or time gaps in 1-second interpolated data from an uploaded file:\n\nMaintain last values (Default): If there’s a gap between recorded data points, the power (and cadence, if available) from the last valid preceding data point is carried forward to fill the gap. This is often preferred for visualizing structured interval training where power is meant to be constant during an interval.\nInsert zero values: If there’s a gap, the power (and cadence) for the missing seconds are set to zero. This is useful for analyzing training sessions with distinct rest periods where actual power output drops to zero.\n\n\nSmooth Power Curve (5-point window) Button: Applies a 5-point moving average filter to the current power data (loaded or generated). This can help reduce noise or rapid fluctuations in recorded power data, providing a smoother input for the simulation.\nDisplay Window Settings: These controls allow users to customize the visible range of the plot axes without altering the underlying simulation data or calculations. This is purely for visualization focus.\n\nAdjust X-Axis range (Checkbox): Enables manual adjustment of the time axis.\n\nStart Time (s) / End Time (s) (Sliders): Define the visible start and end times on the x-axis of the simulation plot.\n\nAdjust Y-Axis ranges (Checkbox): Enables manual adjustment of the various y-axes.\n\nPower Y-Axis Maximum (Slider): Sets the maximum value for the primary Y-axis (which displays Power, Cadence, MPA, Strain Score, Glycogen).\n\\(\\dot{V}O_2\\) Y-Axis Maximum (Slider): Sets the maximum value for the tertiary Y-axis (displaying \\(\\dot{V}O_2\\) and O₂ Deficit).\nLactate Y-Axis Minimum / Maximum (Sliders): Sets the minimum and maximum values for the secondary Y-axis (displaying Lactate, W’, PCr, pH, Rates, RQ, HR).\n\n\n\n\n\nCadence Dependency\nSimilar to Tab 1, this section allows for the incorporation of cadence effects on metabolic parameters during the dynamic simulation.\n\nEnable U-Shaped Cadence Dependency: Activates cadence-dependent adjustments to \\(CE\\), \\(\\dot{V}O_{2,Base}\\), and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\), using the formulas from Dunst et al. (2025).\nFixed Cadence (rpm): (Used if “Use cadence from file” is unchecked or if no cadence data is available in the file). Sets a constant cadence value that will be assumed throughout the simulation if cadence-dependent effects are enabled.\nUse cadence from file (if available):\n\nIf checked AND cadence data is present in an uploaded workout file AND cadence dependency is enabled, the simulation will use the time-varying cadence values from the file to modulate metabolic parameters.\nIf no cadence data is in the file, or if this option is unchecked, the “Fixed Cadence” value will be used if cadence dependency is active.\n\nThe specific dependencies (CE, \\(\\dot{V}O_{2,Base}\\), Include \\(\\dot{V}O_{2,max}\\) Dependency, Include vLamax Dependency) can be individually toggled, functioning identically to their Tab 1 counterparts but applied dynamically over time.\n\n\n\nPhysiological Parameters (Dynamic Simulation)\nThese parameters govern the kinetic (time-dependent) responses of the metabolic model.\n\n\\(\\dot{V}O_2\\) Start (ml·min⁻¹):\n\nThe initial oxygen uptake value at the very beginning (time = 0s) of the simulation. This slider is dynamically constrained to be between the current effective \\(\\dot{V}O_{2,Base}\\) and \\(\\dot{V}O_{2,max}\\) (which can vary if cadence dependency is active). The default starting value is often set near the \\(\\dot{V}O_2\\) at Fatmax from Tab 1.\n\n\\(\\dot{V}O_{2,on}\\) time constant (τon) (s):\n\nDefines the speed of the exponential rise of \\(\\dot{V}O_2\\) towards its new, higher target value when exercise intensity increases or exercise begins. A smaller τon indicates faster “on” kinetics. The \\(\\dot{V}O_2\\) at any time \\(t\\) during an increase is modeled as: $ O_2(t) = O_{2,initial} + (O_{2,target} - O_{2,initial}) (1 - e^{-(t - t_{delay})/_{on}}) $\nIntensity-Dependent τon (Checkbox):\n\nIf checked, τon is not a fixed value. Instead, it’s dynamically calculated for each step based on the \\(\\dot{V}O_2\\) (as a percentage of the current \\(\\dot{V}O_{2,max}\\)) of the immediately preceding time step. The base formula is \\(\\tau_{on\\_base} = 0.38 \\cdot \\text{PrevIntensity%} + 6\\) seconds. The slider value then acts as the τon that would occur if the preceding intensity was 50% \\(\\dot{V}O_{2,max}\\). This means the slider effectively sets an offset to the formula, allowing the user to shift the entire linear τon-intensity relationship. This feature simulates the physiological observation that \\(\\dot{V}O_2\\) on-kinetics can be slower if an exercise bout is initiated from a higher pre-existing metabolic rate (e.g., due to prior high-intensity work).\n\n\n\\(\\dot{V}O_{2,off}\\) time constant (τoff) (s):\n\nDefines the speed of the exponential fall of \\(\\dot{V}O_2\\) towards its new, lower target value when exercise intensity decreases or during recovery.\nIntensity-Dependent τoff (Checkbox):\n\nIf checked, τoff is dynamically calculated based on the maximum \\(\\dot{V}O_2\\) (as % of current \\(\\dot{V}O_{2,max}\\)) achieved within a lookback window (typically defined as 2 times the previous step’s τoff). The base formula is \\(\\tau_{off\\_base} = 0.45 \\cdot \\text{Intensity%} + 10\\) seconds. Similar to τon, the slider value sets τoff for a reference 50% intensity, thereby shifting the relationship. This models that recovery of \\(\\dot{V}O_2\\) might be faster after lower intensity efforts and slower after higher intensity efforts due to factors like greater metabolic disturbance.\n\n\n\\(\\dot{V}O_2\\) Response Delay (s):\n\nA pure time delay (in seconds) before the exponential \\(\\dot{V}O_2\\) response (either “on” or “off”) begins following a change in power output. This accounts for factors like circulatory transit time of blood from lungs to muscles (and vice-versa for CO₂ control feedback) and initial inertia in muscular metabolic pathway activation. Affects the timing of actual \\(\\dot{V}O_2\\) change, O₂ deficit/surplus calculation, and subsequently \\(vLa_{ox}\\).\n\nLactate exercise termination value (mmol·l⁻¹):\n\nIf the “Terminate simulation…” checkbox below is active, the simulation will automatically stop if the modeled blood lactate concentration reaches this specified threshold.\n\nTerminate simulation when lactate exceeds max value (Checkbox): Enables or disables the lactate-based abortion criterion.\nResting Lactate-value (mmol·l⁻¹):\n\nThe initial blood lactate concentration assumed at the start (time = 0s) of the simulation.\n\nvLaSS,on Time Constant (τvLaSS,on) (s):\n\nThe time constant governing the exponential rise of the lactate production rate (\\(vLa_{SS}\\)) towards its new, higher target value when exercise intensity increases. Represents how quickly the glycolytic flux adapts upwards.\n\nvLaSS,off Time Constant (τvLaSS,off) (s):\n\nThe time constant governing the exponential fall of \\(vLa_{SS}\\) towards its new, lower target value when exercise intensity decreases or during recovery.\n\nvLaSS Response Delay (s):\n\nA pure time delay (in seconds) before the lactate production rate (\\(vLa_{SS}\\)) begins its exponential kinetic response to a change in exercise intensity. This simulates inherent delays in the activation or deactivation of the glycolytic pathway.\n\nCap vLass by \\(\\dot{V}O_2\\) Deficit (Checkbox):\n\nAn optional physiological constraint. If checked, the actual lactate production rate (\\(vLa_{SS}\\)) at any given time point is capped. The cap is determined such that the net anaerobic energy supply (derived from lactate production minus concurrent lactate oxidation) does not exceed the current calculated oxygen deficit (which is \\(\\dot{V}O_2 \\text{ Demand} - \\dot{V}O_2 \\text{ Actual}\\)). The purpose is to enhance physiological plausibility by preventing an unrealistic “overshoot” of anaerobic energy production, especially when aerobic energy supply is still increasing or limited. Default is off, meaning \\(vLa_{SS}\\) is determined purely by its own kinetics without this energy balance cap.\n\nMuscle pH (pHm) Simulation:\n\nThis feature simulates changes in intramuscular pH (pHm). The calculation is based on principles outlined by Mader (2003) and further discussed in texts like Heck & Bartmus (2022, Ch. 4, not in provided citation list). It considers:\n\nEstimated inorganic phosphate concentration [Pi], which is inversely related to [PCr].\nIntramuscular lactate concentration [La]m, derived from the dynamic lactate accumulation model.\nEstimated arterial partial pressure of CO₂ (pCO₂), which is modeled to increase with relative exercise intensity (%\\(\\dot{V}O_{2,max}\\)).\n\nThe pHm calculated from the previous time step is then used to modulate the effective maximal lactate production rate (\\(vLa_{max,eff}\\)) for the current time step. This simulates the well-known inhibitory effect of falling pH on key glycolytic enzymes, particularly phosphofructokinase (PFK). The relationship is often sigmoidal: \\(vLa_{max,eff} = vLa_{max,base} \\cdot \\text{PFK_Activity_Factor(pH}_m\\text{)}\\) where PFK_Activity_Factor decreases as pHm drops below a certain threshold (e.g., below ~7.0).\nThis pH-modulated \\(vLa_{max,eff}\\) then becomes the input for determining the target \\(vLa_{SS}\\) for the current time step, creating a feedback loop where high lactate production can lead to lower pH, which in turn can reduce further lactate production.\n\n\n\n\nGlycogen Storage Parameters\nThis section models the dynamics of muscle glycogen stores during exercise, including depletion due to carbohydrate oxidation and potential repletion from carbohydrate intake.\n\nAuto-calculate glycogen values based on muscle mass (Checkbox):\n\nIf checked, the “Initial Glycogen Storage” and “Maximum Glycogen Storage” sliders are automatically populated based on the “Active Muscle Mass” value (from the PCr section). This calculation assumes typical glycogen concentrations in muscle tissue, for example, around 15 g of glycogen per kg of active muscle for normal, fed states, and perhaps 20 g/kg for carbohydrate-loaded states.\n\nInitial Glycogen Storage (g):\n\nThe amount of glycogen (in grams) assumed to be available in the active muscle mass at the beginning of the simulation.\n\nMaximum Glycogen Storage (g):\n\nThe physiological upper limit for glycogen storage in the active muscle mass. Repletion from carbohydrate intake will not exceed this value.\n\nCarbohydrate Intake Rate (g·h⁻¹):\n\nThe rate (in grams per hour) at which exogenous carbohydrates are ingested and become available for either direct oxidation or glycogen synthesis during the simulation. Typical maximal exogenous CHO oxidation rates are often cited around 60-90 g/h, depending on the type of CHO and individual training status (A. E. Jeukendrup & Wallis (2005); A. Jeukendrup & Gleeson (2019)).\n\n\nThe model calculates glycogen depletion based on the rate of carbohydrate oxidation. The CHO oxidation rate itself is derived dynamically from the balance of \\(vLa_{SS}\\) and \\(vLa_{ox}\\), similar to Tab 1, but applied kinetically over time. If glycogen stores reach zero, it can trigger a simulation abortion if that condition is set.\n\n\nW’ Balance Parameters\nThis section implements a model for W’ (pronounced “W prime”), which represents the finite amount of work that can be performed above an individual’s Critical Power (CP). Depletion of W’ is associated with fatigue.\n\nCritical Power (CP) (W):\n\nThe highest power output that can, theoretically, be sustained for a very long time without a progressive loss of homeostasis or depletion of W’. It’s a key parameter in endurance performance modeling.\n\nW’ (kJ):\n\nThe total amount of work (expressed in kilojoules) that can be performed above CP before W’ is fully depleted. It reflects anaerobic capacity and tolerance for high-intensity exercise.\n\nPmax (W):\n\nMaximum instantaneous power an athlete can produce, typically in a very short sprint (e.g., a few seconds). This parameter is integral to the 3-parameter critical power model and is specifically used in this app for calculating MPA (Maximum Power Available) and the Strain Score (SS), drawing on concepts from Hauser et al. (2014) and potentially more recent work like Kontro et al. (2025, though not in the provided citation list, the HTML formulas align with this). Pmax is considered to represent the capacity of the alactic (PCr/immediate) energy system.\n\nUse MLSS from Tab 1 as CP (Checkbox):\n\nIf checked (default), the CP value for this simulation is automatically set to the MLSS power output calculated in Tab 1. The CP slider below becomes disabled. This provides a physiologically grounded estimate for CP.\n\nW’ Balance Minimum (kJ):\n\nA user-defined lower threshold for W’ balance.\n\nAbort simulation when W’ Balance falls below slider minimum (Checkbox):\n\nIf checked (default), the simulation will terminate if the calculated W’BAL (W’ balance) drops below the specified “W’ Balance Minimum”.\n\n\nThe W’ balance dynamics are modeled as follows (conceptually similar to the model by Skiba and colleagues, though specific citation from list is pending): * During exercise above CP (P &gt; CP), W’ depletes: $ W’{BAL}(t) = W’{BAL}(u) - (P - CP) (t-u) $ where \\(W'_{BAL}(t)\\) is W’ balance at time \\(t\\), \\(W'_{BAL}(u)\\) is W’ balance at previous time \\(u\\), and \\((t-u)\\) is the time interval. * During exercise below CP (P &lt; CP), W’ recovers: The recovery follows an exponential pattern, often described by: $ W’_{BAL}(t) = W’0 - (W’0 - W’{BAL}(u)) e^{-((CP - P{recovery})/W’_0) (t-u)} $ where \\(W'_0\\) is the initial W’ capacity, and \\(P_{recovery}\\) is the power output during recovery.\nThe MPA & Strain Score (SS) model, drawing from work like Hauser et al. (2014) and Kontro et al. (2025, formulas in HTML), is calculated as: * MPA (Maximum Power Available): The highest power output theoretically achievable at any given moment, considering the current W’ depletion. $ MPA = P_{max} - (P_{max} - CP) (W’{EXP}/W’)^2 $ where \\(W'_{EXP}\\) is the amount of W’ expended (\\(W'_0 - W'_{BAL}\\)). * kstrain (Strain Coefficient): A factor that modulates the perceived strain based on current power relative to MPA and CP. $ k{strain} = (P_{max} - MPA + CP)/(P_{max} - P + CP) $ * SR (Strain Rate): The instantaneous rate of strain accumulation. $ SR = k_{strain} P $ * SS (Strain Score): The cumulative strain over the exercise bout. $ SS = (SR t) () $ The Normalization Factor, \\((P_{max}/CP^2) \\cdot (100/3600)\\), scales the score so that 1 hour at CP roughly equals 100 SS points.\n\n\nPCr and O₂ Deficit Model\nThis section simulates the dynamics of phosphocreatine (PCr) stores in the active muscle and the associated oxygen deficit incurred at the onset of exercise or during increases in intensity.\n\nResting PCr (mmol·kg⁻¹ wet muscle weight):\n\nThe initial concentration of PCr in the active muscle tissue at the start of the simulation. Typical physiological values in humans range from about 15 to 38 mmol·kg⁻¹ ww. PCr serves as an immediate buffer for ATP regeneration.\n\nP/O₂ (mol ATP · mol O₂⁻¹):\n\nThe P/O₂ ratio represents the stoichiometry of oxidative phosphorylation: the number of moles of ATP synthesized per mole of diatomic oxygen (O₂) reduced. This value is not constant but depends on the substrate being oxidized and the efficiency of the electron transport chain. It’s typically around 4.61 for pure fat oxidation and up to 5.0 for pure carbohydrate oxidation. The slider allows for adjustment within this physiological range.\n\nActive Muscle Mass (kg):\n\nThe estimated mass of the muscle actively involved in the cycling exercise. This is a crucial parameter as PCr concentrations are expressed per kg of muscle. The tooltip provides research-based estimates (e.g., for cyclists, women: ~22-25.5% of body weight; men: ~27-31.5% of body weight, depending on seated/standing, drawing from data like Janssen et al. (2000) (not in list) and general exercise physiology).\n\nO₂-Lactate Equiv. (β) (Display Only):\n\nDisplayed as a constant value of approximately 3.0 ml O₂·kg⁻¹·mM⁻¹. This represents the “oxygen equivalent of lactate accumulation,” meaning the amount of O₂ (in ml per kg body mass) that would have been required aerobically to produce the energy equivalent to accumulating 1 mM of lactate in the blood. This concept, detailed by (diPrampero1981?) (not in provided citation list, but noted in HTML comments), is used in the model to help partition the O₂ deficit between contributions from PCr breakdown and net lactate production.\n\nShow \\(\\dot{V}O_2\\) Demand Curve (Checkbox):\n\nIf checked, the simulation plot will include a trace representing the theoretical, instantaneous \\(\\dot{V}O_2\\) demand required to meet the energy cost of the current power output. The area between this demand curve and the actual kinetically-limited \\(\\dot{V}O_2\\) curve visually represents the accumulated oxygen deficit (or surplus during recovery).\n\n\nPCr Model Dynamics: The model calculates changes in the PCr store based on the balance between O₂ demand and actual O₂ uptake: * PCr Depletion: When \\(\\dot{V}O_2\\) demand exceeds actual \\(\\dot{V}O_2\\) uptake (O₂ deficit), a portion of this deficit is met by the breakdown of PCr to resynthesize ATP. The amount of PCr consumed is proportional to this O₂ deficit portion, scaled by the P/O₂ ratio. $ PCr_{consumed} () (P/O_2 ) $ * PCr Resynthesis: When actual \\(\\dot{V}O_2\\) uptake exceeds \\(\\dot{V}O_2\\) demand (O₂ surplus, e.g., during recovery or lower intensity), PCr is resynthesized. This process also consumes ATP (and thus O₂) and is proportional to the O₂ surplus, scaled by the P/O₂ ratio and a resynthesis efficiency factor (set to 0.5 in the code, meaning 50% of O2 surplus contributes to PCr resynthesis). $ PCr_{resynthesized} ( ) (P/O_2 ) $ The accumulated O₂ deficit represents the total volume of oxygen that would have been consumed if aerobic metabolism could have instantaneously met the energy demand from the start of exercise.\n\n\nModel Parameters (for Tab 2 Simulation)\nThis section allows the user to choose whether the physiological parameters for the Tab 2 simulation are taken from Tab 1 or set independently.\n\nUse model parameters from Tab 1 (Checkbox):\n\nChecked (Default): The core physiological parameters for the simulation (CE, \\(\\dot{V}O_{2,max}\\), \\(\\dot{V}O_{2,Base}\\), vLamax, Body Mass, HR parameters, and curvilinear settings) are directly mirrored from their current values in Tab 1. The individual parameter sliders below this checkbox become disabled but will reflect the values from Tab 1. This ensures consistency if the user wants to simulate dynamics based on a profile established in the steady-state tab. Changes in Tab 1 will automatically propagate to these linked parameters.\nUnchecked: The individual parameter sliders below this checkbox become active, allowing the user to define a completely independent set of physiological parameters for the Tab 2 simulation, different from those in Tab 1.\n\nIndividual Parameter Sliders: (Active if “Use model parameters from Tab 1” is unchecked)\n\nCurvilinear CE relationship (Checkbox): As in Tab 1.\nCE (ml·min⁻¹·W⁻¹) (Slider): For linear CE model.\nCEStart / CETarget (Sliders): For curvilinear CE model.\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹) (Slider)\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹) (Slider)\nvLamax (mmol·l⁻¹·s⁻¹) (Slider)\nBody Mass (kg) (Slider)\nHRmax (bpm) (Slider)\nHRBase (bpm) (Slider)\nCEHR (bpm·W⁻¹) (Slider)\n\n\n\n\n\nExercise Simulation Plot (Tab 2)\nThis is a dynamic, multi-trace plot that visualizes various simulated physiological and performance parameters over the time course of the defined exercise protocol.\n\nX-Axis: Time (seconds). The range can be manually adjusted using the “Display Window Settings.”\nPrimary Y-Axis (Left - y): Displays parameters primarily related to power, mechanical output, and some stores.\n\nPower (W) (Dark Grey Line): The instantaneous power output of the simulated exercise.\nCadence (rpm) (Light Grey Dashed Line): Displayed if cadence data is available from a loaded file and “Use cadence from file” is active, or if fixed cadence is used with cadence dependency enabled.\nMPA (W) (Dark Grey-Blue Dashed Line): Maximum Power Available, calculated from the W’ balance model.\nStrain Score (Unitless) (Pink Line): Cumulative Strain Score.\nGlycogen Stores (g) (Dark Pink Dotted Line): Modeled active muscle glycogen content.\n\nSecondary Y-Axis (Right - y2): Displays a variety of scaled parameters, including lactate kinetics, W’ balance, PCr, pH, RQ, and HR. This axis often has a wider range to accommodate different scales.\n\nW’ Balance (kJ) (Green Line): The current W’ balance.\nLactate (Muscle) (mM) (Dark Red Line): Modeled intramuscular lactate concentration.\nLactate (Blood) (mM) (Dark Red Dotted Line): Modeled blood lactate concentration (from a 2-compartment model).\nvLaSS (mM/min) (Red Dashed Line): Instantaneous rate of lactate production.\nvLaox (mM/min) (Light Blue Dashed Line): Instantaneous rate of lactate oxidation.\nPD (Pyruvate Deficit) (mM/min) (Purple Line): \\(vLa_{ox} - vLa_{SS}\\).\nPCr Store (mM/kg) (Yellow Dotted Line): Modeled phosphocreatine concentration in active muscle.\npHm (Unitless) (Orange Dotted Line): Modeled intramuscular pH.\nRQpredicted ⋅ 10 (Unitless) (Yellow-Orange Dashed Line): Predicted Respiratory Quotient, scaled by a factor of 10 for better visibility on this shared axis. (Actual RQ values from 0.7 to 1.05).\nHeart Rate ⋅ 10⁻¹ (bpm) (Dark Red Dotted Line): Simulated heart rate, scaled by a factor of 0.1 (e.g., 150 bpm shown as 15).\nZero Line (Thin Grey Dotted Line): Reference line at y=0 for this axis.\n\nTertiary Y-Axis (Right, further out - y3): Displays oxygen uptake parameters.\n\n\\(\\dot{V}O_2\\) (ml/min) (Blue Line): The actual, kinetically-determined oxygen uptake.\n\\(\\dot{V}O_2\\) Demand (ml/min) (Blue Dotted Line): (Visible if “Show \\(\\dot{V}O_2\\) Demand Curve” is checked) The theoretical instantaneous \\(\\dot{V}O_2\\) required to meet the energy cost of the current power output.\nO₂ Deficit Area (Light Blue Filled Area): (Visible if demand curve is shown) The area between the \\(\\dot{V}O_2\\) Demand curve and the actual \\(\\dot{V}O_2\\) curve, visually representing the oxygen deficit (when demand &gt; uptake) or surplus (when uptake &gt; demand).\nAcc. O₂ Deficit (ml) (Cyan Dotted Line): The cumulative net oxygen deficit over time.\n\n\nUsers can interact with the plot legend by clicking on trace names to toggle their visibility. This is useful for focusing on specific parameters. If the simulation is terminated prematurely due to one of the set abort conditions (lactate, W’ balance, glycogen depletion, or PCr depletion), an annotation will appear on the plot marking the point and reason for termination.\n\n\nExercise Summary Statistics (Tab 2)\nLocated below the simulation plot, this section provides a quantitative summary of the entire simulated exercise session.\n\nAverage mechanical Power (W): Time-weighted average of the power output.\nNormalized mechanical Power (W): A power averaging method that gives more weight to higher intensity portions, often used for estimating physiological strain (conceptually similar to TrainingPeaks® NP®). Calculated using a 30-second rolling average raised to the 4th power, averaged, then taken to the 1/4th power.\nTotal Aerobic Energy Expenditure (kcal): The gross (total) energy expended via aerobic pathways throughout the simulation, calculated from total oxygen consumption and an average caloric equivalent.\nTotal mechanical Work (kJ): The sum of (Power × time_interval) for all intervals, converted to kJ.\nTotal metabolic Work (kJ): The sum of energy contributions from net aerobic, anaerobic-lactic, and anaerobic-alactic pathways. This represents the total energy turnover above resting levels to perform the exercise.\n\nAerobic contribution (kJ | %): Energy derived from net aerobic metabolism (actual \\(\\dot{V}O_2\\) minus \\(\\dot{V}O_{2,Base}\\), converted to kJ). The percentage is relative to Total Metabolic Work.\nAnaerobic-lactic contribution (kJ | %): Energy derived from net lactate production. This is estimated from the O₂ equivalent of gross lactate production (from \\(vLa_{SS}\\) kinetics), assuming that the energy not covered by PCr or immediate \\(\\dot{V}O_2\\) increase is initially met by glycolysis.\nAnaerobic-alactic contribution (kJ | %): Energy derived from the net breakdown of PCr. This is estimated from the O₂ equivalent of PCr utilization.\n\nηgross (%): Gross efficiency, calculated as \\((\\text{Total mechanical Work}) / (\\text{Total Gross Aerobic Energy Expenditure})\\).\nηnet (%): Net efficiency, calculated as \\((\\text{Total mechanical Work}) / (\\text{Net Aerobic Energy Expenditure})\\), where net aerobic energy excludes the energy cost associated with \\(\\dot{V}O_{2,Base}\\).\nηtotal (%): Total efficiency, calculated as \\((\\text{Total mechanical Work}) / (\\text{Total Metabolic Work})\\). This considers all three (net aerobic, lactic, alactic) energy pathway contributions in the denominator.\nWork &gt; CP (mechanical) (kJ): The total amount of mechanical work performed during periods where power output was above the set Critical Power (CP).\nW’ Balance Drop (kJ): The difference between the initial W’ and the minimum W’ balance reached during the simulation.\nTotal Carbohydrate Utilization (g): The total mass of carbohydrates oxidized during the simulation.\nTotal Fat Utilization (g): The total mass of fats oxidized during the simulation.\nTraining Stress Score (TSS): An estimation of training load, calculated using Normalized Power, exercise duration, and the set Critical Power (CP) as a proxy for Functional Threshold Power (FTP). Formula: \\(TSS = (\\text{Duration in seconds} \\cdot \\text{Normalized Power} \\cdot \\text{Intensity Factor}) / (\\text{FTP} \\cdot 3600) \\cdot 100\\), where Intensity Factor = Normalized Power / FTP.\nStrain Score (SS): The total cumulative Strain Score based on the model by Hauser et al. (2014) and Kontro et al. (2025, as per HTML formulas).\n\nSSCP: The component of the total Strain Score attributed to work at or below CP.\nSSW’: The component attributed to the utilization of W’.\nSSPmax: The component attributed to contributions from Pmax (very high intensity, short duration power).\n\n\nThis comprehensive suite of tools and visualizations offers a powerful platform for students, coaches, and researchers to explore and understand the complex interplay of metabolic processes during exercise."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The Sprint Metabolism Model application implements a sophisticated simulation of the biochemical processes that occur during high-intensity exercise. Based on the foundational work of Alois Mader and Hans-Hermann Heck, this model focuses specifically on the rapid changes in metabolite concentrations that characterize sprint activities. Unlike endurance models that emphasize steady-state conditions, this sprint model captures the dynamic, non-steady-state nature of short-duration, high-intensity exercise where ATP-PCr dynamics and anaerobic glycolysis predominate.\nThe model provides a mechanistic framework for understanding muscle fatigue during sprint activities by simulating how high-energy phosphate compounds (ATP, PCr) are depleted and how metabolic by-products (lactate) accumulate over time. These simulations offer insights into the metabolic factors that limit sprint performance and the physiological determinants of sprint capacity.\n\n\n\nThe foundation of the Sprint Metabolism Model lies in understanding the equilibrium reactions that govern energy transfer in muscle cells during high-intensity exercise. Two key reactions are central to this model:\n\n\nThe Creatine Kinase (CK) reaction plays a crucial role in ATP resynthesis during the initial seconds of sprint activity:\n\\[\\text{PCr} + \\text{ADP} + \\text{H}^+ \\rightleftharpoons \\text{ATP} + \\text{Cr}\\]\nThis reaction is characterized by an equilibrium constant (\\(M_1\\)) that determines the relationship between ATP, ADP, PCr, and inorganic phosphate (Pi):\n\\[\\frac{[\\text{ATP}]}{[\\text{ADP}]} = M_1 \\cdot \\frac{[\\text{PCr}]}{[\\text{Pi}]} \\tag{1}\\]\nThe equilibrium constant \\(M_1\\) is pH-dependent and is related to the hydrogen ion concentration by:\n\\[M_1 = [H^+] \\cdot 1.66 \\times 10^9 \\text{ mol}^{-1} \\tag{2}\\]\nAt a pH of 7.0, \\(M_1\\) is approximately 166. This pH-dependency of \\(M_1\\) is physiologically significant as it shows how acidosis (decreased pH) can influence the balance between ATP and ADP.\n\n\n\nThe Adenylate Kinase (AK) reaction acts as a secondary buffer system for ATP levels:\n\\[2\\text{ADP} \\rightleftharpoons \\text{ATP} + \\text{AMP}\\]\nThis reaction is quantified by the equilibrium constant \\(M_3\\):\n\\[[\\text{ATP}] \\cdot [\\text{AMP}] = M_3 \\cdot [\\text{ADP}]^2 \\tag{3}\\]\nThe value of \\(M_3\\) typically ranges from 0.85 to 1.05, with 1.05 used as the default in the model.\n\n\n\n\nTwo critical conservation laws govern the total pool sizes of key metabolites:\n\n\nThe sum of adenine nucleotides remains constant throughout exercise:\n\\[S[A] = [\\text{ATP}] + [\\text{ADP}] + [\\text{AMP}] \\tag{4}\\]\nWhere \\(S[A]\\) is typically around 7 mmol·kg\\(^{-1}\\) muscle wet weight.\n\n\n\nSimilarly, the total phosphate pool remains constant:\n\\[S[C] = [\\text{PCr}] + [\\text{Pi}] \\tag{5}\\]\nWhere \\(S[C]\\) is typically around 26-28 mmol·kg\\(^{-1}\\) muscle wet weight.\n\n\n\n\nBy combining the equilibrium and conservation equations, we can derive expressions for calculating the concentrations of all metabolites based on the current PCr and Pi levels.\nFirst, we define a variable \\(Q\\) based on the Creatine Kinase equilibrium:\n\\[Q = M_1 \\cdot \\frac{[\\text{PCr}]}{[\\text{Pi}]} \\tag{6}\\]\nUsing this variable, we can express ADP concentration as:\n\\[[\\text{ADP}] = \\frac{S[A] \\cdot Q}{M_3 + Q + Q^2} \\tag{7}\\]\nOnce ADP is calculated, ATP and AMP can be determined:\n\\[[\\text{ATP}] = [\\text{ADP}] \\cdot Q \\tag{8}\\]\n\\[[\\text{AMP}] = S[A] - [\\text{ATP}] - [\\text{ADP}] \\tag{9}\\]\nThese equations allow us to calculate the complete metabolite profile at any point during exercise, based on the changing PCr concentration.\n\n\n\nIn the Sprint Metabolism Model, ATP consumption can be specified in two ways:\n\n\nThis approach directly specifies the rate of ATP utilization during exercise:\n\\[\\text{ATP consumption rate} = \\text{mmol} \\cdot \\text{kg}^{-1} \\cdot \\text{s}^{-1} \\tag{10}\\]\nTypical values range from 0.5 to 5 mmol·kg\\(^{-1}\\)·s\\(^{-1}\\), with higher values representing more intense sprint efforts.\n\n\n\nThis alternative approach calculates ATP consumption based on mechanical power output:\n\\[\\text{ATP consumption rate} = \\frac{\\text{Power (W)}}{\\text{Active Muscle Mass (kg)}} \\cdot \\text{WATT\\_TO\\_ATP\\_FACTOR} \\tag{11}\\]\nWhere WATT_TO_ATP_FACTOR is approximately 0.05 mmol·kg\\(^{-1}\\)·s\\(^{-1}\\) per W·kg\\(^{-1}\\).\nThis conversion factor represents the biochemical efficiency of converting ATP energy to mechanical work, accounting for the efficiency losses in the contraction process.\n\n\n\n\nAs PCr becomes depleted and ADP accumulates, glycolysis is activated to provide additional ATP. The activation of glycolysis follows a sigmoid relationship with ADP concentration:\n\\[v_{\\text{La\\_rate}} = \\frac{v_{\\text{La\\_max}} \\cdot [\\text{ADP}]^3}{KS2 + [\\text{ADP}]^3} \\tag{12}\\]\nWhere: - \\(v_{\\text{La\\_max}}\\) is the maximum lactate formation rate (a key parameter representing glycolytic capacity) - \\(KS2\\) is approximately \\((0.15)^3 = 0.003375\\) mmol·kg\\(^{-1}\\) - \\([\\text{ADP}]\\) is the ADP concentration in mmol·kg\\(^{-1}\\)\nThis equation represents a Hill equation with a coefficient of 3, reflecting the steep activation of glycolysis as ADP increases. The cubic relationship with ADP is particularly important for capturing the rapid acceleration of glycolysis during sprint exercise.\n\n\n\nThe free energy available from ATP hydrolysis (\\(\\Delta G_{\\text{ATP}}\\)) is a critical factor in determining when muscular fatigue occurs:\n\\[\\Delta G_{\\text{ATP}} = \\Delta G^0 + RT \\ln\\frac{[\\text{ADP}][\\text{Pi}]}{[\\text{ATP}]} \\tag{13}\\]\nWhere: - \\(\\Delta G^0\\) is approximately -30.5 kJ·mol\\(^{-1}\\) - \\(R\\) is the gas constant (8.314 J·mol\\(^{-1}\\)·K\\(^{-1}\\)) - \\(T\\) is the absolute temperature (310 K or 37°C)\nAs exercise progresses and ATP decreases while ADP and Pi increase, the absolute value of \\(\\Delta G_{\\text{ATP}}\\) decreases, providing less energy for muscle contraction. When ATP falls below approximately 65% of its initial concentration, the free energy becomes insufficient for maintaining muscle force, leading to fatigue.\nThis concept forms the basis for the termination threshold in the simulation, where exercise is considered to end when ATP drops below a user-specified percentage of the initial value (typically 65%).\n\n\n\nThe model implements a time-step approach to simulate the dynamic changes in metabolite concentrations during sprint exercise:\n\nInitialize PCr, Pi, and calculate initial ATP, ADP, and AMP concentrations\nFor each time step (\\(\\Delta t\\), typically 0.05 seconds):\n\nCalculate ATP consumption for the current time step\nReduce PCr by the corresponding amount to resynthesize ATP\nUpdate Pi based on PCr consumption (conservation of total phosphate)\nRecalculate ATP, ADP, and AMP concentrations using equilibrium equations\nCalculate lactate formation rate and accumulate lactate\nCheck if termination criteria are met (ATP below threshold)\n\n\nThis approach allows the model to capture the rapidly changing metabolite concentrations during sprint exercise with high temporal resolution.\n\n\n\nThe application implements the simulation through a series of equations applied at each time step:\n\n\nFor the starting condition, the model calculates the initial equilibrium state:\n\\[Q_{t0} = M_1 \\cdot \\frac{[\\text{PCr}_0]}{[\\text{Pi}_0]} \\tag{14}\\]\n\\[[\\text{ADP}_0] = \\frac{S[A] \\cdot Q_{t0}}{M_3 + Q_{t0} + Q_{t0}^2} \\tag{15}\\]\n\\[[\\text{ATP}_0] = [\\text{ADP}_0] \\cdot Q_{t0} \\tag{16}\\]\n\\[[\\text{AMP}_0] = S[A] - [\\text{ATP}_0] - [\\text{ADP}_0] \\tag{17}\\]\n\n\n\nFor each time step, the model calculates:\n\nATP consumption based on the selected mode: \\[\\text{ATP needed} = \\text{ATP consumption rate} \\cdot \\Delta t \\tag{18}\\]\nPCr utilization to resynthesize ATP: \\[\\text{PCr used} = \\min([\\text{PCr}], \\text{ATP needed}) \\tag{19}\\] \\[[\\text{PCr}]_{t+\\Delta t} = [\\text{PCr}]_t - \\text{PCr used} \\tag{20}\\]\nUpdate Pi based on PCr consumption: \\[[\\text{Pi}]_{t+\\Delta t} = S[C] - [\\text{PCr}]_{t+\\Delta t} \\tag{21}\\]\nRecalculate Q, ADP, ATP, and AMP: \\[Q_{t+\\Delta t} = M_1 \\cdot \\frac{[\\text{PCr}]_{t+\\Delta t}}{[\\text{Pi}]_{t+\\Delta t}} \\tag{22}\\]\n\\[[\\text{ADP}]_{t+\\Delta t} = \\frac{S[A] \\cdot Q_{t+\\Delta t}}{M_3 + Q_{t+\\Delta t} + Q_{t+\\Delta t}^2} \\tag{23}\\]\n\\[[\\text{ATP}]_{t+\\Delta t} = [\\text{ADP}]_{t+\\Delta t} \\cdot Q_{t+\\Delta t} \\tag{24}\\]\n\\[[\\text{AMP}]_{t+\\Delta t} = S[A] - [\\text{ATP}]_{t+\\Delta t} - [\\text{ADP}]_{t+\\Delta t} \\tag{25}\\]\nCalculate lactate formation rate: \\[v_{\\text{La\\_rate}} = \\frac{v_{\\text{La\\_max}} \\cdot [\\text{ADP}]_{t+\\Delta t}^3}{KS2 + [\\text{ADP}]_{t+\\Delta t}^3} \\tag{26}\\]\n\\[[\\text{La}]_{t+\\Delta t} = [\\text{La}]_t + v_{\\text{La\\_rate}} \\cdot \\Delta t \\tag{27}\\]\nCheck termination criteria: \\[\\text{If } [\\text{ATP}]_{t+\\Delta t} &lt; \\frac{\\text{threshold}}{100} \\cdot [\\text{ATP}_0] \\text{ then terminate} \\tag{28}\\]\n\n\n\n\n\nThe application includes a feature to estimate the initial PCr concentration based on body mass and active muscle percentage:\n\\[[\\text{PCr}_0] = \\text{basePCr} + \\text{massAdjustment} + \\text{muscleAdjustment} \\tag{29}\\]\nWhere: - basePCr is the typical value for a healthy adult (≈ 23 mmol·kg\\(^{-1}\\)) - massAdjustment = (bodyMass - 70) × 0.02 - muscleAdjustment = (activeMassPerc - 30) × 0.1\nThis estimation reflects the observation that PCr concentration tends to be higher in more muscular individuals and lower in less active individuals. The function constrains the estimated value to a physiologically plausible range of 15-30 mmol·kg\\(^{-1}\\).\n\n\n\nThe simulation results can be interpreted in terms of the different energy systems that contribute to sprint performance:\n\nATP-PCr System (0-10 seconds): The initial phase shows rapid PCr depletion with relatively stable ATP concentrations, demonstrating the critical buffer role of PCr.\nGlycolytic Contribution (5-20+ seconds): As PCr depletes, ADP increases, activating glycolysis as indicated by the rising lactate formation rate. This represents the transition from PCr to glycolytic dominance.\nFatigue Onset (Termination Point): The point where ATP falls below the critical threshold (typically 65% of initial value) represents the theoretical time at which muscle contraction would become impaired in an actual sprint.\n\nThe model also illustrates key physiological principles:\n\nBuffer Effect of PCr: The initial stability of ATP despite high energy demands demonstrates PCr’s crucial role in buffering ATP levels.\nDelayed Glycolytic Activation: The lag in lactate formation illustrates the delayed activation of glycolysis, which requires ADP accumulation.\nEnergy System Transition: The crossover between PCr depletion and glycolytic activation represents the transition between immediate (ATP-PCr) and short-term (glycolytic) energy systems.\nMetabolic Limitation to Sprint Performance: The termination time provides insight into the metabolic factors that limit sprint duration and intensity.\n\n\n\n\n\n\n\nTraining Prescription: The model can help determine the appropriate work-to-rest ratios for sprint interval training by showing how long it takes to substantially deplete PCr and how long recovery periods should be to allow adequate PCr resynthesis.\nIndividual Differences: By adjusting model parameters (PCr0, vLa_max, active muscle mass), coaches and researchers can explore how individual physiological differences affect sprint performance and fatigue resistance.\nEquipment Selection: Power-based analysis can inform equipment choices (e.g., gear ratios) by showing how different power demands affect metabolic responses and fatigue onset.\n\n\n\n\n\nSimplification of Complex Systems: The model simplifies many aspects of muscle metabolism, including the spatial distribution of metabolites, fiber type heterogeneity, and complex enzyme kinetics.\nFixed Parameter Assumptions: Some parameters (e.g., pH) are assumed constant although they change during intense exercise.\nMechanical Factors Not Included: The model focuses on metabolic factors but does not account for mechanical factors like muscle elasticity, neuromuscular fatigue, or coordination.\nValidation Challenges: Direct validation of the model is challenging because invasive techniques are required to measure intramuscular metabolite concentrations during sprint exercise.\n\nDespite these limitations, the Sprint Metabolism Model provides valuable insights into the dynamic metabolic processes that underlie sprint performance and fatigue, serving as a powerful tool for research, education, and applied sport science."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#introduction-to-the-sprint-metabolism-model",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#introduction-to-the-sprint-metabolism-model",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The Sprint Metabolism Model application implements a sophisticated simulation of the biochemical processes that occur during high-intensity exercise. Based on the foundational work of Alois Mader and Hans-Hermann Heck, this model focuses specifically on the rapid changes in metabolite concentrations that characterize sprint activities. Unlike endurance models that emphasize steady-state conditions, this sprint model captures the dynamic, non-steady-state nature of short-duration, high-intensity exercise where ATP-PCr dynamics and anaerobic glycolysis predominate.\nThe model provides a mechanistic framework for understanding muscle fatigue during sprint activities by simulating how high-energy phosphate compounds (ATP, PCr) are depleted and how metabolic by-products (lactate) accumulate over time. These simulations offer insights into the metabolic factors that limit sprint performance and the physiological determinants of sprint capacity."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#fundamental-equilibrium-reactions",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#fundamental-equilibrium-reactions",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The foundation of the Sprint Metabolism Model lies in understanding the equilibrium reactions that govern energy transfer in muscle cells during high-intensity exercise. Two key reactions are central to this model:\n\n\nThe Creatine Kinase (CK) reaction plays a crucial role in ATP resynthesis during the initial seconds of sprint activity:\n\\[\\text{PCr} + \\text{ADP} + \\text{H}^+ \\rightleftharpoons \\text{ATP} + \\text{Cr}\\]\nThis reaction is characterized by an equilibrium constant (\\(M_1\\)) that determines the relationship between ATP, ADP, PCr, and inorganic phosphate (Pi):\n\\[\\frac{[\\text{ATP}]}{[\\text{ADP}]} = M_1 \\cdot \\frac{[\\text{PCr}]}{[\\text{Pi}]} \\tag{1}\\]\nThe equilibrium constant \\(M_1\\) is pH-dependent and is related to the hydrogen ion concentration by:\n\\[M_1 = [H^+] \\cdot 1.66 \\times 10^9 \\text{ mol}^{-1} \\tag{2}\\]\nAt a pH of 7.0, \\(M_1\\) is approximately 166. This pH-dependency of \\(M_1\\) is physiologically significant as it shows how acidosis (decreased pH) can influence the balance between ATP and ADP.\n\n\n\nThe Adenylate Kinase (AK) reaction acts as a secondary buffer system for ATP levels:\n\\[2\\text{ADP} \\rightleftharpoons \\text{ATP} + \\text{AMP}\\]\nThis reaction is quantified by the equilibrium constant \\(M_3\\):\n\\[[\\text{ATP}] \\cdot [\\text{AMP}] = M_3 \\cdot [\\text{ADP}]^2 \\tag{3}\\]\nThe value of \\(M_3\\) typically ranges from 0.85 to 1.05, with 1.05 used as the default in the model."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#conservation-laws-and-metabolite-pools",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#conservation-laws-and-metabolite-pools",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "Two critical conservation laws govern the total pool sizes of key metabolites:\n\n\nThe sum of adenine nucleotides remains constant throughout exercise:\n\\[S[A] = [\\text{ATP}] + [\\text{ADP}] + [\\text{AMP}] \\tag{4}\\]\nWhere \\(S[A]\\) is typically around 7 mmol·kg\\(^{-1}\\) muscle wet weight.\n\n\n\nSimilarly, the total phosphate pool remains constant:\n\\[S[C] = [\\text{PCr}] + [\\text{Pi}] \\tag{5}\\]\nWhere \\(S[C]\\) is typically around 26-28 mmol·kg\\(^{-1}\\) muscle wet weight."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#calculating-equilibrium-concentrations",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#calculating-equilibrium-concentrations",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "By combining the equilibrium and conservation equations, we can derive expressions for calculating the concentrations of all metabolites based on the current PCr and Pi levels.\nFirst, we define a variable \\(Q\\) based on the Creatine Kinase equilibrium:\n\\[Q = M_1 \\cdot \\frac{[\\text{PCr}]}{[\\text{Pi}]} \\tag{6}\\]\nUsing this variable, we can express ADP concentration as:\n\\[[\\text{ADP}] = \\frac{S[A] \\cdot Q}{M_3 + Q + Q^2} \\tag{7}\\]\nOnce ADP is calculated, ATP and AMP can be determined:\n\\[[\\text{ATP}] = [\\text{ADP}] \\cdot Q \\tag{8}\\]\n\\[[\\text{AMP}] = S[A] - [\\text{ATP}] - [\\text{ADP}] \\tag{9}\\]\nThese equations allow us to calculate the complete metabolite profile at any point during exercise, based on the changing PCr concentration."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#atp-consumption-during-sprint-exercise",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#atp-consumption-during-sprint-exercise",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "In the Sprint Metabolism Model, ATP consumption can be specified in two ways:\n\n\nThis approach directly specifies the rate of ATP utilization during exercise:\n\\[\\text{ATP consumption rate} = \\text{mmol} \\cdot \\text{kg}^{-1} \\cdot \\text{s}^{-1} \\tag{10}\\]\nTypical values range from 0.5 to 5 mmol·kg\\(^{-1}\\)·s\\(^{-1}\\), with higher values representing more intense sprint efforts.\n\n\n\nThis alternative approach calculates ATP consumption based on mechanical power output:\n\\[\\text{ATP consumption rate} = \\frac{\\text{Power (W)}}{\\text{Active Muscle Mass (kg)}} \\cdot \\text{WATT\\_TO\\_ATP\\_FACTOR} \\tag{11}\\]\nWhere WATT_TO_ATP_FACTOR is approximately 0.05 mmol·kg\\(^{-1}\\)·s\\(^{-1}\\) per W·kg\\(^{-1}\\).\nThis conversion factor represents the biochemical efficiency of converting ATP energy to mechanical work, accounting for the efficiency losses in the contraction process."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#glycolytic-activation-and-lactate-formation",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#glycolytic-activation-and-lactate-formation",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "As PCr becomes depleted and ADP accumulates, glycolysis is activated to provide additional ATP. The activation of glycolysis follows a sigmoid relationship with ADP concentration:\n\\[v_{\\text{La\\_rate}} = \\frac{v_{\\text{La\\_max}} \\cdot [\\text{ADP}]^3}{KS2 + [\\text{ADP}]^3} \\tag{12}\\]\nWhere: - \\(v_{\\text{La\\_max}}\\) is the maximum lactate formation rate (a key parameter representing glycolytic capacity) - \\(KS2\\) is approximately \\((0.15)^3 = 0.003375\\) mmol·kg\\(^{-1}\\) - \\([\\text{ADP}]\\) is the ADP concentration in mmol·kg\\(^{-1}\\)\nThis equation represents a Hill equation with a coefficient of 3, reflecting the steep activation of glycolysis as ADP increases. The cubic relationship with ADP is particularly important for capturing the rapid acceleration of glycolysis during sprint exercise."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#the-free-energy-of-atp-hydrolysis-and-fatigue",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#the-free-energy-of-atp-hydrolysis-and-fatigue",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The free energy available from ATP hydrolysis (\\(\\Delta G_{\\text{ATP}}\\)) is a critical factor in determining when muscular fatigue occurs:\n\\[\\Delta G_{\\text{ATP}} = \\Delta G^0 + RT \\ln\\frac{[\\text{ADP}][\\text{Pi}]}{[\\text{ATP}]} \\tag{13}\\]\nWhere: - \\(\\Delta G^0\\) is approximately -30.5 kJ·mol\\(^{-1}\\) - \\(R\\) is the gas constant (8.314 J·mol\\(^{-1}\\)·K\\(^{-1}\\)) - \\(T\\) is the absolute temperature (310 K or 37°C)\nAs exercise progresses and ATP decreases while ADP and Pi increase, the absolute value of \\(\\Delta G_{\\text{ATP}}\\) decreases, providing less energy for muscle contraction. When ATP falls below approximately 65% of its initial concentration, the free energy becomes insufficient for maintaining muscle force, leading to fatigue.\nThis concept forms the basis for the termination threshold in the simulation, where exercise is considered to end when ATP drops below a user-specified percentage of the initial value (typically 65%)."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#time-step-simulation-approach",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#time-step-simulation-approach",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The model implements a time-step approach to simulate the dynamic changes in metabolite concentrations during sprint exercise:\n\nInitialize PCr, Pi, and calculate initial ATP, ADP, and AMP concentrations\nFor each time step (\\(\\Delta t\\), typically 0.05 seconds):\n\nCalculate ATP consumption for the current time step\nReduce PCr by the corresponding amount to resynthesize ATP\nUpdate Pi based on PCr consumption (conservation of total phosphate)\nRecalculate ATP, ADP, and AMP concentrations using equilibrium equations\nCalculate lactate formation rate and accumulate lactate\nCheck if termination criteria are met (ATP below threshold)\n\n\nThis approach allows the model to capture the rapidly changing metabolite concentrations during sprint exercise with high temporal resolution."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#mathematical-implementation-in-the-application",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#mathematical-implementation-in-the-application",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The application implements the simulation through a series of equations applied at each time step:\n\n\nFor the starting condition, the model calculates the initial equilibrium state:\n\\[Q_{t0} = M_1 \\cdot \\frac{[\\text{PCr}_0]}{[\\text{Pi}_0]} \\tag{14}\\]\n\\[[\\text{ADP}_0] = \\frac{S[A] \\cdot Q_{t0}}{M_3 + Q_{t0} + Q_{t0}^2} \\tag{15}\\]\n\\[[\\text{ATP}_0] = [\\text{ADP}_0] \\cdot Q_{t0} \\tag{16}\\]\n\\[[\\text{AMP}_0] = S[A] - [\\text{ATP}_0] - [\\text{ADP}_0] \\tag{17}\\]\n\n\n\nFor each time step, the model calculates:\n\nATP consumption based on the selected mode: \\[\\text{ATP needed} = \\text{ATP consumption rate} \\cdot \\Delta t \\tag{18}\\]\nPCr utilization to resynthesize ATP: \\[\\text{PCr used} = \\min([\\text{PCr}], \\text{ATP needed}) \\tag{19}\\] \\[[\\text{PCr}]_{t+\\Delta t} = [\\text{PCr}]_t - \\text{PCr used} \\tag{20}\\]\nUpdate Pi based on PCr consumption: \\[[\\text{Pi}]_{t+\\Delta t} = S[C] - [\\text{PCr}]_{t+\\Delta t} \\tag{21}\\]\nRecalculate Q, ADP, ATP, and AMP: \\[Q_{t+\\Delta t} = M_1 \\cdot \\frac{[\\text{PCr}]_{t+\\Delta t}}{[\\text{Pi}]_{t+\\Delta t}} \\tag{22}\\]\n\\[[\\text{ADP}]_{t+\\Delta t} = \\frac{S[A] \\cdot Q_{t+\\Delta t}}{M_3 + Q_{t+\\Delta t} + Q_{t+\\Delta t}^2} \\tag{23}\\]\n\\[[\\text{ATP}]_{t+\\Delta t} = [\\text{ADP}]_{t+\\Delta t} \\cdot Q_{t+\\Delta t} \\tag{24}\\]\n\\[[\\text{AMP}]_{t+\\Delta t} = S[A] - [\\text{ATP}]_{t+\\Delta t} - [\\text{ADP}]_{t+\\Delta t} \\tag{25}\\]\nCalculate lactate formation rate: \\[v_{\\text{La\\_rate}} = \\frac{v_{\\text{La\\_max}} \\cdot [\\text{ADP}]_{t+\\Delta t}^3}{KS2 + [\\text{ADP}]_{t+\\Delta t}^3} \\tag{26}\\]\n\\[[\\text{La}]_{t+\\Delta t} = [\\text{La}]_t + v_{\\text{La\\_rate}} \\cdot \\Delta t \\tag{27}\\]\nCheck termination criteria: \\[\\text{If } [\\text{ATP}]_{t+\\Delta t} &lt; \\frac{\\text{threshold}}{100} \\cdot [\\text{ATP}_0] \\text{ then terminate} \\tag{28}\\]"
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#pcr-estimation-based-on-body-composition",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#pcr-estimation-based-on-body-composition",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The application includes a feature to estimate the initial PCr concentration based on body mass and active muscle percentage:\n\\[[\\text{PCr}_0] = \\text{basePCr} + \\text{massAdjustment} + \\text{muscleAdjustment} \\tag{29}\\]\nWhere: - basePCr is the typical value for a healthy adult (≈ 23 mmol·kg\\(^{-1}\\)) - massAdjustment = (bodyMass - 70) × 0.02 - muscleAdjustment = (activeMassPerc - 30) × 0.1\nThis estimation reflects the observation that PCr concentration tends to be higher in more muscular individuals and lower in less active individuals. The function constrains the estimated value to a physiologically plausible range of 15-30 mmol·kg\\(^{-1}\\)."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#physiological-interpretation-of-results",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#physiological-interpretation-of-results",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "The simulation results can be interpreted in terms of the different energy systems that contribute to sprint performance:\n\nATP-PCr System (0-10 seconds): The initial phase shows rapid PCr depletion with relatively stable ATP concentrations, demonstrating the critical buffer role of PCr.\nGlycolytic Contribution (5-20+ seconds): As PCr depletes, ADP increases, activating glycolysis as indicated by the rising lactate formation rate. This represents the transition from PCr to glycolytic dominance.\nFatigue Onset (Termination Point): The point where ATP falls below the critical threshold (typically 65% of initial value) represents the theoretical time at which muscle contraction would become impaired in an actual sprint.\n\nThe model also illustrates key physiological principles:\n\nBuffer Effect of PCr: The initial stability of ATP despite high energy demands demonstrates PCr’s crucial role in buffering ATP levels.\nDelayed Glycolytic Activation: The lag in lactate formation illustrates the delayed activation of glycolysis, which requires ADP accumulation.\nEnergy System Transition: The crossover between PCr depletion and glycolytic activation represents the transition between immediate (ATP-PCr) and short-term (glycolytic) energy systems.\nMetabolic Limitation to Sprint Performance: The termination time provides insight into the metabolic factors that limit sprint duration and intensity."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#applications-and-limitations",
    "href": "Metabolic_Model_Apps/Mader_Sprint_Modell.html#applications-and-limitations",
    "title": "1 Sprint Metabolism Model: Mathematical Framework and Implementation",
    "section": "",
    "text": "Training Prescription: The model can help determine the appropriate work-to-rest ratios for sprint interval training by showing how long it takes to substantially deplete PCr and how long recovery periods should be to allow adequate PCr resynthesis.\nIndividual Differences: By adjusting model parameters (PCr0, vLa_max, active muscle mass), coaches and researchers can explore how individual physiological differences affect sprint performance and fatigue resistance.\nEquipment Selection: Power-based analysis can inform equipment choices (e.g., gear ratios) by showing how different power demands affect metabolic responses and fatigue onset.\n\n\n\n\n\nSimplification of Complex Systems: The model simplifies many aspects of muscle metabolism, including the spatial distribution of metabolites, fiber type heterogeneity, and complex enzyme kinetics.\nFixed Parameter Assumptions: Some parameters (e.g., pH) are assumed constant although they change during intense exercise.\nMechanical Factors Not Included: The model focuses on metabolic factors but does not account for mechanical factors like muscle elasticity, neuromuscular fatigue, or coordination.\nValidation Challenges: Direct validation of the model is challenging because invasive techniques are required to measure intramuscular metabolite concentrations during sprint exercise.\n\nDespite these limitations, the Sprint Metabolism Model provides valuable insights into the dynamic metabolic processes that underlie sprint performance and fatigue, serving as a powerful tool for research, education, and applied sport science."
  },
  {
    "objectID": "Metabolic_Model_Apps/Power_Profile/Power_Profile.html",
    "href": "Metabolic_Model_Apps/Power_Profile/Power_Profile.html",
    "title": "Power Profile",
    "section": "",
    "text": "Fullscreen-Link: Power Profile Analyzer",
    "crumbs": [
      "Metabolic Model Apps",
      "Power Profile"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Power_Profile/Etalon_Calculator.html",
    "href": "Metabolic_Model_Apps/Power_Profile/Etalon_Calculator.html",
    "title": "Etalon Converter",
    "section": "",
    "text": "Fullscreen-Link: Etalon W/kg Performance Converter",
    "crumbs": [
      "Metabolic Model Apps",
      "Power Profile",
      "Etalon Converter"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/index_Metabolic_Model_Apps.html#the-core-workflow-a-step-by-step-guide",
    "href": "Metabolic_Model_Apps/index_Metabolic_Model_Apps.html#the-core-workflow-a-step-by-step-guide",
    "title": "Metabolic Model Apps",
    "section": "The Core Workflow: A Step-by-Step Guide",
    "text": "The Core Workflow: A Step-by-Step Guide\nThe intended workflow follows a logical progression, leveraging the specialized function of each application.\n\nStep 1: Building the Power Profile (Power Profile Analyzer)\nThe first step is to establish an accurate representation of an athlete’s maximal power-duration capabilities. This is the primary function of the Composite Power Profile Analyzer.\n\nInput: The process begins by uploading one or more raw activity files (e.g., .tcx, .gpx). The app is designed to handle a large number of files, aggregating data from weeks or even months of training and racing.\nProcess:\n\nParsing & Interpolation: The app reads each file to extract the fundamental time-stamped power data and interpolates it to a consistent 1-second resolution.\nMMP Curve Generation: For each individual activity, it calculates the Mean Maximal Power (MMP) curve—the highest average power achieved for every possible duration within that single ride.\nComposite Synthesis: The app’s key function is to then create a single, “best-ever” composite power curve. For every second of duration, it compares the MMP value from all individual files and retains only the single highest value. The result is a curve representing the athlete’s absolute best performance across all provided activities.\n\nModeling & Refinement:\n\nThis composite curve is fitted with a mathematical model (e.g., OmPD, 2-P CP) to smooth the data and derive key parameters like Critical Power (CP).\nAn algorithm then identifies “Key Efforts”—breakthrough performances that are most representative of the athlete’s maximal capabilities, typically points that lie significantly above the fitted model. The user can further refine this list using a “Clean Up” function that removes redundant points, ensuring the final set is well-distributed and ideal for subsequent modeling.\n\nOutput: The final, curated list of key efforts is exported as a .json file. This file contains a lean, high-quality set of maximal power-duration data points, ready for the next stage of analysis.\n\n\n\nStep 2: Generating or Standardizing Data (Etalon W/kg Converter)\nThis step provides an alternative or supplementary method for generating performance data points, particularly when raw activity files are not available (e.g., analyzing a professional rider’s published performance). The Etalon W/kg Performance Converter is a specialized physics-based calculator.\n\nUse Case 1 (Etalon → Real Power): If a performance is reported in “Etalon W/kg” (a standardized metric for a 60 kg rider), this tool can convert it back into a real-world absolute power value for a specific rider and climb. For example, if it’s known that a pro rider achieved 7.0 Etalon W/kg for 20 minutes, the user can input the rider’s body mass, bike weight, and the climb’s characteristics to calculate the actual absolute power (in Watts) they would have produced. This (Power, Duration) pair becomes a data point for the next step.\nUse Case 2 (Real Power → Etalon): Conversely, if an athlete knows their own absolute power for a climb, they can use this tool to convert it into the standardized Etalon W/kg metric for comparison against benchmarks.\n\n\n\nStep 3: Creating the Integrated Profile (Integrated Metabolic & Power Profile App)\nThis is the core modeling stage where the athlete’s power capabilities are integrated with their unique physiology. The Integrated Metabolic & Power Profile app is the central hub for this process.\n\nInput: The user either manually enters power-duration data points or, ideally, imports the .json file of “Key Efforts” exported from the Power Profile Analyzer in Step 1. They also input key physiological parameters, such as their VO2,max, vLamax, body mass, and Cost of Exercise (CE).\nThe Dual Model: This app uniquely runs two models in parallel:\n\nA Power-Duration Model is fitted to the imported power data points to calculate parameters like Critical Power (CP) and W’.\nA Metabolic Model (based on the work of Mader) uses the physiological inputs (VO2,max, vLamax, CE) to calculate the body’s steady-state metabolic response to exercise, determining thresholds like the Maximal Lactate Steady State (MLSS) and Fatmax.\n\nLinking the Models (The Key Feature): The app provides a powerful “Fit Metabolic Parameter” tool. This feature creates a physiologically plausible link between the two models by assuming that an athlete’s MLSS is tightly correlated with their CP (e.g., MLSS ≈ 93-100% of CP). The user can select a metabolic parameter they are unsure of (e.g., vLamax) and the app will iteratively adjust its value until the MLSS calculated by the metabolic model matches the target percentage of the CP calculated from the power profile. This process harmonizes the two profiles, resulting in a single, cohesive physiological model that is anchored to real-world performance data.\nOutput: The app produces a comprehensive set of visualizations, including the P-VO2-La dynamics plot, training zones, a power profile radar chart, and detailed metabolic values. This entire integrated profile, including the refined physiological parameters and the power data, can be saved and exported as a .json file for the final simulation stage. The app also features a “Comparison Mode” to analyze and contrast the metrics of multiple saved athlete profiles.\n\n\n\nStep 4: Simulating Dynamic Exercise (Metabolic Simulation App)\nThis final, “bottom-up” step takes the profile data from Step 3 and uses it to predict and visualize the second-by-second physiological response to a specific workout.\n\nInput:\n\nThe Profile: The user loads the comprehensive .json profile saved from the Integrated Profile App or manually enters the same set of validated physiological parameters.\nThe Stimulus: The user provides a power-time series to simulate. This can be a built-in step-test, a manually created interval session, or an uploaded .tcx file from a target race or training session.\n\nThe Simulation: The app runs a complex, second-by-second simulation that models:\n\nVO2 Kinetics: The exponential rise and fall of oxygen uptake (τon/τoff), including the VO2 slow component.\nLactate Dynamics: The rates of lactate production (vLaSS), oxidation (vLaox), and the resulting net accumulation in muscle and blood compartments.\nHigh-Energy Phosphates: The depletion and resynthesis of phosphocreatine (PCr) based on the O2 deficit and surplus.\nMuscle Homeostasis: The dynamic changes in intramuscular pH based on lactate, PCr, and CO2 production.\nSubstrate Utilization: The depletion of glycogen stores based on CHO oxidation rates and any carbohydrate intake.\nFatigue Metrics: The change in W’ Balance and advanced fatigue metrics like Strain Score.\n\nOutput: The result is a detailed plot showing the dynamic interplay of these metabolic systems over the course of the entire workout. The summary statistics provide a quantitative breakdown of the metabolic cost, substrate usage, and strain of the session, offering powerful insights for pacing strategies, nutritional planning, and training prescription.\n\n\n\n\n\n\n\nDisclaimer for the Metabolic Simulation App\n\n\n\nPlease note that this simulation attempts to model highly complex and interactive physiological processes. It is a work in progress and does not claim to perfectly represent in-vivo metabolism. While a great deal of effort has gone into the model, the simulation of lactate dynamics in response to certain load profiles is not yet as robust as the other models in this workflow. The app is under continuous development with the goal of improving its accuracy and predictive power.",
    "crumbs": [
      "Metabolic Model Apps"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/index_Metabolic_Model_Apps.html#how-the-apps-interconnect",
    "href": "Metabolic_Model_Apps/index_Metabolic_Model_Apps.html#how-the-apps-interconnect",
    "title": "Metabolic Model Apps",
    "section": "How the Apps Interconnect",
    "text": "How the Apps Interconnect\nThe workflow is designed for a seamless flow of data from one stage to the next, primarily through the use of .json profile files. The intended data flow is as follows:\n\nInput Data\n\nStart with raw Workout Files (.gpx, .tcx, etc.) OR a Known Performance (e.g., from race results).\n\nData Processing & Profiling\n\nWorkout Files are fed into the Power Profile App.\n\nOutput: A Key Efforts Profile (.json) file.\n\nA Known Performance is processed by the Etalon Converter.\n\nOutput: A single Manual Data Point (Power, Duration).\n\n\nIntegrated Modeling\n\nThe Key Efforts Profile (.json) or Manual Data Point is loaded into the Integrated Profile App.\nThe app combines this performance data with physiological parameters.\nOutput: A Full Metabolic Profile (.json) containing validated power and physiological data.\n\nDynamic Simulation\n\nThe Full Metabolic Profile (.json) is loaded into the Metabolic Simulation App.\nA Target Workout File (.tcx) is also loaded to provide the power stimulus.\nFinal Output: A Dynamic Simulation Plot and Metabolic Summary detailing the predicted physiological response.",
    "crumbs": [
      "Metabolic Model Apps"
    ]
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_alt.html",
    "href": "Metabolic_Model_Apps/Mader_Modell_alt.html",
    "title": "Metabolic Simulation",
    "section": "",
    "text": "Please note: This website is currently under construction. I’m gradually adding more detailed explanations of the applications and developing additional models. Consequently, some features may not yet be fully implemented or might not always function as expected. Furthermore, please be aware that the models presented here (specifically in Tab 2) are currently primarily for illustrative purposes and may not be exclusively based on strictly scientifically validated physiological and metabolic factors at this stage.The model underlying Tab 2 has also not yet been tested or validated using real-world data. The content will continue to expand over time, and the scientific basis and functionality will be successively improved.\nWith this File Converter App, you can convert and download .tcx files or .csv files to use them in the “Exercise Simulation” tab of the “Metabolic Simulation App”. Fit-files must first be converted to .csv format using GOTOES File Converter before you can use the File Converter to transform them into a format compatible with the Mader App.\nFullscreen-Link: Mader App\nDownload Example_Race_Data.csv\nDownload Giro_d’Italia_Stage_20.csv\nDownload Gee_Giro_2025_Example_Profile.json"
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_alt.html#main-application-tabs",
    "href": "Metabolic_Model_Apps/Mader_Modell_alt.html#main-application-tabs",
    "title": "Metabolic Simulation",
    "section": "Main Application Tabs",
    "text": "Main Application Tabs\nThe application is structured into two primary tabs, each dedicated to a distinct yet complementary approach to metabolic modeling:\n\nP-V̇O₂-La Dynamics: This tab is foundational for understanding the metabolic system under conditions of equilibrium. It models physiological responses assuming that, at each discrete power output level, the body has achieved a stable metabolic state. This mode can be used for dissecting fundamental physiological relationships, identifying critical metabolic thresholds (like MLSS and Fatmax), and understanding how individual physiological parameters shape an athlete’s steady-state performance capacity.\nExercise Simulation: This tab transitions from steady-state assumptions to the simulation of dynamic, time-dependent metabolic responses. It allows users to model how physiological variables change during continuous or intermittent exercise protocols, where steady states may not be achieved or are constantly being perturbed. This is particularly useful for analyzing the demands of specific training sessions, predicting metabolic responses to race scenarios, understanding the impact of \\(\\dot{V}O_2\\) kinetics, and exploring the interplay of energy systems over time."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_alt.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "href": "Metabolic_Model_Apps/Mader_Modell_alt.html#tab-1-p-vo₂-la-dynamics-steady-state-model",
    "title": "Metabolic Simulation",
    "section": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)",
    "text": "Tab 1: P-V̇O₂-La Dynamics (Steady-State Model)\nThis section of the application is dedicated to exploring the metabolic responses of the human body under the assumption that a physiological steady state has been reached for each given power output. The calculations are primarily based on Prof. Mader’s comprehensive metabolic model, which intricately links aerobic energy production with anaerobic glycolysis and lactate metabolism.\n\nControl Panel: P-V̇O₂-La Dynamics\nLocated in the sidebar, this panel contains several control groups that allow the user to precisely adjust the model parameters for the steady-state analysis. Each parameter influences the shape and characteristics of the P-\\(\\dot{V}O_2\\)-La curves.\n\nOxygen Demand Settings\nThis section defines the fundamental relationship between mechanical power output (P, typically in Watts) and the corresponding steady-state oxygen uptake (\\(\\dot{V}O_{2,SS}\\), typically in ml·min⁻¹). This P-\\(\\dot{V}O_2\\) relationship is a cornerstone of exercise physiology, as its slope and intercept reflect the overall efficiency of converting metabolic energy into external mechanical work.\n\nCurvilinear CE relationship (Checkbox): This toggle allows the user to select between two distinct mathematical models for describing the P-\\(\\dot{V}O_2\\) relationship:\n\nLinear Model (Unchecked - Default): This model assumes a constant oxygen cost per unit of work performed above the baseline oxygen uptake (\\(\\dot{V}O_{2,Base}\\)). The relationship is mathematically defined as: \\[ \\dot{V}O_{2,SS} = CE \\cdot P + \\dot{V}O_{2,Base} \\] In this equation, \\(CE\\) (Cost of Exercise) represents the slope of the line (\\(\\Delta\\dot{V}O_2 / \\Delta P\\)), indicating the volume of oxygen (in ml/min) required for each additional Watt of power output. \\(\\dot{V}O_{2,Base}\\) is the y-intercept, representing the oxygen uptake during rest + oxygen uptake of unloaded cycling (i.e., the metabolic cost associated with moving the limbs against minimal internal resistance without performing significant external work on the ergometer).\nCurvilinear Model (Checked): This model implements a quadratic (second-order polynomial) relationship. It acknowledges the widely observed physiological phenomenon that mechanical efficiency often decreases at higher exercise intensities, particularly above the lactate threshold or critical power. This leads to a disproportionally greater increase in \\(\\dot{V}O_2\\) for a given increment in power output. This upward deviation from linearity is related to the “\\(\\dot{V}O_2\\) slow component” observed during prolonged constant-load exercise (Barstow, 1994; Hintzy-Cloutier et al., 2003; Zoladz et al., 1995), but here it’s applied to describe the steady-state \\(\\dot{V}O_2\\) across different intensities. The formula used is: \\[ \\dot{V}O_{2,SS} = a \\cdot P^2 + CE_{Start} \\cdot P + \\dot{V}O_{2,Base} \\] \\(CE_{Start}\\) represents the initial slope (and thus initial efficiency) at very low power outputs. The coefficient \\(a\\) determines the degree of curvature of the P-\\(\\dot{V}O_2\\) relationship. Within the app, this coefficient \\(a\\) is automatically calculated. This calculation is designed such that the slope of this curvilinear P-\\(\\dot{V}O_2\\) relationship, specifically at the power output where \\(\\dot{V}O_{2,SS}\\) would theoretically intersect \\(\\dot{V}O_{2,max}\\), matches the user-defined \\(CE_{Target}\\) value. This sophisticated approach allows for a more nuanced representation of how efficiency changes across the intensity spectrum.\n\nCE (ml·min⁻¹·W⁻¹):\n\nThis slider sets the constant Cost of Exercise (\\(CE\\)). While the app’s slider offers a broad range (8 to 15 ml·min⁻¹·W⁻¹), typical physiological values for well-trained cyclists often fall within a narrower band, generally between 10.0 and 12.0 ml·min⁻¹·W⁻¹ (Åstrand et al., 2003; Rassouli & Thurnheer, 2015). Values outside this range can certainly occur, depending on factors like training status (untrained individuals may have higher CEs), muscle fiber type composition, pedaling technique, and even equipment (e.g., aerodynamic drag at higher speeds, though this model primarily focuses on ergometer cycling). Lower CE values inherently indicate higher gross mechanical efficiency for the external work performed.\nDelta Efficiency (Δη): This derived metric quantifies the efficiency of converting metabolic energy into additional mechanical work, specifically the efficiency of the work performed above the \\(\\dot{V}O_{2,Base}\\) level. It is calculated from the \\(CE\\) value and the caloric equivalent of oxygen (energy yield per liter of O₂ consumed). A critical point is that the caloric equivalent of oxygen is not constant; it varies depending on the substrate mixture being oxidized, which is reflected by the Respiratory Quotient (RQ). RQ values typically range from approximately 0.70 (pure fat oxidation) to 1.00 (pure carbohydrate oxidation), corresponding to caloric equivalents from approximately 19.6 kJ·L O₂⁻¹ to 21.1 kJ·L O₂⁻¹ (Stegemann, 1991). Because the app dynamically calculates a predicted RQ based on the modeled substrate utilization, Δη is presented as a range (e.g., 24.7-26.5%) to account for this RQ variability across intensities. Conceptually, Δη can be thought of as: \\[ \\Delta\\eta = \\frac{\\text{Change in Work Rate}}{\\text{Change in Energy Expenditure Rate above } \\dot{V}O_{2,Base}} \\] A more direct calculation based on CE is: \\[ \\Delta\\eta = \\frac{1}{\\left( \\frac{CE \\cdot \\text{Caloric Equivalent per L O}_2}{60} \\right)} \\] where CE is in ml O₂·min⁻¹·W⁻¹, Caloric Equivalent per L O₂ is in kJ·L O₂⁻¹, and the division by 60 converts the denominator (which represents oxygen cost in kJ per kJ of work) from a per Watt basis to a per kJ/min basis to match the numerator (implicitly 1 kJ/min of work for 1 kJ/min of energy expenditure if efficiency were 100%). Note: 1 W = 1 J·s⁻¹ = 0.06 kJ·min⁻¹.\nηgross (Fatmax | MLSS): Gross efficiency (ηgross) is a fundamental measure of whole-body mechanical efficiency. It is calculated as the ratio of the mechanical work performed (Power output, converted from Watts to kJ/min) to the total aerobic energy expenditure (also in kJ/min, derived from \\(\\dot{V}O_{2,SS}\\) and its caloric equivalent): \\[ \\eta_{\\text{gross}} = \\frac{\\text{Power output [kJ/min]}}{\\text{Total Aerobic Energy Expenditure [kJ/min]}} \\times 100\\% \\] The Mader App calculates and displays ηgross at two physiologically significant power outputs:\n\nFatmax: The power output at which the rate of fat oxidation is maximal. This intensity is often targeted in training for enhancing fat metabolism.\nMLSS (Maximal Lactate Steady State): The highest power output that can theoretically be sustained for a prolonged period (e.g., 30-60 minutes) without a continual rise in blood lactate concentration. This is a critical marker of endurance performance. The app uses its internal model to predict the RQ at these specific intensities (Fatmax and MLSS) to determine the most accurate caloric equivalent for oxygen for these ηgross calculations. Typical gross efficiencies observed in cycling are in the range of 19-22% (Coyle et al., 1991; Faria et al., 2005).\n\nηnet (Fatmax | MLSS): Net efficiency (ηnet) is conceptually similar to gross efficiency but aims to isolate the efficiency of the muscular work itself by subtracting the energy expenditure at rest (\\(\\dot{V}O_{2,Base}\\)). The formula is: \\[ \\eta_{\\text{net}} = \\frac{\\text{Power output [kJ/min]}}{(\\text{Total Aerobic Energy Expenditure [kJ/min]}) - (\\text{Energy Expenditure at } \\dot{V}O_{2,Base} \\text{ [kJ/min]})} \\times 100\\% \\] Net efficiency values are typically higher than gross efficiency values because the “baseline” metabolic cost is excluded from the denominator. In cycling, ηnet values often range from 19-24%, although precise values depend heavily on how the baseline energy expenditure is defined and measured (Di Prampero et al., 1979; Stainbsy et al., 1980). The app calculates ηnet at both Fatmax and MLSS, again using predicted RQs for caloric equivalents.\n\nCEStart (ml·min⁻¹·W⁻¹): (Visible and active only when the Curvilinear model is selected)\n\nThis slider sets the initial slope of the \\(\\dot{V}O_2\\)-P curve, representing the oxygen cost (and thus efficiency) at very low power outputs, near the \\(\\dot{V}O_{2,Base}\\).\n\nCETarget (ml·min⁻¹·W⁻¹): (Visible and active only when the Curvilinear model is selected)\n\nThis slider sets the target slope of the \\(\\dot{V}O_2\\)-P curve specifically at the power output corresponding to \\(\\dot{V}O_{2,max}\\). This parameter is crucial for defining the extent of the “tail-up” or steepening of the curvilinear P-\\(\\dot{V}O_2\\) relationship at high exercise intensities.\n\n\n\n\nCadence Dependency\nThis section introduces an feature allowing users to incorporate the effects of pedaling rate on metabolic parameters. The underlying model for these adjustments is primarily based on the research and formulas published by Dunst et al. (2025). The general physiological principle is that there’s an optimal cadence range where mechanical and metabolic efficiency are maximized. Deviating from this optimal range, either by pedaling too slowly or too quickly, typically increases the oxygen cost for a given power output due to factors such as increased internal work (cost of limb movement), less favorable muscle force-velocity characteristics, or altered muscle recruitment patterns (Chavarren & Calbet, 1999; Foss & Hallén, 2005).\n\nEnable U-Shaped Cadence Dependency (Checkbox):\n\nWhen this box is checked, the app dynamically adjusts key metabolic parameters (\\(CE\\), \\(\\dot{V}O_{2,Base}\\), and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\)) based on the cadence value selected by the user.\n\nCadence (rpm) (Slider):\n\nAllows the user to set the cycling cadence in revolutions per minute (rpm). The default value is 80 rpm, but the slider typically covers a wide physiological range (e.g., 20-200 rpm). While preferred cadences in trained cyclists often hover around 80-100 rpm during submaximal, steady-state cycling (Lucía et al., 2001), optimal cadences can vary with intensity and individual characteristics.\n\nCE-Dependency (Informational - automatically applied if cadence dependency is enabled):\n\nIndicates that the Cost of Exercise (\\(CE\\)) is no longer a fixed input (if the linear model was active) but becomes a dynamic function of the selected cadence. The app uses the quadratic formula derived by Dunst et al. (2025): \\(CE(rpm) = 0.0004 \\cdot rpm^2 - 0.094 \\cdot rpm + 16.857\\). This U-shaped function implies a minimum CE (highest efficiency) at a certain cadence, with CE increasing at lower and higher cadences.\n\n\\(\\dot{V}O_{2,Base}\\) Dependency (Informational - automatically applied if cadence dependency is enabled):\n\nSimilarly, the baseline oxygen uptake (\\(\\dot{V}O_{2,Base}\\)) also becomes cadence-dependent, reflecting the metabolic cost of \\(\\dot{V}O_{2}\\) at Rest + additional \\(\\dot{V}O_{2}\\) for unloaded pedaling at different speeds. The formula from Dunst et al. (2025) is: \\(\\dot{V}O_{2,Base}(rpm) = 0.172 \\cdot rpm^2 - 14.460 \\cdot rpm + 548.039\\). This also typically describes a U-shaped relationship.\n\nInclude \\(\\dot{V}O_{2,max}\\) Dependency (Checkbox):\n\nIf this option is checked, the individual’s \\(\\dot{V}O_{2,max}\\) is also modeled as being influenced by cadence. This is presented as an experimental feature, qualitatively based on figures in Dunst et al. (2025) which suggest that \\(\\dot{V}O_{2,max}\\) might be slightly lower at very low or very high cadences, with an optimal range typically around 80-90 rpm. The physiological basis could relate to optimal muscle recruitment and force-velocity characteristics for achieving maximal aerobic power.\n\nInclude vLamax Dependency (Checkbox):\n\nIf this option is checked, the maximal rate of lactate production (vLamax) is adjusted based on the selected cadence, using the formula proposed by Dunst et al. (2025): \\(vLa_{max}(rpm) = -0.0002 \\cdot rpm^2 + 0.00931 \\cdot rpm\\). It is important to note, as highlighted in the app’s tooltip and by Dunst et al. (2025), that this observed cadence-dependency of vLamax (often showing higher vLamax at higher cadences) might be partly or wholly an artifact of common sprint testing methodologies (e.g., isokinetic sprints where higher cadences might facilitate greater recruitment of fast-twitch fibers or alter torque production) rather than a true change in the intrinsic maximal glycolytic capacity of the muscle.\n\n\n\n\nPhysiological Input-Parameters\nThese sliders allow the user to define the core physiological characteristics of the simulated individual. These parameters are fundamental to Mader’s metabolic model and significantly influence all calculated outputs.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹):\n\nMaximal oxygen uptake. This is a cornerstone of aerobic fitness assessment, representing the highest rate at which an individual can take up, transport, and utilize oxygen during maximal, dynamic exercise (Åstrand et al., 2003; Levine, 2008). It sets the upper limit for aerobic ATP resynthesis.\n\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹·kg⁻¹):\n\nMaximal oxygen uptake expressed relative to body mass (in kilograms). This normalized value allows for comparisons of aerobic fitness between individuals of different body sizes. This slider is dynamically linked to the absolute \\(\\dot{V}O_{2,max}\\) slider and the Body Mass slider; changing any one of these three will automatically update the others to maintain consistency.\n\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹):\n\nOxygen uptake at Rest as well as oxygen uptake for unloaded cycling (i.e., cycling at zero external power output on the ergometer, but still involving the metabolic cost of limb movement, postural support, and elevated cardiorespiratory activity compared to true rest). This value is critical as it forms the y-intercept of the P-\\(\\dot{V}O_2\\) relationship. It can be estimated using the “\\(\\dot{V}O_{2,Base}\\) Calculation” utility (see below) which estimates true resting \\(\\dot{V}O_2\\), or it can be set manually based on typical values or direct measurements from unloaded cycling.\n\nvLamax (mmol·l⁻¹·s⁻¹):\n\nMaximal rate of lactate production. This parameter reflects the peak enzymatic capacity of the anaerobic glycolytic pathway to produce lactate (and ATP) per unit of time and per liter of blood/distribution volume (Mader, 1984; Mader & Allmer, 1996). It is a crucial determinant of an individual’s anaerobic capacity and significantly influences lactate accumulation kinetics and substrate utilization patterns. Typical values can range widely, from approximately 0.3 mmol·l⁻¹·s⁻¹ in highly trained endurance athletes to over 1.0 mmol·l⁻¹·s⁻¹ in elite sprint athletes.\n\nHRmax (bpm):\n\nMaximal heart rate achievable by the individual during exhaustive exercise. Commonly estimated by formulas like “220 - age”, but this has large individual variability. Direct measurement is preferred for accuracy.\n\nHRBase (bpm):\n\nBaseline heart rate at rest.\n\nCEHR (bpm·W⁻¹):\n\nHeart Rate Efficiency, also commonly referred to as the HR-Power slope. It describes the increment in heart rate (in beats per minute) for each Watt increase in external power output during steady-state incremental exercise. Typical values in cyclists range from 0.25 to 0.45 bpm·W⁻¹. Lower values are generally indicative of better cardiovascular efficiency, often reflecting a larger stroke volume response to increasing exercise intensity.\n\nWeight-based values (Checkbox):\n\nIf checked, the x-axis of the main P-\\(\\dot{V}O_2\\)-La plot and several displayed output values (e.g., power, \\(\\dot{V}O_2\\)) will be normalized to the individual’s body mass. This is useful for comparing individuals of different sizes, as many physiological parameters scale with body mass. Power would be displayed in W·kg⁻¹ and \\(\\dot{V}O_2\\) in ml·min⁻¹·kg⁻¹.\n\n\n\n\n\\(\\dot{V}O_{2,Base}\\) Calculation\nThis utility provides a method to estimate an individual’s true basal metabolic rate (BMR) using the widely recognized Harris-Benedict equation (J. A. Harris & Benedict, 1918). This BMR is then converted into an equivalent resting oxygen uptake. While this calculated resting \\(\\dot{V}O_2\\) is not always directly the \\(\\dot{V}O_{2,Base}\\) used in this model, it can serve as a physiologically grounded reference point for setting or evaluating the \\(\\dot{V}O_{2,Base}\\) parameter without the additional oxygen cost of unloaded cycling.\n\nGender (Radio buttons: Male/Female): Selects the appropriate gender-specific version of the Harris-Benedict formula, as metabolic rates differ between sexes.\nBody Mass (kg) (Slider): Input for the Harris-Benedict formula. Also used for weight-based normalizations throughout the app if the “Weight-based values” checkbox is active.\nAge (years) (Slider): Input for the Harris-Benedict formula, as BMR typically declines with age.\nHeight (cm) (Slider): Input for the Harris-Benedict formula.\nCalculate \\(\\dot{V}O_{2,Base}\\) Button:\n\nWhen clicked, the app calculates BMR in kilocalories per day (kcal/day) using the selected inputs and the Harris-Benedict equations:\n\nMen: BMR = 66.5 + (13.75 × weight in kg) + (5.003 × height in cm) – (6.775 × age in years)\nWomen: BMR = 655.1 + (9.563 × weight in kg) + (1.850 × height in cm) – (4.676 × age in years)\n\nThis BMR (kcal/day) is then converted to a resting \\(\\dot{V}O_2\\) value (in ml/min) using standard caloric equivalents for oxygen (approximately 4.825 kcal per liter of O₂ consumed at a typical resting RQ of 0.82-0.85, or a more generic ~5 kcal/L O₂).\nThe \\(\\dot{V}O_{2,Base}\\) slider in the “Physiological Input-Parameters” section is automatically updated with this calculated resting \\(\\dot{V}O_2\\) value.\nImportant Distinction: It’s crucial to remember that the \\(\\dot{V}O_{2,Base}\\) parameter in Mader’s model represents oxygen uptake during unloaded cycling. This value is inherently higher than the true basal resting \\(\\dot{V}O_2\\) (as estimated by Harris-Benedict) because it includes the metabolic cost of limb movement, maintaining posture on the bike, and slightly elevated cardiorespiratory activity. The Harris-Benedict calculation here provides a physiological baseline for resting energy expenditure.\n\n\n\n\nSubstrate Utilization\nThis section enables the modeling and visualization of how the body utilizes carbohydrates (CHO) and fats for aerobic energy production across different exercise intensities. The model’s approach is rooted in the lactate balance concept from Mader’s framework (Mader, 2003), where the interplay between lactate production and oxidation serves as an indicator of the relative reliance on CHO versus fat metabolism.\n\nShow Substrate Utilization (Checkbox):\n\nIf this box is checked:\n\nA dedicated Substrate Utilization Plot appears below the main P-V̇O₂-La plot. This plot displays the percentage contribution of CHO and Fat to total aerobic energy expenditure across the range of power outputs.\nTraces representing the absolute rates of CHO and Fat oxidation (in the units selected via the “Energy Unit” dropdown) are added to the main P-V̇O₂-La plot. These are typically plotted on a third y-axis (yaxis3) to accommodate their different scale compared to \\(\\dot{V}O_2\\) or lactate rates.\n\n\nEnergy Unit (Dropdown menu): (Visible only if “Show Substrate Utilization” is checked)\n\nAllows the user to select the preferred units for displaying the absolute substrate oxidation rates. Options are:\n\ng/h (grams per hour): Useful for nutritional planning and understanding fuel mass turnover.\nkcal/h (kilocalories per hour): A common unit for energy expenditure.\nkJ/h (kilojoules per hour): The SI unit for energy expenditure.\n\n\nAdjust CHO utilization at rest (Checkbox): (Visible only if “Show Substrate Utilization” is checked)\n\nIf checked, this feature allows the user to manually influence the modeled CHO utilization percentage specifically at rest (0 Watts power output). The Mader model, by default, calculates CHO utilization based purely on its internal lactate kinetics (\\(vLa_{SS}/vLa_{ox}\\) ratio). However, empirical studies often show that at true rest, particularly in a post-absorptive state, fat oxidation predominates, and CHO contribution might be around 35-40% (Brooks, 2012; Friedlander et al., 1998, 1999). This option allows users to align the model’s resting substrate use more closely with such empirical observations or specific dietary conditions if desired.\n\nResting CHO percentage (%) (Slider): (Visible only if “Adjust CHO utilization at rest” is checked)\n\nA slider (0-100%) to set the target CHO utilization percentage at rest (0 Watts). The application will then adjust the entire CHO utilization curve proportionally to pass through (or near) this user-defined resting value, while still adhering to the model’s logic at higher intensities (e.g., approaching 100% CHO at MLSS).\n\n\nModel Basis for Substrate Utilization: The Mader model posits a strong link between lactate metabolism and substrate choice. The fundamental idea is that increased glycolytic flux (leading to lactate production, \\(vLa_{SS}\\)) signifies a shift towards carbohydrate utilization. Conversely, conditions favoring lactate clearance and oxidation (\\(vLa_{ox}\\)) are associated with a greater capacity for, and reliance on, fat oxidation. The model calculates the percentage CHO contribution based on the ratio of \\(vLa_{SS}\\) to \\(vLa_{ox}\\). As exercise intensity increases and \\(vLa_{SS}\\) rises (potentially exceeding \\(vLa_{ox}\\)), CHO% increases, approaching 100% at or above MLSS (where PD ≤ 0). Fat oxidation percentage is calculated as (100 - CHO%). The absolute rates of CHO and fat oxidation (in g/h, kcal/h, or kJ/h) are then derived from the total aerobic energy expenditure (calculated from \\(\\dot{V}O_{2,SS}\\) and its caloric equivalent) and these percentages. Standard energy yields (e.g., ~4.1 kcal/g for CHO, ~9.45 kcal/g for fat) are used for these conversions. Crucially, the predicted Respiratory Quotient (RQ = \\(\\dot{V}CO_2 / \\dot{V}O_2\\)) is calculated from this modeled substrate mix (RQ ≈ 0.70 for 100% fat, RQ ≈ 1.00 for 100% CHO). This dynamically predicted RQ is then used in conjunction with established tables (similar to those by Stegemann (1991)) to determine the precise caloric equivalent of oxygen (e.g., kJ·l O₂⁻¹ or kcal·l O₂⁻¹) at each power output. This RQ-dependent caloric equivalent is then used for the accurate calculation of all efficiency metrics (Δη, ηgross, ηnet). This creates a physiologically consistent loop where substrate use influences RQ, which influences caloric equivalent, which influences efficiency calculations. The intensity at which fat oxidation is maximal (Fatmax) typically occurs where the Pyruvate Deficit is highest. For a detailed understanding of factors influencing fat oxidation, refer to reviews like Achten & Jeukendrup (2004).\n\n\nPlot Settings\n\nLock Y-Axis / Lock X-Axis (Checkboxes):\n\nWhen checked (default state), the respective axis range on the main P-V̇O₂-La plot remains fixed, regardless of changes to input parameters. This is highly beneficial for visual comparison, as it allows the user to clearly see how alterations in (for example) \\(\\dot{V}O_{2,max}\\) or \\(CE\\) shift the curves relative to a constant scale.\nIf unchecked, the axis will auto-scale to optimally fit the currently plotted data. This can be useful for initial exploration if the parameter changes result in data that goes off the fixed scale, but makes direct comparison of curve shifts more difficult.\n\n\n\n\n\nMain Plot: P-V̇O₂-La Dynamics\nThis central graphical output is the primary visualization for the steady-state model, displaying the complex interrelationships between power output and key metabolic variables.\n\nX-Axis: Power output (P). Units are Watts (W) by default, or Watts per kilogram body mass (W·kg⁻¹) if the “Weight-based values” option is selected in the sidebar.\nPrimary Y-Axis (Left side of plot): Oxygen Uptake (\\(\\dot{V}O_2\\)). Units are milliliters per minute (ml·min⁻¹) or ml·min⁻¹·kg⁻¹ if weight-based.\n\n\\(\\dot{V}O_{2,SS}\\) (Solid Blue Line): This trace represents the calculated steady-state oxygen uptake at each power output, up to the individual’s defined \\(\\dot{V}O_{2,max}\\). The shape of this curve is determined by whether the linear or curvilinear CE model is selected, and by the specific CE parameters.\n\\(\\dot{V}O_{2,SS,extrapolated}\\) (Dashed Blue Line): This line shows the theoretical \\(\\dot{V}O_2\\) demand if it were not physiologically constrained by the individual’s \\(\\dot{V}O_{2,max}\\). It essentially continues the P-\\(\\dot{V}O_2\\) relationship defined by the CE model beyond the point where \\(\\dot{V}O_{2,max}\\) is reached.\n\\(\\dot{V}O_{2,max}\\) Line (Dotted Grey Horizontal Line): A clear visual representation of the individual’s maximal oxygen uptake, serving as the ceiling for the \\(\\dot{V}O_{2,SS}\\) curve.\n\nSecondary Y-Axis (Right side of plot - typically labeled yaxis2): This axis displays variables related to lactate kinetics. Rates are typically in mmol·l⁻¹·min⁻¹, and accumulation in mmol·l⁻¹.\n\nvLaSS (Dashed Red Line): The steady-state rate of lactate production into the blood/distribution volume. In Mader’s model, \\(vLa_{SS}\\) is a function of the relative exercise intensity (related to the difference between \\(\\dot{V}O_{2,max}\\) and current \\(\\dot{V}O_{2,SS}\\)), the individual’s maximal glycolytic capacity (vLamax), and constants reflecting enzyme kinetics and substrate availability.\nvLaox (Dashed Light Blue Line): The steady-state rate of lactate oxidation or clearance from the blood/distribution volume. This is primarily dependent on the aerobic metabolic rate (\\(\\dot{V}O_{2,SS}\\)), as lactate is oxidized in various tissues (muscle, heart, liver) or converted to glucose (gluconeogenesis), both processes requiring oxygen directly or indirectly.\nPD (Pyruvate Deficit) (Solid Purple Line): Calculated as the difference: \\(vLa_{ox} - vLa_{SS}\\).\n\nA positive PD indicates that the capacity for lactate elimination (\\(vLa_{ox}\\)) exceeds the rate of lactate production (\\(vLa_{SS}\\)). This state is typically associated with lower to moderate exercise intensities and often correlates with a higher proportion of fat oxidation.\nA negative PD indicates that lactate production (\\(vLa_{SS}\\)) exceeds the elimination capacity (\\(vLa_{ox}\\)), leading to a net accumulation of lactate if the exercise were sustained.\nFATmax (Vertical Dotted Grey Line Annotation): This line is drawn at the power output where the Pyruvate Deficit (PD) reaches its maximum positive value. This intensity is often considered to approximate the point of maximal fat oxidation, as a large PD implies a metabolic environment conducive to fat metabolism (lower glycolytic flux relative to oxidative capacity).\nMLSS (Maximal Lactate Steady State) (Vertical Dotted Grey Line Annotation): This line is drawn at the power output where PD is theoretically zero (i.e., \\(vLa_{SS} = vLa_{ox}\\)). This represents the highest exercise intensity at which lactate production and elimination are balanced, allowing for a stable (though elevated) blood lactate concentration during prolonged, constant-load exercise. MLSS is a critical determinant of endurance performance (Heck et al., 2022).\n\nLaAccumulation (Solid Dark Red Line): This trace represents the theoretical steady-state blood lactate concentration that would result if exercise at that specific power output were maintained indefinitely. It is derived from the net balance of lactate production and elimination (i.e., the integral of -PD over time, assuming a starting lactate concentration). It’s important to note that this is a modeled steady-state prediction and not a dynamic simulation of blood lactate changes over a fixed exercise duration.\n\nTertiary Y-Axis (Right side, typically further out - yaxis3, visible only if “Show Substrate Utilization” is checked): This axis is dedicated to displaying the absolute rates of substrate utilization, in the units selected by the user (g/h, kcal/h, or kJ/h).\n\nCHO (Unit) (Dotted Pink Line): Shows the absolute rate of carbohydrate oxidation at each power output.\nFat (Unit) (Dotted Green Line): Shows the absolute rate of fat oxidation at each power output.\n\n\nThe plot is richly annotated, providing values for FATmax power, MLSS power, and the absolute \\(\\dot{V}O_{2,max}\\) value. Additionally, the specific mathematical formula currently being used to define the \\(\\dot{V}O_2\\)-P relationship (linear or curvilinear, and reflecting any cadence-dependent adjustments to CE and \\(\\dot{V}O_{2,Base}\\)) is displayed directly on the plot for clarity.\n\n\nSubstrate Utilization Plot\nThis second plot appears below the main P-V̇O₂-La plot only if the “Show Substrate Utilization” option is enabled in the control panel. It provides a percentage-based view of fuel use.\n\nX-Axis: Power output (P), consistent with the main plot’s x-axis (W or W·kg⁻¹).\nY-Axis: Percentage of Total Aerobic Energy Expenditure (%), ranging from 0 to 100%.\n\nCHO-Utilization (%) (Dotted Pink Line): Illustrates the relative contribution of carbohydrate oxidation to the total aerobic energy production at each power output. This typically increases with intensity.\nFat-Utilization (%) (Dotted Dark Green Line): Shows the relative contribution of fat oxidation. This typically decreases with increasing intensity, especially above Fatmax. This plot effectively visualizes the “substrate crossover” concept, which describes the shift from predominantly fat utilization at lower intensities to predominantly carbohydrate utilization at higher intensities (Brooks et al., 2004). The intersection of these two curves (if it occurs) roughly indicates the intensity where CHO and fat contribute equally to aerobic energy supply.\n\n\n\n\nValues Display Area\nLocated directly below the plot(s), this dynamic text area provides a numerical summary of key metabolic parameters calculated at two physiologically significant anchor points: FATmax and MLSS. For each of these intensity points, the following information is typically displayed:\n\nPower output (in W or W·kg⁻¹, matching the plot setting).\nSteady-state \\(\\dot{V}O_{2,SS}\\) (absolute in ml·min⁻¹ or relative in ml·min⁻¹·kg⁻¹) and also expressed as a percentage of the individual’s \\(\\dot{V}O_{2,max}\\) (e.g., “MLSS at 75% \\(\\dot{V}O_{2,max}\\)”).\nRate of lactate production (\\(vLa_{SS}\\) in mmol·l⁻¹·min⁻¹).\nRate of lactate oxidation (\\(vLa_{ox}\\) in mmol·l⁻¹·min⁻¹).\nPyruvate Deficit (PD) in mmol·l⁻¹·min⁻¹.\nTheoretical Lactate Accumulation (LaAccumulation) in mmol·l⁻¹.\nIf substrate utilization is shown:\n\nAbsolute carbohydrate oxidation rate (in the units selected by the user: g/h, kcal/h, or kJ/h) and its percentage contribution to total aerobic energy.\nAbsolute fat oxidation rate (in selected units) and its percentage contribution.\nPredicted Respiratory Quotient (RQ) at that specific intensity.\n\nCalculated gross efficiency (ηgross) in %.\nCalculated net efficiency (ηnet) in %.\n\nAdditionally, if cadence dependency is active, this display area will also show the effective \\(CE\\), \\(\\dot{V}O_{2,Base}\\), and, if their respective dependencies are enabled, the effective \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\) values that correspond to the user-selected cadence. This provides full transparency on how cadence adjustments are impacting the core model parameters."
  },
  {
    "objectID": "Metabolic_Model_Apps/Mader_Modell_alt.html#tab-2-exercise-simulation-dynamic-model",
    "href": "Metabolic_Model_Apps/Mader_Modell_alt.html#tab-2-exercise-simulation-dynamic-model",
    "title": "Metabolic Simulation",
    "section": "Tab 2: Exercise Simulation (Dynamic Model)",
    "text": "Tab 2: Exercise Simulation (Dynamic Model)\nThis tab allows users to move beyond steady-state assumptions and simulate the dynamic, time-dependent metabolic responses of an individual to a defined exercise protocol. This is invaluable for understanding how various physiological systems adapt and interact during non-steady-state conditions, such as those encountered in interval training, races with variable pacing, or ramp tests.\n\nControl Panel: Exercise Simulation\n\nStep Test / Exercise Simulation Parameters\nThese controls are used to define the exercise protocol for the simulation, either by generating a standard step test or by loading power data from an external file.\n\nStep Increment (Watts): If generating an incremental step test, this parameter sets the magnitude of the power increase for each successive step (e.g., an increment of 20 Watts).\nStep Duration (s): For a generated step test, this defines the duration (in seconds) of each constant-power stage (e.g., 180 seconds for 3-minute stages).\nMaximum Power (Watts): This sets the highest power output that will be targeted in a generated incremental step test. The simulation will incrementally increase power up to this level, or until an abort criterion is met.\nPower Adjustment (%): A global scaling factor (ranging from 0% to 200%) that is applied to all power values in the current workout, regardless of whether the workout was generated by the app or loaded from an external file. This allows users to easily scale a given workout to simulate higher or lower absolute intensities, for instance, to match different fitness levels or to explore the effects of relative intensity changes.\nLoad Example Exercise Data Button: Loads a pre-defined sample interval workout directly into the simulation. This sample dataset typically includes time, power, and often cadence values, providing a quick way to see the dynamic simulation in action.\nInsert workout file / File Upload:\n\nThis feature allows users to upload their own workout data from external files. Supported file formats include .csv (comma-separated values), .txt (often tab-separated, but other delimiters may be auto-detected), .xlsx (modern Excel format), and .xls (older Excel format).\nThe app expects the file to contain columns for time (or timestamp), power, and optionally, cadence. The data will be parsed and interpolated to a 1-second resolution for the simulation.\nFile has headers (Checkbox): This should be checked (it is by default) if the first row of the uploaded file contains descriptive column names (e.g., “Time”, “Power_Watts”, “Cadence_rpm”). If unchecked, the app will assume the data begins from the very first row and will attempt to use a default column order (typically Time, Power, then Cadence if present).\nUploaded workout data gap processing (Radio buttons): This option determines how the app handles missing data points or time gaps when it interpolates the uploaded data to a 1-second resolution:\n\nMaintain last values (Default): If there is a gap in the recorded data (e.g., a recording device missed a few seconds), the power output (and cadence, if available) from the last valid preceding data point will be carried forward to fill the missing seconds. This method is often preferred for visualizing structured interval training where power is intended to be constant during an interval, and brief recording dropouts should not appear as zero power.\nInsert zero values: If there is a gap, the power (and cadence) for the missing seconds will be set to zero. This method is more appropriate for analyzing training sessions that include distinct rest periods where the actual power output is indeed zero, and these rests should be accurately reflected in the simulation.\n\n\nSmooth Power Curve (5-point window) Button: When clicked, this applies a 5-point moving average filter to the currently loaded or generated power data. This can be useful for reducing noise or very rapid, short-lived fluctuations in recorded power data, providing a smoother and potentially more physiologically representative input for the metabolic simulation. Cadence data, if present, is typically smoothed with a slightly wider window (e.g., 10-point).\nDisplay Window Settings: These controls allow users to customize the visible range of the plot axes for the simulation plot without altering the underlying simulation data or the calculations themselves. This is purely a visualization tool to help focus on specific portions or aspects of the simulation.\n\nAdjust X-Axis range (Checkbox): When checked, enables manual adjustment of the time (horizontal) axis.\n\nStart Time (s) / End Time (s) (Sliders): These sliders allow the user to define the visible start and end times on the x-axis of the simulation plot. This is useful for zooming into specific phases of a long workout.\n\nAdjust Y-Axis ranges (Checkbox): When checked, enables manual adjustment of the various y-axes on the simulation plot.\n\nPower Y-Axis Maximum (Slider): Sets the maximum displayed value for the primary Y-axis (which typically shows Power, Cadence, MPA, Strain Score, and Glycogen).\n\\(\\dot{V}O_2\\) Y-Axis Maximum (Slider): Sets the maximum displayed value for the tertiary Y-axis (which typically shows \\(\\dot{V}O_2\\) and O₂ Deficit related variables).\nLactate Y-Axis Minimum / Maximum (Sliders): Sets the minimum and maximum displayed values for the secondary Y-axis (which typically shows Lactate, W’ Balance, PCr, pH, various rates, RQ, and HR).\n\n\n\n\n\nCadence Dependency\nThis section mirrors the functionality of Tab 1 but applies the cadence-dependent metabolic adjustments dynamically throughout the exercise simulation, based on the work of Dunst et al. (2025).\n\nEnable U-Shaped Cadence Dependency (Checkbox): If checked, metabolic parameters such as \\(CE\\) and \\(\\dot{V}O_{2,Base}\\) (and optionally \\(\\dot{V}O_{2,max}\\) and \\(vLa_{max}\\)) will be adjusted at each time step of the simulation based on the cadence at that specific moment.\nFixed Cadence (rpm) (Slider): This value is used if “Use cadence from file” is unchecked, or if an uploaded file lacks cadence data, but cadence dependency is enabled. It sets a constant cadence that will be assumed for the entire simulation for the purpose of parameter adjustments.\nUse cadence from file (if available) (Checkbox):\n\nIf this box is checked, AND cadence data is present in an uploaded workout file, AND “Enable U-Shaped Cadence Dependency” is active, the simulation will use the time-varying cadence values directly from the file to modulate the metabolic parameters at each second.\nIf no cadence data is found in the file, or if this option is unchecked, the “Fixed Cadence” value will be used for cadence-dependent calculations if the main cadence dependency is enabled.\n\nThe specific dependencies for CE (\\(\\text{CEV̇O}_2\\)) Dependency, \\(\\dot{V}O_{2,Base}\\) Dependency, Include \\(\\dot{V}O_{2,max}\\) Dependency, and Include vLamax Dependency can be individually toggled on or off, functioning identically to their counterparts in Tab 1, but their effects are applied dynamically based on the instantaneous cadence during the simulation.\n\n\n\nPhysiological Parameters (Dynamic Simulation)\nThese parameters are crucial for governing the kinetic (time-dependent) responses of the various metabolic and physiological systems modeled in the simulation.\n\n\\(\\dot{V}O_2\\) Start (ml·min⁻¹):\n\nThis sets the initial oxygen uptake value (\\(\\dot{V}O_2\\)) at the very beginning (time = 0 seconds) of the simulation. The slider for this parameter is dynamically constrained to be between the current effective \\(\\dot{V}O_{2,Base}\\) (which can vary if cadence dependency is active) and the current effective \\(\\dot{V}O_{2,max}\\). The default starting value is often set to approximate the \\(\\dot{V}O_2\\) that would be observed at the Fatmax intensity (as determined in Tab 1). This assumes the exercise often starts from a low-intensity active baseline rather than complete, supine rest. This initial \\(\\dot{V}O_2\\) value significantly influences the calculation of the initial oxygen deficit.\n\n\\(\\dot{V}O_{2,on}\\) time constant (τon) (s):\n\nThis parameter defines the characteristic speed of the exponential rise of \\(\\dot{V}O_2\\) towards its new, higher target (steady-state) value whenever exercise intensity increases or exercise begins from a lower baseline. A smaller τon value indicates faster “on” kinetics, meaning \\(\\dot{V}O_2\\) reaches its target more quickly. Typical values for τon in healthy individuals during moderate intensity exercise range from about 20 seconds in highly trained athletes to 40 seconds or more in less trained or older individuals (Barstow & Mole, 1991; Whipp & Wasserman, 1972). The fundamental equation describing an exponential rise to a new steady state is often given as: \\[ \\dot{V}O_2(t) = \\dot{V}O_{2,initial} + (\\dot{V}O_{2,target} - \\dot{V}O_{2,initial}) \\cdot (1 - e^{-(t - t_{delay})/\\tau_{on}}) \\] Where \\(t_{delay}\\) is the initial time delay (see below). The app implements this step-wise.\nIntensity-Dependent τon (Checkbox):\n\nIf this option is checked, τon is not a single fixed value for all upward transitions. Instead, it is dynamically calculated for each second of the simulation based on the \\(\\dot{V}O_2\\) (expressed as a percentage of the current \\(\\dot{V}O_{2,max}\\)) of the immediately preceding time step. The underlying base formula is \\(\\tau_{on\\_base} = 0.38 \\cdot \\text{PreviousIntensity%} + 6\\) seconds. The slider value for τon then acts as the specific τon that would occur if the preceding intensity was exactly 50% of \\(\\dot{V}O_{2,max}\\). This means the slider effectively sets an offset to this formula, allowing the user to shift the entire linear τon-intensity relationship. This feature aims to simulate the physiological observation that \\(\\dot{V}O_2\\) on-kinetics can be slower if an exercise bout is initiated from an already elevated metabolic rate (e.g., due to prior high-intensity work or insufficient recovery).\n\n\n\\(\\dot{V}O_{2,off}\\) time constant (τoff) (s):\n\nThis parameter defines the characteristic speed of the exponential fall of \\(\\dot{V}O_2\\) towards its new, lower target value when exercise intensity decreases or during recovery periods. Off-kinetics can be similar to, or often slightly slower than, on-kinetics, particularly following high-intensity or prolonged exercise, due to factors like elevated body temperature, hormone levels, and the metabolic cost of recovery processes (Özyener et al., 2001).\nIntensity-Dependent τoff (Checkbox):\n\nIf checked, τoff is also dynamically calculated. Its value depends on the maximum \\(\\dot{V}O_2\\) (as % of current \\(\\dot{V}O_{2,max}\\)) achieved within a recent lookback window (typically defined as twice the duration of the previous step’s τoff value). The base formula used is \\(\\tau_{off\\_base} = 0.45 \\cdot \\text{Intensity%} + 10\\) seconds. Similar to the dynamic τon, the slider value for τoff sets the τoff for a reference 50% intensity, thereby shifting this relationship. This models the physiological reality that recovery of \\(\\dot{V}O_2\\) might be faster after lower intensity efforts and slower after higher intensity efforts which cause greater metabolic disturbance and a larger oxygen debt.\n\n\n\\(\\dot{V}O_2\\) Response Delay (s):\n\nThis represents a pure time delay (in seconds) before the exponential \\(\\dot{V}O_2\\) response (either “on” or “off” kinetics) actually begins following a change in power output. This delay accounts for physiological lags such as the circulatory transit time of blood from the lungs to the exercising muscles (for O₂ delivery) and from muscles to lungs (for CO₂ feedback influencing ventilation), as well as any initial inertia in muscular metabolic pathway activation (Lamarra et al., 1987). The default is 2 seconds, with a typical physiological range considered to be 0-10 seconds. This delay directly affects the timing of the actual \\(\\dot{V}O_2\\) change, the calculation of O₂ deficit/surplus, and subsequently the modeled rate of lactate oxidation (\\(vLa_{ox}\\)).\n\nLactate exercise termination value (mmol·l⁻¹):\n\nIf the “Terminate simulation when lactate exceeds max value” checkbox (see below) is active, the simulation will automatically stop if the modeled blood lactate concentration reaches this specified threshold. Values around 20 mmol/l represent very high, often exhaustive, levels of lactate accumulation.\n\nTerminate simulation when lactate exceeds max value (Checkbox): Enables or disables the lactate-based abortion criterion for the simulation.\nResting Lactate-value (mmol·l⁻¹):\n\nThe initial blood lactate concentration assumed at the start (time = 0s) of the simulation. Typical resting values in healthy individuals are around 0.5 to 1.5 mmol/l.\n\nvLaSS,on Time Constant (τvLaSS,on) (s):\n\nThe time constant governing the exponential rise of the actual lactate production rate (\\(vLa_{SS}\\)) towards its new, higher target value when exercise intensity increases. This parameter reflects how quickly the glycolytic flux adapts upwards in response to increased energy demand.\n\nvLaSS,off Time Constant (τvLaSS,off) (s):\n\nThe time constant governing the exponential fall of \\(vLa_{SS}\\) towards its new, lower target value when exercise intensity decreases or during recovery periods. This reflects the downregulation of glycolysis.\n\nvLaSS Response Delay (s):\n\nA pure time delay (in seconds) before the lactate production rate (\\(vLa_{SS}\\)) begins its exponential kinetic response (either upwards or downwards) to a change in exercise intensity. This simulates inherent biochemical delays in the activation or deactivation of the complex glycolytic pathway.\n\nCap vLass by \\(\\dot{V}O_2\\) Deficit (Checkbox):\n\nAn optional, advanced physiological constraint. If this box is checked, the actual lactate production rate (\\(vLa_{SS}\\)) at any given time point during the simulation is capped. The cap is determined such that the net anaerobic energy supply (which is derived from the energy equivalent of lactate production minus the energy equivalent of concurrent lactate oxidation) does not exceed the current calculated oxygen deficit (which, in turn, is \\(\\dot{V}O_2 \\text{ Demand} - \\dot{V}O_2 \\text{ Actual}\\)). The purpose of this option is to enhance physiological plausibility by preventing an unrealistic “overshoot” of anaerobic energy production, especially during transitions where aerobic energy supply is still ramping up or is limited. When unchecked (default), \\(vLa_{SS}\\) is determined purely by its own kinetic parameters without this specific energy balance cap.\n\nMuscle pH (pHm) Simulation (Informational text & underlying mechanism):\n\nThis feature simulates changes in intramuscular pH (pHm), a critical factor in muscle function and fatigue. The calculation of pHm is based on established physiological principles, drawing from the work of Mader (2003) and further elaborated in texts such as Heck et al. (2022). The model considers several key intracellular factors that influence pHm:\n\nEstimated inorganic phosphate concentration ([Pi]): [Pi] increases as phosphocreatine ([PCr]) is broken down, and high [Pi] can contribute to acidosis. The model estimates [Pi] inversely based on the current [PCr].\nIntramuscular lactate concentration ([La]m): The accumulation of lactate is stoichiometrically linked with the production of H⁺ ions, thus directly impacting pHm. The model uses its dynamically calculated intramuscular lactate.\nEstimated arterial partial pressure of CO₂ (pCO₂): pCO₂ influences the carbonic acid-bicarbonate buffer system within the muscle. The model estimates pCO₂ as increasing with relative exercise intensity (i.e., %\\(\\dot{V}O_{2,max}\\)), reflecting increased metabolic CO₂ production and ventilatory responses.\n\nThe critical aspect of this feature is the feedback loop: the pHm calculated from the previous time step is then used to modulate the effective maximal lactate production rate (\\(vLa_{max,eff}\\)) for the current time step. This modulation simulates the well-known inhibitory effect of falling (more acidic) pH on key glycolytic enzymes, particularly phosphofructokinase (PFK), which is a major rate-limiting step in glycolysis (Danforth, 1965). The relationship is typically sigmoidal, represented in the app as:\\[vLa_{max,eff} = vLa_{max,base} \\cdot \\text{PFK Activity Factor}(pH_m)\\] Where PFK_Activity_Factor(pHm) is a term that decreases (from a maximum of ~1.0 down to near 0) as pHm drops significantly below physiological resting levels (e.g., below pH ~7.0 down towards pH 6.0).\nThis pH-modulated \\(vLa_{max,eff}\\) then becomes the new input for determining the target \\(vLa_{SS}\\) for the current time step. This creates a physiologically relevant negative feedback loop: high rates of lactate production can lead to a drop in pHm, which in turn can reduce further lactate production by inhibiting PFK, thus helping to limit excessive acidosis.\n\n\n\n\nGlycogen Storage Parameters\nThis section of the control panel models the dynamics of muscle glycogen stores, a critical fuel source for prolonged and high-intensity exercise. The model simulates depletion due to carbohydrate oxidation and potential repletion from exogenous carbohydrate intake.\n\nAuto-calculate glycogen values based on muscle mass (Checkbox):\n\nIf this box is checked, the “Initial Glycogen Storage” and “Maximum Glycogen Storage” slider values are automatically populated. This calculation is based on the “Active Muscle Mass” value (derived from the PCr model settings) or, if that’s not explicitly set, an estimation from total body mass. The calculation assumes typical physiological glycogen concentrations in muscle tissue, for instance, around 15 grams of glycogen per kilogram of active muscle for normal, fed states, and perhaps up to 20-25 g/kg for carbohydrate-loaded (“supercompensated”) states.\n\nInitial Glycogen Storage (g) (Slider):\n\nSets the amount of glycogen (in grams) assumed to be available in the active muscle mass at the very beginning of the simulation. Typical values for well-nourished and trained athletes range from 350-500g, but can be higher with specific carbohydrate loading strategies (Åstrand et al., 2003; Bergström et al., 1967; Murray & Rosenbloom, 2018).\n\nMaximum Glycogen Storage (g) (Slider):\n\nDefines the physiological upper limit for glycogen storage within the active muscle mass. Even with carbohydrate intake during exercise, the glycogen stores will not replete beyond this set maximum.\n\nCarbohydrate Intake Rate (g·h⁻¹):\n\nSets the rate (in grams per hour) at which exogenous carbohydrates (e.g., from sports drinks or gels) are ingested and become available for either direct oxidation by the muscles or for glycogen synthesis (if stores are depleted and conditions allow). Typical maximal exogenous CHO oxidation rates are often cited in the range of 60-90 g/h for single-source carbohydrates like glucose or maltodextrin (Jeukendrup & Wallis, 2005; A. Jeukendrup & Gleeson, 2019). Combinations of multiple transportable carbohydrates (e.g., glucose and fructose) can increase this to 120g/h or even slightly more (Jeukendrup, 2010).\n\n\nThe model calculates glycogen depletion based on the instantaneous rate of carbohydrate oxidation. The CHO oxidation rate itself is derived dynamically at each time step from the balance of \\(vLa_{SS}\\) and \\(vLa_{ox}\\) (as in Tab 1), but applied kinetically over time. If the modeled glycogen stores reach zero, this can trigger a simulation abortion if that termination criterion is implicitly or explicitly active (e.g., inability to maintain power due to substrate depletion).\n\n\nW’ Balance Parameters\nThis section implements a model for W’ (pronounced “W prime”), a concept central to understanding exercise tolerance above a certain metabolic threshold known as Critical Power (CP). W’ represents a finite amount of work that can be performed when exercising at intensities greater than CP (Monod & Scherrer, 1965; Poole et al., 2016; Skiba et al., 2012). Depletion of W’ is closely associated with the onset of severe fatigue and task failure.\n\nCritical Power (CP) (W) (Slider):\n\nDefines the Critical Power, which is, in theory, the highest power output that can be sustained for a very long time without a progressive loss of homeostasis or depletion of W’. It represents a critical metabolic threshold demarcating sustainable from unsustainable exercise intensities.\n\nW’ (kJ) (Slider):\n\nRepresents the total amount of work (expressed in kilojoules) that can be performed above CP before W’ is considered fully depleted. It reflects a combination of anaerobic energy capacity and tolerance for the accumulation of fatigue-related metabolites. Typical W’ values range from 10 to 30 kJ, depending on the individual’s training status and physiological profile.\n\nPmax (W) (Slider):\n\nRepresents the maximum instantaneous power an athlete can produce, typically observed during very short, all-out sprints (e.g., lasting a few seconds). This parameter is integral to the 3-parameter critical power model (which includes Pmax, CP, and W’) and is specifically used in this app for calculating MPA (Maximum Power Available) and the Strain Score (SS). These metrics draw on concepts from researchers like Hauser et al. (2014) and potentially more recent work like Kontro et al. (2025, though not in the provided citation list, the formulas in the HTML align with this type of model). Pmax is considered to represent the power capacity of the alactic (phosphagen/immediate) energy system.\n\nUse MLSS from Tab 1 as CP (Checkbox):\n\nIf checked (this is the default state), the CP value for the Tab 2 simulation is automatically set to be equal to the Maximal Lactate Steady State (MLSS) power output calculated in Tab 1. The CP slider below then becomes disabled, but will display this MLSS value. This option provides a physiologically grounded and individually determined estimate for CP, as MLSS and CP are often found to be closely related, though not always identical (Poole et al., 2016).\n\nW’ Balance Minimum (kJ) (Slider):\n\nAllows the user to define a lower threshold for W’ balance. This can be set to zero (meaning exhaustion occurs when W’ is fully depleted) or even to a negative value, which some models propose might represent a “digging deeper” capacity, though this is less common. The default in the app is -10 kJ.\n\nAbort simulation when W’ Balance falls below slider minimum (Checkbox):\n\nIf checked (default state), the simulation will automatically terminate if the calculated W’BAL (W’ balance) drops below the value specified by the “W’ Balance Minimum” slider.\n\n\nW’ Balance Model Dynamics: The app models W’ balance dynamics based on established principles ((Morton, 2008; Skiba et al., 2012) for general energy system concepts):\n\nDuring exercise at power outputs (P) greater than CP (P &gt; CP), W’ depletes linearly with the work done above CP: \\[ W'_{BAL}(t) = W'_{BAL}(previous\\_t) - (P - CP) \\cdot \\Delta t \\] where \\(W'_{BAL}(t)\\) is W’ balance at current time \\(t\\), \\(W'_{BAL}(previous\\_t)\\) is W’ balance at the previous time step, and \\(\\Delta t\\) is the time interval (1 second in this app).\nDuring exercise at power outputs (P) less than CP (P &lt; CP), W’ recovers exponentially: The rate and extent of W’ recovery depend on the magnitude of the difference between CP and the recovery power (\\(D_{CP} = CP - P_{recovery}\\)) and the total W’ capacity. A common formulation for W’ recovery is: \\[ W'_{BAL}(t) = W'_0 - (W'_0 - W'_{BAL}(previous\\_t)) \\cdot e^{-(D_{CP}/W'_0) \\cdot \\Delta t} \\] where \\(W'_0\\) is the initial (full) W’ capacity.\n\nThe MPA & Strain Score (SS) model, which is also displayed in the plot and summary, uses Pmax and the current W’ balance to provide novel metrics of fatigue and available power. The formulas used in the app’s HTML for MPA and SS are consistent with recent research by Kontro et al. (2025).\n\nMPA (Maximum Power Available): The highest power output theoretically achievable at any given moment, considering the current W’ depletion. \\[ MPA = P_{max} - (P_{max} - CP) \\cdot (W'_{EXP}/W')^2 \\] where \\(W'_{EXP}\\) is the amount of W’ expended (\\(W'_0 - W'_{BAL}\\)).\nkstrain (Strain Coefficient): A factor that modulates the perceived or physiological strain based on the current power output relative to MPA and CP. \\[ k_{strain} = (P_{max} - MPA + CP)/(P_{max} - P + CP) \\]\nSR (Strain Rate): The instantaneous rate at which strain is accumulating. \\[ SR = k_{strain} \\cdot P \\]\nSS (Strain Score): The cumulative strain experienced over the exercise bout. \\[ SS = \\sum(SR \\cdot \\Delta t) \\cdot (\\text{NormalizationFactor}) \\] The Normalization Factor, which appears to be \\((P_{max}/CP^2) \\cdot (100/3600)\\) in the app, scales the score. For instance, a common scaling aims for 1 hour of exercise at CP to yield an SS of 100.\n\n\n\nPCr and O₂ Deficit Model\nThis section of the control panel enables the simulation of phosphocreatine (PCr) dynamics within the active muscle and the associated oxygen deficit that is incurred at the onset of exercise or during transitions to higher exercise intensities. PCr is a crucial high-energy phosphate compound that provides ATP rapidly at the start of muscle contraction before oxidative phosphorylation can fully activate.\n\nResting PCr (mmol·kg⁻¹ wet muscle weight) (Slider):\n\nSets the initial concentration of PCr in the active muscle tissue at the beginning of the simulation. Typical physiological values in healthy, rested human skeletal muscle range from about 15 to 38 mmol·kg⁻¹ wet weight (R. C. Harris et al., 1976; Karlsson, 1971). Training status and muscle fiber type can influence this.\n\nP/O₂ (mol ATP · mol O₂⁻¹) (Slider):\n\nRepresents the P/O₂ ratio, which is the stoichiometry of oxidative phosphorylation: the number of moles of ATP synthesized per mole of diatomic oxygen (O₂) reduced in the mitochondria. This value is not absolutely constant but depends on the substrate being oxidized (e.g., carbohydrates vs. fats) and the coupling efficiency of the electron transport chain. It is generally accepted to be around 2.3-2.5 (or 4.6-5.0 if O refers to O₂, not O atom) when considering NADH and FADH₂ contributions. The app’s range (4.61 for pure fat to 5.0 for pure CHO) reflects O₂ (diatomic oxygen).\n\nActive Muscle Mass (kg) (Slider):\n\nSets the estimated mass (in kilograms) of the skeletal muscle actively involved in performing the cycling exercise. This is a critical parameter because PCr concentrations are typically expressed per kg of muscle mass, and the total PCr pool available is thus dependent on this value. The tooltip in the app provides research-based estimates for active muscle mass in cyclists (e.g., for male cyclists, ~27% of total body weight for seated cycling, potentially increasing to ~31.5% for standing cycling, drawing from MRI data like Janssen et al. (2000) and general exercise physiology considerations).\n\nO₂-Lactate Equiv. (β) (Informational Display Only):\n\nThis is displayed as a constant value of approximately 3.0 ml O₂·kg⁻¹ body mass·mM⁻¹ blood lactate. This represents the “oxygen equivalent of lactate accumulation,” signifying the amount of O₂ (in ml per kg of body mass) that would have been required aerobically to produce the energy equivalent to accumulating 1 mM of lactate in the blood. This concept, extensively detailed by Di Prampero (1981), is used in the model to help partition the overall O₂ deficit into components covered by PCr breakdown and by net lactate production.\n\nShow \\(\\dot{V}O_2\\) Demand Curve (Checkbox):\n\nIf checked, the simulation plot will include an additional trace representing the theoretical, instantaneous \\(\\dot{V}O_2\\) demand required to meet the energy cost of the current power output if metabolism could respond infinitely fast. The area between this demand curve and the actual (kinetically-limited) \\(\\dot{V}O_2\\) curve visually represents the accumulated oxygen deficit (when demand &gt; uptake) or oxygen surplus (during recovery when uptake &gt; demand).\n\n\nPCr Model Dynamics: The simulation models changes in the PCr store based on the dynamic balance between O₂ demand and actual O₂ uptake:\n\nPCr Depletion: When \\(\\dot{V}O_2\\) demand (calculated from the current power output using the steady-state P-\\(\\dot{V}O_2\\) relationship) exceeds the actual \\(\\dot{V}O_2\\) uptake (which is kinetically limited), an oxygen deficit occurs. A portion of the energy required to cover this deficit is supplied by the net breakdown of PCr to rapidly resynthesize ATP (PCr + ADP + H⁺ ↔︎ ATP + Cr). The amount of PCr consumed is proportional to this O₂ deficit portion that is not covered by immediate glycolysis, scaled by the P/O₂ ratio (which converts O₂ deficit to ATP equivalents).\\[ \\Delta PCr_{consumed} \\propto (\\text{O2\\_deficit\\_allocated\\_to\\_PCr}) \\cdot (P/O_2 \\text{ ratio}) \\]\nPCr Resynthesis: When actual \\(\\dot{V}O_2\\) uptake exceeds the current \\(\\dot{V}O_2\\) demand (creating an O₂ surplus, e.g., during recovery periods or when exercise intensity decreases significantly), PCr is resynthesized from creatine and ATP produced by oxidative phosphorylation. This process itself consumes ATP (and thus oxygen) and is modeled as being proportional to the O₂ surplus available for PCr resynthesis, again scaled by the P/O₂ ratio. The app’s code includes a pcrResynthesisFactor (set to 0.5), implying that only a portion of the O₂ surplus is directed towards PCr resynthesis, with the rest potentially contributing to other recovery processes. \\[ \\Delta PCr_{resynthesized} \\propto (\\text{O2\\_surplus} \\cdot \\text{pcrResynthesisFactor}) \\cdot (P/O_2 \\text{ ratio}) \\] The accumulated O₂ deficit represents the total integrated difference between oxygen demand and oxygen uptake from the start of exercise. It reflects the cumulative reliance on anaerobic energy sources (PCr hydrolysis and anaerobic glycolysis leading to lactate production) to meet the energy demands not immediately covered by aerobic metabolism. The kinetics of PCr are often faster than those of \\(\\dot{V}O_2\\) (McCann et al., 1995).\n\n\n\nModel Parameters (for Tab 2 Simulation)\nThis section provides the user with flexibility in defining the core physiological parameters for the dynamic simulation. The user can either link these parameters directly to those defined in Tab 1 (P-V̇O₂-La Dynamics) or set them independently for the simulation.\n\nUse model parameters from Tab 1 (Checkbox):\n\nChecked (Default State): When this box is checked, the fundamental physiological parameters for the Tab 2 simulation—including \\(CE\\) (or \\(CE_{Start}\\)/\\(CE_{Target}\\) if curvilinear), \\(\\dot{V}O_{2,max}\\), \\(\\dot{V}O_{2,Base}\\), \\(vLa_{max}\\), Body Mass, and all HR-related parameters (HRmax, HRBase, CEHR), as well as the curvilinear CE setting—are directly mirrored from their current values in Tab 1. The individual parameter sliders located below this checkbox in the “Individual Parameters” section will then become disabled (greyed out) but will visually reflect the values being imported from Tab 1. This is the recommended approach if the user wants to simulate the dynamic responses of an individual whose steady-state profile has already been established or explored in Tab 1. Any subsequent changes made to these parameters in Tab 1 will automatically propagate to these linked parameters in Tab 2, ensuring consistency.\nUnchecked: If this box is unchecked, the linkage to Tab 1 is broken. The individual parameter sliders in the “Individual Parameters” section (detailed below) become active, allowing the user to define a completely independent set of physiological parameters specifically for the Tab 2 simulation. This is useful if one wants to explore hypothetical scenarios or simulate an individual with a different profile without altering the settings in Tab 1.\n\nIndividual Parameter Sliders (within the “Individual Parameters” collapsible section): These sliders are active only if “Use model parameters from Tab 1” is unchecked. They allow for independent setting of:\n\nCurvilinear CE relationship (Checkbox): Toggles between linear and curvilinear P-\\(\\dot{V}O_2\\) models for the simulation.\nCE (ml·min⁻¹·W⁻¹) (Slider): For the linear CE model.\nCEStart / CETarget (ml·min⁻¹·W⁻¹) (Sliders): For the curvilinear CE model.\n\\(\\dot{V}O_{2,max}\\) (ml·min⁻¹) (Slider)\n\\(\\dot{V}O_{2,Base}\\) (ml·min⁻¹) (Slider)\nvLamax (mmol·l⁻¹·s⁻¹) (Slider)\nBody Mass (kg) (Slider)\nHRmax (bpm) (Slider)\nHRBase (bpm) (Slider)\nCEHR (bpm·W⁻¹) (Slider) These function identically to their counterparts in Tab 1 but only affect the Tab 2 simulation when the link to Tab 1 is disabled.\n\n\n\n\n\nExercise Simulation Plot (Tab 2)\nThis is a dynamic, multi-trace plot that visualizes various simulated physiological and performance parameters over the time course of the defined exercise protocol. It allows for a comprehensive view of how different systems respond and interact.\n\nX-Axis: Time (in seconds). The range of this axis can be manually adjusted using the “Display Window Settings” in the sidebar to focus on specific periods of the simulation.\nPrimary Y-Axis (Left side of plot - typically denoted as y): This axis displays parameters primarily related to power output, mechanical aspects of movement, and some physiological stores.\n\nPower (W) (Dark Grey Line): The instantaneous power output of the simulated exercise protocol at each second.\nCadence (rpm) (Light Grey Dashed Line): Displayed if cadence data is available (either from a loaded file when “Use cadence from file” is active, or the fixed cadence value if cadence dependency is enabled without file data).\nMPA (W) (Dark Grey-Blue Dashed Line): Maximum Power Available, a dynamic value calculated from the W’ balance model and Pmax, representing the highest power output theoretically achievable at that moment.\nStrain Score (Unitless) (Pink Line): The cumulative Strain Score, reflecting the integrated physiological strain based on the MPA model.\nGlycogen Stores (g) (Dark Pink Dotted Line): The modeled content of glycogen in the active muscle mass, showing depletion during exercise and potential repletion if carbohydrate intake is simulated.\n\nSecondary Y-Axis (Right side of plot - typically y2): This axis is designed to display a variety of scaled parameters, often with different units, requiring careful interpretation of their respective scales. It commonly includes:\n\nW’ Balance (kJ) (Green Line): The current remaining W’ balance.\nLactate (Muscle) (mM) (Dark Red Line): Modeled intramuscular lactate concentration.\nLactate (Blood) (mM) (Dark Red Dotted Line): Modeled blood lactate concentration, typically from a two-compartment model (muscle and blood/other tissues).\nvLaSS (mM/min) (Red Dashed Line): The instantaneous rate of lactate production (converted from mmol·l⁻¹·s⁻¹).\nvLaox (mM/min) (Light Blue Dashed Line): The instantaneous rate of lactate oxidation/elimination.\nPD (Pyruvate Deficit) (mM/min) (Purple Line): The dynamic difference \\(vLa_{ox} - vLa_{SS}\\).\nPCr Store (mM/kg) (Yellow Dotted Line): Modeled phosphocreatine concentration in the active muscle.\npHm (Unitless) (Orange Dotted Line): Modeled intramuscular pH.\nRQpredicted ⋅ 10 (Unitless) (Yellow-Orange Dashed Line): The kinetically-smoothed predicted Respiratory Quotient, scaled by a factor of 10 for better visibility on this shared axis (actual RQ values typically range from 0.7 to 1.0, potentially slightly higher during very intense exercise).\nHeart Rate ⋅ 10⁻¹ (bpm) (Dark Red Dotted Line): The simulated heart rate, scaled by a factor of 0.1 for plotting convenience (e.g., a heart rate of 150 bpm would be plotted at a Y-value of 15).\nZero Line (Thin Grey Dotted Line): A horizontal reference line at y=0 for this axis, useful for interpreting parameters like PD or W’ balance relative to baseline.\n\nTertiary Y-Axis (Right side, typically positioned further out - y3): This axis is dedicated to displaying oxygen uptake parameters.\n\n\\(\\dot{V}O_2\\) (ml/min) (Blue Line): The actual, kinetically-determined oxygen uptake at each second of the simulation.\n\\(\\dot{V}O_2\\) Demand (ml/min) (Blue Dotted Line): (Visible if “Show \\(\\dot{V}O_2\\) Demand Curve” is checked in the PCr model settings) The theoretical instantaneous \\(\\dot{V}O_2\\) that would be required to meet the energy cost of the current power output if metabolic processes could respond infinitely fast.\nO₂ Deficit Area (Light Blue Filled Area): (Visible if the \\(\\dot{V}O_2\\) Demand curve is shown) The shaded area between the \\(\\dot{V}O_2\\) Demand curve and the actual \\(\\dot{V}O_2\\) curve. This visually represents the accumulated oxygen deficit (when demand &gt; uptake) or oxygen surplus (during recovery phases when uptake &gt; demand).\nAcc. O₂ Deficit (ml) (Cyan Dotted Line): The cumulative net oxygen deficit (Total O2 Demand - Total O2 Uptake) over time.\n\n\nUsers can interact with the plot legend by clicking on trace names. This action toggles the visibility of the corresponding trace on the plot, allowing users to focus on specific parameters of interest or to declutter the view. If the simulation is terminated prematurely due to one of the set abort conditions (e.g., lactate exceeding threshold, W’ balance dropping below minimum, glycogen depletion, or complete PCr depletion), an annotation will typically appear on the plot marking the point and reason for termination.\n\n\nExercise Summary Statistics (Tab 2)\nLocated below the simulation plot, this section provides a detailed quantitative summary of the entire simulated exercise session, offering insights into overall workload, energy expenditure, fuel utilization, and various performance metrics.\n\nAverage mechanical Power (W): The time-weighted average of the power output over the duration of the simulation.\nNormalized mechanical Power (W): A power averaging method designed to provide a more physiologically relevant measure of training stress than simple average power, especially for workouts with variable intensity. It typically involves calculating a 30-second rolling average of power, raising these values to the 4th power, averaging these transformed values, and then taking the 4th root of that average. This gives more weight to higher intensity portions.\nTotal Aerobic Energy Expenditure (kcal): The gross (total) energy expended via aerobic pathways throughout the entire simulation. This is calculated from the integral of the \\(\\dot{V}O_2\\) curve over time, converted to energy units using an average caloric equivalent for oxygen (derived from the average predicted RQ over the session).\nTotal mechanical Work (kJ): The sum of (Power × time_interval) for all 1-second intervals of the simulation, converted to kilojoules. This represents the total external work performed.\nTotal metabolic Work (kJ): The sum of the net energy contributions from the three major energy systems: net aerobic metabolism, anaerobic-lactic metabolism, and anaerobic-alactic metabolism. This represents the total energy turnover above resting levels required to perform the exercise.\n\nAerobic contribution (kJ | %): The energy derived from net aerobic metabolism. This is calculated by integrating the actual \\(\\dot{V}O_2\\) curve, subtracting the integrated energy cost equivalent to maintaining \\(\\dot{V}O_{2,Base}\\) for the duration, and converting the net O₂ consumed to kJ. The percentage is relative to the Total Metabolic Work.\nAnaerobic-lactic contribution (kJ | %): The energy derived from net lactate production. This is estimated from the O₂ equivalent of gross lactate production (calculated from the integrated \\(vLa_{SS}\\) kinetics), using factors like the β-coefficient (O₂-Lactate Equiv.) to convert lactate changes into energy equivalents.\nAnaerobic-alactic contribution (kJ | %): The energy derived from the net breakdown of phosphocreatine (PCr). This is estimated from the O₂ equivalent of the total PCr utilized during the exercise bout, based on the P/O₂ ratio.\n\nηgross (%): Overall gross efficiency for the entire session, calculated as: \\[ \\eta_{gross} = (\\text{Total Mechanical Work [kJ]}) / (\\text{Total Gross Aerobic Energy Expenditure [kJ]}) \\times 100\\% \\]\nηnet (%): Overall net efficiency for the entire session, calculated as: \\[ \\eta_{net} = (\\text{Total Mechanical Work [kJ]}) / (\\text{Net Aerobic Energy Expenditure [kJ]}) \\times 100\\% \\] Where net aerobic energy expenditure excludes the energy cost associated with maintaining \\(\\dot{V}O_{2,Base}\\).\nηtotal (%): Overall total efficiency, considering all energy pathways in the denominator: \\[ \\eta_{total} = (\\text{Total Mechanical Work [kJ]}) / (\\text{Total Metabolic Work [kJ]}) \\times 100\\% \\]\nWork &gt; CP (mechanical) (kJ): The total amount of mechanical work (in kJ) performed during periods where the instantaneous power output was above the set Critical Power (CP).\nW’ Balance Drop (kJ): The difference between the initial W’ value (at the start of the simulation) and the minimum W’ balance reached at any point during the exercise.\nTotal Carbohydrate Utilization (g): The total mass of carbohydrates (in grams) estimated to have been oxidized during the simulation, based on the integrated CHO oxidation rate.\nTotal Fat Utilization (g): The total mass of fats (in grams) estimated to have been oxidized during the simulation.\nTraining Stress Score (TSS): An estimation of the overall training load or stress imposed by the simulated workout. It is typically calculated using Normalized Power, the duration of the exercise, and the individual’s Functional Threshold Power (FTP), for which the app uses the set Critical Power (CP) as a proxy. A common formula is: \\[ TSS = (\\text{Duration in seconds} \\cdot \\text{Normalized Power} \\cdot \\text{Intensity Factor}) / (\\text{FTP} \\cdot 3600) \\cdot 100 \\] Where Intensity Factor (IF) = Normalized Power / FTP.\nStrain Score (SS): The total cumulative Strain Score accumulated during the simulation, based on the model by Hauser et al. (2014) and Kontro et al. (as per HTML formulas), which considers Pmax, CP, and W’ dynamics.\n\nSSCP: The component of the total Strain Score attributed to work performed at or below CP.\nSSW’: The component of the total Strain Score attributed to the utilization of W’ (work above CP).\nSSPmax: The component of the total Strain Score attributed to very high power outputs that draw upon the Pmax capacity.\n\n\nThis comprehensive suite of tools, visualizations, and summary statistics offers a powerful platform for students, coaches, athletes, and researchers to explore, understand, and quantify the complex interplay of metabolic processes during various forms of exercise."
  }
]